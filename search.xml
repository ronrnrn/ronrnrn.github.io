<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java-AWT-Component</title>
    <url>/2024/10/16/AWTComponent/</url>
    <content><![CDATA[
        <h1 id="AWT常用组件"   >
          <a href="#AWT常用组件" class="heading-link"><i class="fas fa-link"></i></a><a href="#AWT常用组件" class="headerlink" title="AWT常用组件"></a>AWT常用组件</h1>
      
        <h2 id="基本组件"   >
          <a href="#基本组件" class="heading-link"><i class="fas fa-link"></i></a><a href="#基本组件" class="headerlink" title="基本组件"></a>基本组件</h2>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BasicComponentDemo</span> &#123;</span><br><span class="line">    <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试基本组件&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">TextArea</span> <span class="variable">ta</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextArea</span>(<span class="number">5</span>,<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">Choice</span> <span class="variable">colorChooser</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Choice</span>();</span><br><span class="line"></span><br><span class="line">    <span class="type">CheckboxGroup</span> <span class="variable">cbg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CheckboxGroup</span>();</span><br><span class="line">    <span class="type">Checkbox</span> <span class="variable">male</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Checkbox</span>(<span class="string">&quot;男&quot;</span>,cbg,<span class="literal">true</span>);</span><br><span class="line">    <span class="type">Checkbox</span> <span class="variable">female</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Checkbox</span>(<span class="string">&quot;女&quot;</span>,cbg,<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">Checkbox</span> <span class="variable">isMarried</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Checkbox</span>(<span class="string">&quot;是否已婚？&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">TextField</span> <span class="variable">tf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="number">50</span>);</span><br><span class="line">    <span class="type">Button</span> <span class="variable">ok</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;确认&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">List</span> <span class="variable">colorList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">List</span>(<span class="number">6</span>,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 组装界面</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 组装底部</span></span><br><span class="line">        <span class="type">Box</span> <span class="variable">bBox</span> <span class="operator">=</span> Box.createHorizontalBox();</span><br><span class="line">        bBox.add(tf);</span><br><span class="line">        bBox.add(ok);</span><br><span class="line"></span><br><span class="line">        frame.add(bBox,BorderLayout.SOUTH);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 组装选择部分</span></span><br><span class="line">        colorChooser.add(<span class="string">&quot;红色&quot;</span>);</span><br><span class="line">        colorChooser.add(<span class="string">&quot;蓝色&quot;</span>);</span><br><span class="line">        colorChooser.add(<span class="string">&quot;绿色&quot;</span>);</span><br><span class="line">        <span class="type">Box</span> <span class="variable">cBox</span> <span class="operator">=</span> Box.createHorizontalBox();</span><br><span class="line">        cBox.add(colorChooser);</span><br><span class="line">        cBox.add(male);</span><br><span class="line">        cBox.add(female);</span><br><span class="line">        cBox.add(isMarried);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 组装文本域和选择部分</span></span><br><span class="line">        <span class="type">Box</span> <span class="variable">topLeft</span> <span class="operator">=</span> Box.createVerticalBox();</span><br><span class="line">        topLeft.add(ta);</span><br><span class="line">        topLeft.add(cBox);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 组装顶部左边和列表框</span></span><br><span class="line">        colorList.add(<span class="string">&quot;红色&quot;</span>);</span><br><span class="line">        colorList.add(<span class="string">&quot;绿色&quot;</span>);</span><br><span class="line">        colorList.add(<span class="string">&quot;蓝色&quot;</span>);</span><br><span class="line">        <span class="type">Box</span> <span class="variable">top</span> <span class="operator">=</span> Box.createHorizontalBox();</span><br><span class="line">        top.add(topLeft);</span><br><span class="line">        top.add(colorList);</span><br><span class="line"></span><br><span class="line">        frame.add(top);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置frame为最佳大小，并且可见</span></span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">BasicComponentDemo</span>().init();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="对话框"   >
          <a href="#对话框" class="heading-link"><i class="fas fa-link"></i></a><a href="#对话框" class="headerlink" title="对话框"></a>对话框</h2>
      
        <h3 id="打开模式对话框和非模式对话框"   >
          <a href="#打开模式对话框和非模式对话框" class="heading-link"><i class="fas fa-link"></i></a><a href="#打开模式对话框和非模式对话框" class="headerlink" title="打开模式对话框和非模式对话框"></a>打开模式对话框和非模式对话框</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DialogDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试Dialog&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建2个对话框Dialog对象，一个模式，一个非模式</span></span><br><span class="line">        <span class="type">Dialog</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dialog</span>(frame, <span class="string">&quot;模式对话框&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="type">Dialog</span> <span class="variable">d2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dialog</span>(frame, <span class="string">&quot;非模式对话框&quot;</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.通过setBounds方法设置Dialog的位置以及大小</span></span><br><span class="line">        d1.setBounds(<span class="number">20</span>,<span class="number">30</span>,<span class="number">300</span>,<span class="number">200</span>);</span><br><span class="line">        d2.setBounds(<span class="number">20</span>,<span class="number">30</span>,<span class="number">300</span>,<span class="number">200</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.创建两个按钮</span></span><br><span class="line">        <span class="type">Button</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;打开模式对话框&quot;</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;打开非模式对话框&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.给两个按钮添加点击后的行为</span></span><br><span class="line">        b1.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                d1.setVisible(<span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        b2.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                d2.setVisible(<span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.把按钮添加到frame中</span></span><br><span class="line">        frame.add(b1,BorderLayout.NORTH);</span><br><span class="line">        frame.add(b2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置frame最佳大小并可见</span></span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="模式对话框与确认按钮"   >
          <a href="#模式对话框与确认按钮" class="heading-link"><i class="fas fa-link"></i></a><a href="#模式对话框与确认按钮" class="headerlink" title="模式对话框与确认按钮"></a>模式对话框与确认按钮</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DialogDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试Dialog&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建对话框Dialog对象，一个模式</span></span><br><span class="line">        <span class="type">Dialog</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dialog</span>(frame, <span class="string">&quot;模式对话框&quot;</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建一个垂直的Box容器，把一个文本框和一个按钮添加到Box容器中</span></span><br><span class="line">        <span class="type">Box</span> <span class="variable">vBox</span> <span class="operator">=</span> Box.createVerticalBox();</span><br><span class="line">        vBox.add(<span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="number">20</span>));</span><br><span class="line">        vBox.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;确认&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把Box容器添加到Dialog中</span></span><br><span class="line">        d1.add(vBox);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.通过setBounds方法设置Dialog的位置以及大小</span></span><br><span class="line">        d1.setBounds(<span class="number">20</span>,<span class="number">30</span>,<span class="number">300</span>,<span class="number">200</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.创建按钮</span></span><br><span class="line">        <span class="type">Button</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;打开模式对话框&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.给按钮添加点击后的行为</span></span><br><span class="line">        b1.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                d1.setVisible(<span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.把按钮添加到frame中</span></span><br><span class="line">        frame.add(b1,BorderLayout.NORTH);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置frame最佳大小并可见</span></span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="FileDialog"   >
          <a href="#FileDialog" class="heading-link"><i class="fas fa-link"></i></a><a href="#FileDialog" class="headerlink" title="FileDialog"></a>FileDialog</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileDialogDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试FileDialog&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建两个FileDialog对象</span></span><br><span class="line">        <span class="type">FileDialog</span> <span class="variable">f1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileDialog</span>(frame,<span class="string">&quot;选择要打开的文件&quot;</span>,FileDialog.LOAD);</span><br><span class="line">        <span class="type">FileDialog</span> <span class="variable">f2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileDialog</span>(frame,<span class="string">&quot;选择要保存的路径&quot;</span>,FileDialog.SAVE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.创建两个按钮</span></span><br><span class="line">        <span class="type">Button</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;打开文件&quot;</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;保存文件&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.给这两个按钮设置点击后的行为，获取打开或者保存的路径文件名</span></span><br><span class="line">        b1.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                f1.setVisible(<span class="literal">true</span>);    <span class="comment">// 代码会阻塞到这里</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 获取选择的路径以及文件</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">directory</span> <span class="operator">=</span> f1.getDirectory();</span><br><span class="line">                <span class="type">String</span> <span class="variable">file</span> <span class="operator">=</span> f1.getFile();</span><br><span class="line">                System.out.println(<span class="string">&quot;打开的文件路径为：&quot;</span> + directory);</span><br><span class="line">                System.out.println(<span class="string">&quot;打开的文件名称为：&quot;</span> + file);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        b2.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                f2.setVisible(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 获取选择的路径以及文件</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">directory</span> <span class="operator">=</span> f2.getDirectory();</span><br><span class="line">                <span class="type">String</span> <span class="variable">file</span> <span class="operator">=</span> f2.getFile();</span><br><span class="line">                System.out.println(<span class="string">&quot;保存的文件路径为：&quot;</span> + directory);</span><br><span class="line">                System.out.println(<span class="string">&quot;保存的文件名称为：&quot;</span> + file);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.把按钮添加到frame中</span></span><br><span class="line">        frame.add(b1,BorderLayout.NORTH);</span><br><span class="line">        frame.add(b2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置frame最佳大小并可见</span></span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="事件处理"   >
          <a href="#事件处理" class="heading-link"><i class="fas fa-link"></i></a><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h2>
      
        <h3 id="定义"   >
          <a href="#定义" class="heading-link"><i class="fas fa-link"></i></a><a href="#定义" class="headerlink" title="定义"></a>定义</h3>
      <p>当在某个组件上发生某些操作的时候，会自动触发一段代码的执行</p>

        <h3 id="事件模型"   >
          <a href="#事件模型" class="heading-link"><i class="fas fa-link"></i></a><a href="#事件模型" class="headerlink" title="事件模型"></a>事件模型</h3>
      
        <h4 id="案例：单击确认按钮，输出”Hello-World”"   >
          <a href="#案例：单击确认按钮，输出”Hello-World”" class="heading-link"><i class="fas fa-link"></i></a><a href="#案例：单击确认按钮，输出”Hello-World”" class="headerlink" title="案例：单击确认按钮，输出”Hello World”"></a>案例：单击确认按钮，输出”Hello World”</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EventDemo</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Frame</span> <span class="variable">f</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;测试事件&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Button</span> <span class="variable">ok</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;确认&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">TextField</span> <span class="variable">tf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 注册事件监听器</span></span><br><span class="line">        ok.addActionListener(<span class="keyword">new</span> <span class="title class_">OkListener</span>());</span><br><span class="line">        f.add(tf);</span><br><span class="line">        f.add(ok,BorderLayout.SOUTH);</span><br><span class="line">        f.pack();</span><br><span class="line">        f.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义事件监听器类</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">OkListener</span> <span class="keyword">implements</span> <span class="title class_">ActionListener</span> &#123;</span><br><span class="line">        <span class="comment">// 下面定义的方法就是事件处理器，用于响应特定的事件</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;用户单击了ok按钮&quot;</span>);</span><br><span class="line">            tf.setText(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">EventDemo</span>().init();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="事件和事件监听器"   >
          <a href="#事件和事件监听器" class="heading-link"><i class="fas fa-link"></i></a><a href="#事件和事件监听器" class="headerlink" title="事件和事件监听器"></a>事件和事件监听器</h3>
      
        <h4 id="案例一-窗口组件响应"   >
          <a href="#案例一-窗口组件响应" class="heading-link"><i class="fas fa-link"></i></a><a href="#案例一-窗口组件响应" class="headerlink" title="案例一-窗口组件响应"></a>案例一-窗口组件响应</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WindJone1</span> <span class="keyword">extends</span> <span class="title class_">Frame</span> <span class="keyword">implements</span> <span class="title class_">WindowListener</span> &#123;</span><br><span class="line">    WindJone1()&#123;</span><br><span class="line">        <span class="comment">// 设置窗口名称</span></span><br><span class="line">        <span class="built_in">this</span>.setTitle(<span class="string">&quot;窗口监听&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 为窗口添加监听</span></span><br><span class="line">        <span class="built_in">this</span>.addWindowListener(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口大小和位置</span></span><br><span class="line">        <span class="built_in">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">300</span>,<span class="number">300</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口可见性</span></span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 实现接口中的方法</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowActivated</span><span class="params">(WindowEvent e)</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;激活&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosed</span><span class="params">(WindowEvent e)</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;释放&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;菜单关闭&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.dispose();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowDeactivated</span><span class="params">(WindowEvent e)</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;失去焦点&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowDeiconified</span><span class="params">(WindowEvent e)</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;到最大化&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowIconified</span><span class="params">(WindowEvent e)</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;到最小化&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowOpened</span><span class="params">(WindowEvent e)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;打开&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">WindJone1</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="案例二-按钮监听"   >
          <a href="#案例二-按钮监听" class="heading-link"><i class="fas fa-link"></i></a><a href="#案例二-按钮监听" class="headerlink" title="案例二-按钮监听"></a>案例二-按钮监听</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WindJone2</span> <span class="keyword">extends</span> <span class="title class_">Frame</span> <span class="keyword">implements</span> <span class="title class_">ActionListener</span> &#123;</span><br><span class="line">    <span class="comment">// 定义两个按钮</span></span><br><span class="line">    <span class="type">Button</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;确认&quot;</span>);</span><br><span class="line">    <span class="type">Button</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;退出&quot;</span>);</span><br><span class="line"></span><br><span class="line">    WindJone2()&#123;</span><br><span class="line">        <span class="comment">// 设置窗口名称</span></span><br><span class="line">        <span class="built_in">this</span>.setTitle(<span class="string">&quot;进入系统&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将按钮添加到窗口中</span></span><br><span class="line">        <span class="built_in">this</span>.add(b1);</span><br><span class="line">        <span class="built_in">this</span>.add(b2,BorderLayout.SOUTH);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 为按钮添加监听</span></span><br><span class="line">        b1.addActionListener(<span class="built_in">this</span>);</span><br><span class="line">        b2.addActionListener(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口位置和大小</span></span><br><span class="line">        <span class="built_in">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">300</span>,<span class="number">300</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口可见性</span></span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实现ActionListener接口中的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(e.getSource() == b1)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;进入系统&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;退出系统&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">WindJone2</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="案例三-为文本框编写处理事件"   >
          <a href="#案例三-为文本框编写处理事件" class="heading-link"><i class="fas fa-link"></i></a><a href="#案例三-为文本框编写处理事件" class="headerlink" title="案例三-为文本框编写处理事件"></a>案例三-为文本框编写处理事件</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WinText</span> <span class="keyword">extends</span> <span class="title class_">Frame</span> <span class="keyword">implements</span> <span class="title class_">TextListener</span> &#123;</span><br><span class="line">    <span class="comment">// 定义一个文本组件</span></span><br><span class="line">    <span class="type">TextArea</span> <span class="variable">ta</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextArea</span>(<span class="string">&quot;请输入想说的话&quot;</span>);</span><br><span class="line">    WinText()&#123;</span><br><span class="line">        <span class="comment">// 设置窗口名称</span></span><br><span class="line">        <span class="built_in">this</span>.setTitle(<span class="string">&quot;监听文本框&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将文本组件添加到窗口中</span></span><br><span class="line">        <span class="built_in">this</span>.add(ta);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置文字样式</span></span><br><span class="line">        <span class="type">Font</span> <span class="variable">f</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;楷体&quot;</span>,Font.ITALIC + Font.BOLD,<span class="number">18</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将文字添加到文本组件中</span></span><br><span class="line">        ta.setFont(f);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 为文本组件添加监听</span></span><br><span class="line">        ta.addTextListener(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置文本组件内的内容颜色</span></span><br><span class="line">        ta.setForeground(Color.blue);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口大小和位置</span></span><br><span class="line">        <span class="built_in">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">450</span>,<span class="number">400</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口可见性</span></span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实现接口中的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">textValueChanged</span><span class="params">(TextEvent e)</span>&#123;</span><br><span class="line">        System.out.println(ta.getText());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">WinText</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="事件适配器"   >
          <a href="#事件适配器" class="heading-link"><i class="fas fa-link"></i></a><a href="#事件适配器" class="headerlink" title="事件适配器"></a>事件适配器</h3>
      
        <h2 id="菜单"   >
          <a href="#菜单" class="heading-link"><i class="fas fa-link"></i></a><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h2>
      
        <h3 id="基本使用"   >
          <a href="#基本使用" class="heading-link"><i class="fas fa-link"></i></a><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SimpleMenu</span> &#123;</span><br><span class="line">    <span class="comment">// 创建窗口</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试菜单相关组件&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建菜单条</span></span><br><span class="line">    <span class="type">MenuBar</span> <span class="variable">mb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MenuBar</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建菜单组件</span></span><br><span class="line">    <span class="type">Menu</span> <span class="variable">fileMenu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Menu</span>(<span class="string">&quot;文件&quot;</span>);</span><br><span class="line">    <span class="type">Menu</span> <span class="variable">editMenu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Menu</span>(<span class="string">&quot;编辑&quot;</span>);</span><br><span class="line">    <span class="type">Menu</span> <span class="variable">formatMenu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Menu</span>(<span class="string">&quot;格式&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 菜单项组件</span></span><br><span class="line">    <span class="type">MenuItem</span> <span class="variable">auto</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MenuItem</span>(<span class="string">&quot;自动换行&quot;</span>);</span><br><span class="line">    <span class="type">MenuItem</span> <span class="variable">copy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MenuItem</span>(<span class="string">&quot;复制&quot;</span>);</span><br><span class="line">    <span class="type">MenuItem</span> <span class="variable">paste</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MenuItem</span>(<span class="string">&quot;粘贴&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">MenuItem</span> <span class="variable">comment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MenuItem</span>(<span class="string">&quot;注释&quot;</span>,<span class="keyword">new</span> <span class="title class_">MenuShortcut</span>(KeyEvent.VK_Q,<span class="literal">true</span>));   <span class="comment">// 关联快捷键</span></span><br><span class="line">    <span class="type">MenuItem</span> <span class="variable">cancelComment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MenuItem</span>(<span class="string">&quot;取消注释&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">TextArea</span> <span class="variable">ta</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextArea</span>(<span class="number">6</span>,<span class="number">40</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 组装视图</span></span><br><span class="line">        comment.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                ta.append(<span class="string">&quot;您点击了菜单项：&quot;</span> + e.getActionCommand() + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        formatMenu.add(comment);</span><br><span class="line">        formatMenu.add(cancelComment);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 组装编辑菜单</span></span><br><span class="line">        editMenu.add(auto);</span><br><span class="line">        editMenu.add(copy);</span><br><span class="line">        editMenu.add(paste);</span><br><span class="line">        editMenu.add(formatMenu);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 组装菜单条</span></span><br><span class="line">        mb.add(fileMenu);</span><br><span class="line">        mb.add(editMenu);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把菜单条放入frame中</span></span><br><span class="line">        frame.setMenuBar(mb);</span><br><span class="line"></span><br><span class="line">        frame.add(ta);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置frame最佳大小并可见</span></span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">SimpleMenu</span>().init();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="PopupMenu"   >
          <a href="#PopupMenu" class="heading-link"><i class="fas fa-link"></i></a><a href="#PopupMenu" class="headerlink" title="PopupMenu"></a>PopupMenu</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PopupMenuDemo</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试PopupMenu&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建文本域</span></span><br><span class="line">    <span class="type">TextArea</span> <span class="variable">ta</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextArea</span>(<span class="string">&quot;Default Text...&quot;</span>,<span class="number">6</span>,<span class="number">40</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建Panel容器</span></span><br><span class="line">    <span class="type">Panel</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Panel</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建PopupMenu</span></span><br><span class="line">    <span class="type">PopupMenu</span> <span class="variable">pm</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PopupMenu</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建菜单项</span></span><br><span class="line">    <span class="type">MenuItem</span> <span class="variable">comment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MenuItem</span>(<span class="string">&quot;注释&quot;</span>);</span><br><span class="line">    <span class="type">MenuItem</span> <span class="variable">cancelComment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MenuItem</span>(<span class="string">&quot;取消注释&quot;</span>);</span><br><span class="line">    <span class="type">MenuItem</span> <span class="variable">copy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MenuItem</span>(<span class="string">&quot;复制&quot;</span>);</span><br><span class="line">    <span class="type">MenuItem</span> <span class="variable">save</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MenuItem</span>(<span class="string">&quot;保存&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 组装视图</span></span><br><span class="line">        <span class="type">ActionListener</span> <span class="variable">listener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">actionCommand</span> <span class="operator">=</span> e.getActionCommand();</span><br><span class="line">                ta.append(<span class="string">&quot;您点击了：&quot;</span> + actionCommand + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        comment.addActionListener(listener);</span><br><span class="line">        cancelComment.addActionListener(listener);</span><br><span class="line">        copy.addActionListener(listener);</span><br><span class="line">        save.addActionListener(listener);</span><br><span class="line"></span><br><span class="line">        pm.add(comment);</span><br><span class="line">        pm.add(cancelComment);</span><br><span class="line">        pm.add(copy);</span><br><span class="line">        pm.add(save);</span><br><span class="line"></span><br><span class="line">        p.add(pm);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置panel的大小</span></span><br><span class="line">        p.setPreferredSize(<span class="keyword">new</span> <span class="title class_">Dimension</span>(<span class="number">400</span>,<span class="number">300</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 给panel注册鼠标事件，监听用户释放鼠标的动作，展示菜单</span></span><br><span class="line">        p.addMouseListener(<span class="keyword">new</span> <span class="title class_">MouseAdapter</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">mouseReleased</span><span class="params">(MouseEvent e)</span> &#123;</span><br><span class="line">                <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> e.isPopupTrigger();</span><br><span class="line">                <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                    <span class="comment">// 显示PopupMenu</span></span><br><span class="line">                     pm.show(p,e.getX(),e.getY());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 放置ta和p</span></span><br><span class="line">        frame.add(ta);</span><br><span class="line">        frame.add(p,BorderLayout.SOUTH);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置frame最佳大小，并可见</span></span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">PopupMenuDemo</span>().init();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="绘图"   >
          <a href="#绘图" class="heading-link"><i class="fas fa-link"></i></a><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2>
      ]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>AWT</tag>
      </tags>
  </entry>
  <entry>
    <title>Bootstrap</title>
    <url>/2024/10/16/Bootstrap/</url>
    <content><![CDATA[
        <h1 id="Bootstrap"   >
          <a href="#Bootstrap" class="heading-link"><i class="fas fa-link"></i></a><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h1>
      
        <h2 id="Bootstrap-的页面模板"   >
          <a href="#Bootstrap-的页面模板" class="heading-link"><i class="fas fa-link"></i></a><a href="#Bootstrap-的页面模板" class="headerlink" title="Bootstrap 的页面模板"></a>Bootstrap 的页面模板</h2>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./dist/css/bootstrap.min.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./dist/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h2 id="布局容器"   >
          <a href="#布局容器" class="heading-link"><i class="fas fa-link"></i></a><a href="#布局容器" class="headerlink" title="布局容器"></a>布局容器</h2>
      
        <h3 id="container-类用于固定宽度并支持响应式布局的容器"   >
          <a href="#container-类用于固定宽度并支持响应式布局的容器" class="heading-link"><i class="fas fa-link"></i></a><a href="#container-类用于固定宽度并支持响应式布局的容器" class="headerlink" title="container 类用于固定宽度并支持响应式布局的容器"></a>container 类用于固定宽度并支持响应式布局的容器</h3>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./dist/css/bootstrap.min.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: thistle; height: 500px&quot;</span>&gt;</span></span><br><span class="line">      .container类用于固定宽度并支持响应式布局的容器</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="container-fluid-用于-100-宽度，占据全部-viewport-的容器"   >
          <a href="#container-fluid-用于-100-宽度，占据全部-viewport-的容器" class="heading-link"><i class="fas fa-link"></i></a><a href="#container-fluid-用于-100-宽度，占据全部-viewport-的容器" class="headerlink" title="container-fluid 用于 100%宽度，占据全部 viewport 的容器"></a>container-fluid 用于 100%宽度，占据全部 viewport 的容器</h3>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./dist/css/bootstrap.min.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">style</span>=<span class="string">&quot;background-color: thistle; height: 500px&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      .container-fluid用于100%宽度，占据全部viewport的容器</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h2 id="栅格网格系统"   >
          <a href="#栅格网格系统" class="heading-link"><i class="fas fa-link"></i></a><a href="#栅格网格系统" class="headerlink" title="栅格网格系统"></a>栅格网格系统</h2>
      
        <h3 id="列组合-列的总数不超过-12"   >
          <a href="#列组合-列的总数不超过-12" class="heading-link"><i class="fas fa-link"></i></a><a href="#列组合-列的总数不超过-12" class="headerlink" title="列组合(列的总数不超过 12)"></a>列组合(列的总数不超过 12)</h3>
      
        <h4 id="示例一"   >
          <a href="#示例一" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一" class="headerlink" title="示例一"></a>示例一</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./dist/css/bootstrap.min.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 布局容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 行元素 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 列元素 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: deepskyblue&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-8&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: bisque&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="示例二"   >
          <a href="#示例二" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例二" class="headerlink" title="示例二"></a>示例二</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./dist/css/bootstrap.min.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 布局容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 行元素 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 列元素 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: deepskyblue&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-8&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: bisque&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 列组合 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 一等分 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: mediumslateblue&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: burlywood&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: indianred&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkgoldenrod&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkkhaki&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkslateblue&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: mediumslateblue&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: burlywood&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: indianred&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkgoldenrod&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkkhaki&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkslateblue&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 二等分 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-6&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkmagenta&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-6&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkorange&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 三等分 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkred&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkcyan&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkgreen&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="示例三-超过-12-则会换行显示"   >
          <a href="#示例三-超过-12-则会换行显示" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例三-超过-12-则会换行显示" class="headerlink" title="示例三(超过 12 则会换行显示)"></a>示例三(超过 12 则会换行显示)</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./dist/css/bootstrap.min.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 布局容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 行元素 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 列元素 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: deepskyblue&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-8&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: bisque&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkgoldenrod&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="列偏移"   >
          <a href="#列偏移" class="heading-link"><i class="fas fa-link"></i></a><a href="#列偏移" class="headerlink" title="列偏移"></a>列偏移</h3>
      
        <h4 id="示例一-列偏移两格"   >
          <a href="#示例一-列偏移两格" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一-列偏移两格" class="headerlink" title="示例一(列偏移两格)"></a>示例一(列偏移两格)</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./dist/css/bootstrap.min.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 布局容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 行元素 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 列元素 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: deepskyblue&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 列偏移两格 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;col-md-2 col-md-offset-2&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;background-color: deepskyblue&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">          2</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: deepskyblue&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="列排序"   >
          <a href="#列排序" class="heading-link"><i class="fas fa-link"></i></a><a href="#列排序" class="headerlink" title="列排序"></a>列排序</h3>
      
        <h4 id="示例一-1"   >
          <a href="#示例一-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一-1" class="headerlink" title="示例一"></a>示例一</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./dist/css/bootstrap.min.css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 列排序 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 布局容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 行元素 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 列元素 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: deepskyblue&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-2 col-md-push-2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkkhaki&quot;</span>&gt;</span></span><br><span class="line">          2</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkorchid&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkmagenta&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="列嵌套"   >
          <a href="#列嵌套" class="heading-link"><i class="fas fa-link"></i></a><a href="#列嵌套" class="headerlink" title="列嵌套"></a>列嵌套</h3>
      
        <h4 id="示例一-父级-div-有内容则换行显示"   >
          <a href="#示例一-父级-div-有内容则换行显示" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一-父级-div-有内容则换行显示" class="headerlink" title="示例一(父级 div 有内容则换行显示)"></a>示例一(父级 div 有内容则换行显示)</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./dist/css/bootstrap.min.css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 列嵌套 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 布局容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 行元素 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 列元素 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-6&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: deepskyblue&quot;</span>&gt;</span></span><br><span class="line">          6</span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkmagenta&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-8&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkmagenta&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-6&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkorange&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="示例二-父级-div-无内容则覆盖"   >
          <a href="#示例二-父级-div-无内容则覆盖" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例二-父级-div-无内容则覆盖" class="headerlink" title="示例二(父级 div 无内容则覆盖)"></a>示例二(父级 div 无内容则覆盖)</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./dist/css/bootstrap.min.css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 列嵌套 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 布局容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 行元素 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 列元素 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-6&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: deepskyblue&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkmagenta&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-8&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkmagenta&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-6&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkorange&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="示例三-大屏幕占-3-格，小屏幕占-6-格"   >
          <a href="#示例三-大屏幕占-3-格，小屏幕占-6-格" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例三-大屏幕占-3-格，小屏幕占-6-格" class="headerlink" title="示例三(大屏幕占 3 格，小屏幕占 6 格)"></a>示例三(大屏幕占 3 格，小屏幕占 6 格)</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./dist/css/bootstrap.min.css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 列嵌套 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 布局容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 行元素 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 列元素 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-3 col-sm-6&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkorange&quot;</span>&gt;</span></span><br><span class="line">          大屏幕占3格，小屏幕占6格</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-3 col-sm-6&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkorange&quot;</span>&gt;</span></span><br><span class="line">          大屏幕占3格，小屏幕占6格</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-3 col-sm-6&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkorange&quot;</span>&gt;</span></span><br><span class="line">          大屏幕占3格，小屏幕占6格</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-3 col-sm-6&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkorange&quot;</span>&gt;</span></span><br><span class="line">          大屏幕占3格，小屏幕占6格</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>
]]></content>
      <categories>
        <category>Bootstrap</category>
      </categories>
      <tags>
        <tag>Bootstrap</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue3中引入BalmUI</title>
    <url>/2024/10/16/Balm-UI%E6%BA%90%E7%A0%81%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[
        <h1 id="BalmUI-源码示例"   >
          <a href="#BalmUI-源码示例" class="heading-link"><i class="fas fa-link"></i></a><a href="#BalmUI-源码示例" class="headerlink" title="BalmUI 源码示例"></a>BalmUI 源码示例</h1>
      
        <h2 id="test-vue"   >
          <a href="#test-vue" class="heading-link"><i class="fas fa-link"></i></a><a href="#test-vue" class="headerlink" title="test.vue"></a>test.vue</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;test&quot;&gt;</span><br><span class="line">    &lt;h1&gt;This is an test page&lt;/h1&gt;</span><br><span class="line">    &lt;!-- Add a test button --&gt;</span><br><span class="line">    &lt;ui-button @click=&quot;showGreeting&quot;&gt;Click Me&lt;/ui-button&gt;</span><br><span class="line">    &lt;div v-if=&quot;isShowGreeting&quot; class=&quot;greeting&quot;&gt;你好&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">    const isShowGreeting = ref(false);</span><br><span class="line">    const showGreeting = () =&gt; &#123;</span><br><span class="line">      isShowGreeting.value = true;</span><br><span class="line">    &#125;;</span><br><span class="line">    return &#123;</span><br><span class="line">      isShowGreeting,</span><br><span class="line">      showGreeting,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.greeting &#123;</span><br><span class="line">  margin-top: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>
]]></content>
      <categories>
        <category>BalmUI</category>
      </categories>
      <tags>
        <tag>BalmUI</tag>
      </tags>
  </entry>
  <entry>
    <title>CMD快捷指令汇总</title>
    <url>/2024/10/16/CMD%E5%BF%AB%E6%8D%B7%E6%8C%87%E4%BB%A4%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[
        <h1 id="CMD-快捷指令汇总"   >
          <a href="#CMD-快捷指令汇总" class="heading-link"><i class="fas fa-link"></i></a><a href="#CMD-快捷指令汇总" class="headerlink" title="CMD 快捷指令汇总"></a>CMD 快捷指令汇总</h1>
      
        <h2 id="查看所有接口-WLAN-上的配置文件："   >
          <a href="#查看所有接口-WLAN-上的配置文件：" class="heading-link"><i class="fas fa-link"></i></a><a href="#查看所有接口-WLAN-上的配置文件：" class="headerlink" title="查看所有接口 WLAN 上的配置文件："></a>查看所有接口 WLAN 上的配置文件：</h2>
      
    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>netsh wlan show profile(s)</p>
    </div>
  


        <h2 id="查看-WLAN-配置文件已保存的密码："   >
          <a href="#查看-WLAN-配置文件已保存的密码：" class="heading-link"><i class="fas fa-link"></i></a><a href="#查看-WLAN-配置文件已保存的密码：" class="headerlink" title="查看 WLAN 配置文件已保存的密码："></a>查看 WLAN 配置文件已保存的密码：</h2>
      
    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>netsh wlan show profile(s) key=clear</p>
    </div>
  


        <h2 id="从接口-WLAN-中删除配置文件："   >
          <a href="#从接口-WLAN-中删除配置文件：" class="heading-link"><i class="fas fa-link"></i></a><a href="#从接口-WLAN-中删除配置文件：" class="headerlink" title="从接口 WLAN 中删除配置文件："></a>从接口 WLAN 中删除配置文件：</h2>
      
    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>netsh wlan delete profile(s) name=”profile name”</p>
    </div>
  
]]></content>
      <categories>
        <category>cmd</category>
      </categories>
      <tags>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS-Intro</title>
    <url>/2024/10/16/CSSIntro/</url>
    <content><![CDATA[
        <h1 id="CSS"   >
          <a href="#CSS" class="heading-link"><i class="fas fa-link"></i></a><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1>
      
        <h2 id="Button"   >
          <a href="#Button" class="heading-link"><i class="fas fa-link"></i></a><a href="#Button" class="headerlink" title="Button"></a>Button</h2>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.subscribe-button</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">36px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">2px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-right</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.join-button</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-color</span>: <span class="built_in">rgb</span>(<span class="number">157</span>, <span class="number">157</span>, <span class="number">217</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-style</span>: solid;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-width</span>: <span class="number">2px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">204</span>, <span class="number">204</span>, <span class="number">225</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">36px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">2px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.tweet-button</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">110</span>, <span class="number">110</span>, <span class="number">235</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">36px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-left</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;subscribe-button&quot;</span>&gt;</span></span><br><span class="line">  SUBSCRIBE</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;join-button&quot;</span>&gt;</span></span><br><span class="line">  JOIN</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;tweet-button&quot;</span>&gt;</span></span><br><span class="line">  Tweet</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h2 id="hover-transition-shadow"   >
          <a href="#hover-transition-shadow" class="heading-link"><i class="fas fa-link"></i></a><a href="#hover-transition-shadow" class="headerlink" title="hover | transition | shadow"></a>hover | transition | shadow</h2>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.subscribe-button</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">36px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">2px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-right</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">transition</span>: opacity <span class="number">0.15s</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.subscribe-button</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* pseudo-class */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.subscribe-button</span><span class="selector-pseudo">:active</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* click */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">opacity</span>: <span class="number">0.5</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.join-button</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-color</span>: <span class="built_in">rgb</span>(<span class="number">157</span>, <span class="number">157</span>, <span class="number">217</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-style</span>: solid;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-width</span>: <span class="number">2px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">204</span>, <span class="number">204</span>, <span class="number">225</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">36px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">2px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">transition</span>: background-color <span class="number">0.15s</span>,</span></span><br><span class="line"><span class="language-css">    color <span class="number">0.15s</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.join-button</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">157</span>, <span class="number">157</span>, <span class="number">217</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.join-button</span><span class="selector-pseudo">:active</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">opacity</span>: <span class="number">0.7</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.tweet-button</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">110</span>, <span class="number">110</span>, <span class="number">235</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">36px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-left</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">transition</span>: box-shadow <span class="number">0.15s</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.tweet-button</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">box-shadow</span>:  <span class="number">5px</span> <span class="number">5px</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">15</span>);</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;subscribe-button&quot;</span>&gt;</span></span><br><span class="line">  SUBSCRIBE</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;join-button&quot;</span>&gt;</span></span><br><span class="line">  JOIN</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;tweet-button&quot;</span>&gt;</span></span><br><span class="line">  Tweet</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></div></figure>]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS效果与书签</title>
    <url>/2024/10/16/CSS%E6%95%88%E6%9E%9C%E4%B9%A6%E7%AD%BE/</url>
    <content><![CDATA[
        <h2 id="CSS-实现-3D-旋转效果动画"   >
          <a href="#CSS-实现-3D-旋转效果动画" class="heading-link"><i class="fas fa-link"></i></a><a href="#CSS-实现-3D-旋转效果动画" class="headerlink" title="CSS 实现 3D 旋转效果动画"></a>CSS 实现 3D 旋转效果动画</h2>
      <p><span class="exturl"><a class="exturl__link"   href="https://x.st/spinning-diagrams-with-css/" >网址</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言笔记(上)</title>
    <url>/2024/10/16/C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0(%E4%B8%8A)/</url>
    <content><![CDATA[
        <h2 id="第一个程式"   >
          <a href="#第一个程式" class="heading-link"><i class="fas fa-link"></i></a><a href="#第一个程式" class="headerlink" title="第一个程式"></a>第一个程式</h2>
      
        <h3 id="Hello-World"   >
          <a href="#Hello-World" class="heading-link"><i class="fas fa-link"></i></a><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3>
      <p>Ex：</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	print(<span class="string">&quot;Hello World!\n&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>1、程式进入点 Entry Point</p>
<ul>
<li>从左花括号“{”后开始执行</li>
</ul>
<p>2、述句 Statement</p>
<ul>
<li>分号“;”代表句子的结束</li>
</ul>
<p>3、区块 Block</p>
<ul>
<li>花括号“{}”表示一个区块的开始与结束</li>
</ul>
<p>4、内建函式 Built-in Function</p>
<ul>
<li><p>printf的功能是将字串印在屏幕上</p>
</li>
<li><p>字串用双引号表示</p>
</li>
</ul>
<p>5、程式的结束</p>
<ul>
<li><p>程式的正常结束在Main里面的return指令</p>
</li>
<li><p>0表示程式成功执行完毕</p>
</li>
</ul>

        <h3 id="字元的跳脱"   >
          <a href="#字元的跳脱" class="heading-link"><i class="fas fa-link"></i></a><a href="#字元的跳脱" class="headerlink" title="字元的跳脱"></a>字元的跳脱</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line">跳脱序列 | 代表字元     (*)</span><br><span class="line">——————————————————</span><br><span class="line">\n      | 换行</span><br><span class="line">\<span class="string">&quot;      | 双引号</span></span><br><span class="line"><span class="string">\\      | 反斜线</span></span><br><span class="line"><span class="string">\&#x27;      | 单引号</span></span><br><span class="line"><span class="string">\t      | 跳位</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">(*) 跳脱序列 Escape Sequence</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="简单的文字图形练习"   >
          <a href="#简单的文字图形练习" class="heading-link"><i class="fas fa-link"></i></a><a href="#简单的文字图形练习" class="headerlink" title="简单的文字图形练习"></a>简单的文字图形练习</h3>
      <p>1、写法一</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;H     H     A\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;H     H    A A\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;HHHHHHH   A   A\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;H     H  AAAAAAA\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;H     H  A     A\n&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>每行用一个printf句子，共5句</li>
</ul>
<p>2、写法二</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;H     H     A\nH     H    A A\nHHHHHHH   A   A\nH     H  AAAAAAA\nH     H  A     A\n&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>用一个printf句子，中间用\n隔开</li>
</ul>
<p>3、写法三</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;H     H     A\n&quot;</span></span><br><span class="line">			<span class="string">&quot;H     H    A A\n&quot;</span></span><br><span class="line">			<span class="string">&quot;HHHHHHH   A   A\n&quot;</span></span><br><span class="line">			<span class="string">&quot;H     H  AAAAAAA\n&quot;</span></span><br><span class="line">			<span class="string">&quot;H     H  A     A\n&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>用一个printf句子，5个字符串可换行</li>
</ul>

        <h3 id="求两个数字的和练习"   >
          <a href="#求两个数字的和练习" class="heading-link"><i class="fas fa-link"></i></a><a href="#求两个数字的和练习" class="headerlink" title="求两个数字的和练习"></a>求两个数字的和练习</h3>
      <p>1、写法一</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> integer1;</span><br><span class="line">	<span class="type">int</span> integer2;</span><br><span class="line">	<span class="type">int</span> sum;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the first number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;integer1);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the second number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;integer2);</span><br><span class="line">	sum = integer1 + integer2;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Sum is %d.&quot;</span>,sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>2、简化写法</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> integer1,integer2,sum;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the first number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;integer1);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the second number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;integer2);</span><br><span class="line">	sum = integer1 + integer2;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Sum is %d.&quot;</span>,sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>3、变数定义</p>
<p>(1) int 整型</p>
<p>Ex：</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line">—————</span><br><span class="line">|<span class="type">int</span>|</span><br><span class="line">—————</span><br><span class="line"></span><br><span class="line">定义一个<span class="type">int</span>空间，用于存放一个整数</span><br></pre></td></tr></table></div></figure>

<p>4、从键盘输入整数</p>
<ul>
<li><p>scanf表示从键盘读入资料</p>
</li>
<li><p>%d表示十进位整数</p>
</li>
<li><p>&amp;是取址运算子</p>
</li>
</ul>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line">（记忆方法） 输入一个值%d，拿出一把钥匙&amp;，打开一扇门x</span><br></pre></td></tr></table></div></figure>

<p>5、计算数字和</p>
<ul>
<li>=是指定运算子，将右边数值算出后，指定为左边的变数内容</li>
</ul>

        <h3 id="求三个数字的和练习"   >
          <a href="#求三个数字的和练习" class="heading-link"><i class="fas fa-link"></i></a><a href="#求三个数字的和练习" class="headerlink" title="求三个数字的和练习"></a>求三个数字的和练习</h3>
      <p>1、写法一</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> integer1,integer2,integer3,sum;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the first number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;integer1);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the second number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;integer2);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the third number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;integer3);</span><br><span class="line">	sum = integer1 + integer2 + integer3;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Sum is %d.&quot;</span>,sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>2、写法二</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> integer, sum;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the first number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;integer);</span><br><span class="line">	sum = integer;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the second number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;integer);</span><br><span class="line">	sum = sum + integer;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the third number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;integer);</span><br><span class="line">	sum = sum + integer;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Sum is %d.&quot;</span>,sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(记忆方法) 定义，提示，输入，计算，输出</li>
</ul>

        <h3 id="数值交换"   >
          <a href="#数值交换" class="heading-link"><i class="fas fa-link"></i></a><a href="#数值交换" class="headerlink" title="数值交换"></a>数值交换</h3>
      <p>1、写法一</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> integer1,integer2,temp;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the first number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;integer1);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the second number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;integer2);</span><br><span class="line">	temp = integer1;</span><br><span class="line">	integer1 = integer2;</span><br><span class="line">	integer2 = temp;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Integer1 is: %d\n&quot;</span>,integer1);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Integer2 is: %d\n&quot;</span>,integer2);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(方法) 新增一个变量Temp</li>
</ul>
<p>2、写法二</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> integer1,integer2;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the first number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;integer1);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the second number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;integer2);</span><br><span class="line">	integer1 = integer1 + integer2;</span><br><span class="line">	integer2 = integer1 - integer2;</span><br><span class="line">	integer1 = integer1 - integer2;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Integer1 is: %d\n&quot;</span>,integer1);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Integer2 is: %d\n&quot;</span>,integer2);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(方法) 不添加变量，直接数值计算</li>
</ul>

        <h3 id="程式写作风格初探"   >
          <a href="#程式写作风格初探" class="heading-link"><i class="fas fa-link"></i></a><a href="#程式写作风格初探" class="headerlink" title="程式写作风格初探"></a>程式写作风格初探</h3>
      <ul>
<li>工整简洁的程式码</li>
</ul>
<p>1、程式写作风格 Coding Style</p>
<ul>
<li><p>分号后换一行，容易阅读</p>
</li>
<li><p>每句前面有固定留白(缩排)，可用跳位符Tab键</p>
</li>
<li><p>每个区块的开头跟结尾要换行</p>
</li>
</ul>

        <h2 id="资料型别简介"   >
          <a href="#资料型别简介" class="heading-link"><i class="fas fa-link"></i></a><a href="#资料型别简介" class="headerlink" title="资料型别简介"></a>资料型别简介</h2>
      <ul>
<li>资料型别 Data Type</li>
</ul>
<p>1、资料的储存</p>
<ul>
<li><p>以位元组Byte为单位</p>
</li>
<li><p>1Byte=8bit</p>
</li>
<li><p>1bit表示0或1两种值</p>
</li>
</ul>
<p>2、C语言内建常建资料型别</p>
<p>Ex:</p>
<div class="table-container"><table>
<thead>
<tr>
<th align="center">资料型别</th>
<th align="center">名称</th>
<th align="center">大小</th>
</tr>
</thead>
<tbody><tr>
<td align="center">短整型</td>
<td align="center">short int</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">整型</td>
<td align="center">int</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">长整型</td>
<td align="center">long int</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">字元</td>
<td align="center">char</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">单精度浮点数</td>
<td align="center">float</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">倍精度浮点数</td>
<td align="center">double</td>
<td align="center">8</td>
</tr>
<tr>
<td align="center">无</td>
<td align="center">void</td>
<td align="center">/</td>
</tr>
</tbody></table></div>
<p>3、使用sizeof查看所占记忆空间的大小</p>
<ul>
<li>单位是位元组 Byte</li>
</ul>
<p>4、定义变数</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line">(<span class="number">1</span>) 指定型别与名称:</span><br><span class="line"></span><br><span class="line">资料型别 变数名称;</span><br><span class="line"><span class="type">int</span>      num;</span><br><span class="line">————————————————————</span><br><span class="line">(<span class="number">2</span>) 初始化:</span><br><span class="line"><span class="type">int</span>      num = <span class="number">0</span>;</span><br></pre></td></tr></table></div></figure>

<p>5、命名限制</p>
<ul>
<li><p>由英文大小写字母、数字和底线构成</p>
<ul>
<li>例如，A_3</li>
<li><strong>数字不能开头</strong></li>
</ul>
</li>
<li><p>保留字不可作为命名的名称</p>
<ul>
<li>auto,break,case,char,…,while</li>
</ul>
</li>
</ul>

        <h3 id="整数型别简介"   >
          <a href="#整数型别简介" class="heading-link"><i class="fas fa-link"></i></a><a href="#整数型别简介" class="headerlink" title="整数型别简介"></a>整数型别简介</h3>
      <p>1、整数的溢位 Overflow</p>

        <h3 id="浮点数型别简介"   >
          <a href="#浮点数型别简介" class="heading-link"><i class="fas fa-link"></i></a><a href="#浮点数型别简介" class="headerlink" title="浮点数型别简介"></a>浮点数型别简介</h3>
      <p>1、实数表示法</p>
<ul>
<li>使用约略值</li>
</ul>
<p>2、浮点数 Floating Point</p>
<ul>
<li><p>缺点：只表示约略值</p>
</li>
<li><p>优点1：可以自然地表示小数</p>
</li>
<li><p>优点2：比较不容易溢位</p>
</li>
</ul>

        <h3 id="将printf或scanf用在不同资料型别"   >
          <a href="#将printf或scanf用在不同资料型别" class="heading-link"><i class="fas fa-link"></i></a><a href="#将printf或scanf用在不同资料型别" class="headerlink" title="将printf或scanf用在不同资料型别"></a>将printf或scanf用在不同资料型别</h3>
      <ul>
<li>printf是做标准输出的一个内建函式</li>
</ul>
<p>1、printf的格式字串</p>
<ul>
<li>类似字元跳脱的方法，放置<strong>格式符</strong>来输出特定格式的资料</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> sum = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Sum is %d.&quot;</span>,sum);	(*)</span><br><span class="line"></span><br><span class="line">(*) 格式符以%开头</span><br></pre></td></tr></table></div></figure>

<p>2、用printf输出整数时常见的格式符</p>
<div class="table-container"><table>
<thead>
<tr>
<th align="left">格式符</th>
<th align="center">输出字符</th>
</tr>
</thead>
<tbody><tr>
<td align="left">d</td>
<td align="center">十进位有号整数</td>
</tr>
<tr>
<td align="left">u</td>
<td align="center">十进位无号整数</td>
</tr>
<tr>
<td align="left">o</td>
<td align="center">八进位无号整数</td>
</tr>
<tr>
<td align="left">x</td>
<td align="center">十六进位无号整数(小写)</td>
</tr>
<tr>
<td align="left">X</td>
<td align="center">十六进位无号整数(大写)</td>
</tr>
<tr>
<td align="left">f</td>
<td align="center">十进位浮点数</td>
</tr>
</tbody></table></div>
<p>3、scanf的使用</p>
<ul>
<li>scanf是做标准输入的一个内建函式</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(要读入的资料格式，变数位址);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br></pre></td></tr></table></div></figure>

<p>4、scanf的格式字串</p>
<ul>
<li>类似字元跳脱的方法，放置<strong>格式符</strong>来输出特定格式的资料</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br></pre></td></tr></table></div></figure>



        <h3 id="整数与浮点数型别间的转换"   >
          <a href="#整数与浮点数型别间的转换" class="heading-link"><i class="fas fa-link"></i></a><a href="#整数与浮点数型别间的转换" class="headerlink" title="整数与浮点数型别间的转换"></a>整数与浮点数型别间的转换</h3>
      <p>1、计算平均</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a,b,c;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please entry the first number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please entry the second number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please entry the third number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c);</span><br><span class="line">	<span class="type">double</span> average = (a + b + c)/<span class="number">3.</span>;	(*)</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Average is %f.\n&quot;</span>,average);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>
<p>————————————————————</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line">(*) <span class="type">double</span> average = (a + b + c) / <span class="number">3</span>;</span><br><span class="line">					(<span class="type">int</span>+<span class="type">int</span>+<span class="type">int</span>)/<span class="type">int</span></span><br><span class="line"></span><br><span class="line">(*) 隐性转型：</span><br><span class="line"><span class="type">double</span> average =             / <span class="number">3.</span>;</span><br><span class="line">           (<span class="type">double</span>)			/(<span class="type">double</span>)</span><br></pre></td></tr></table></div></figure>

<p>2、字面常数 Literal Constant</p>
<div class="table-container"><table>
<thead>
<tr>
<th align="center">常见字面常数</th>
<th align="center">型别</th>
</tr>
</thead>
<tbody><tr>
<td align="center">123</td>
<td align="center">int,long int</td>
</tr>
<tr>
<td align="center">123.45</td>
<td align="center">double</td>
</tr>
<tr>
<td align="center">123.45f</td>
<td align="center">float</td>
</tr>
</tbody></table></div>
<p>3、<strong>隐性转型与显性转型</strong></p>
<ul>
<li><p>隐型转型是运算需要时自动发生的</p>
</li>
<li><p>显性转型是有需要时强加的</p>
<ul>
<li>double x = (a + b + c) / (double) 3; </li>
</ul>
</li>
</ul>

        <h3 id="字元型别简介"   >
          <a href="#字元型别简介" class="heading-link"><i class="fas fa-link"></i></a><a href="#字元型别简介" class="headerlink" title="字元型别简介"></a>字元型别简介</h3>
      <p>1、储存字元</p>
<p>(1) 编码 Encoding</p>
<ul>
<li>给每种字元一个独一无二的编号</li>
</ul>

        <h3 id="字元编码简介"   >
          <a href="#字元编码简介" class="heading-link"><i class="fas fa-link"></i></a><a href="#字元编码简介" class="headerlink" title="字元编码简介"></a>字元编码简介</h3>
      <p>1、ASCII</p>

        <h3 id="使用char字元型别"   >
          <a href="#使用char字元型别" class="heading-link"><i class="fas fa-link"></i></a><a href="#使用char字元型别" class="headerlink" title="使用char字元型别"></a>使用char字元型别</h3>
      <p>1、C语言两种字元型别</p>
<p>(1) char</p>
<ul>
<li><p>占用1Byte</p>
</li>
<li><p>常见的使用ASCII编码</p>
</li>
<li><p>是一种<strong>整数</strong>编码</p>
</li>
<li><p>用一组<strong>单引号</strong>括住</p>
<ul>
<li>例如,’A’、’\n’</li>
</ul>
</li>
</ul>
<p>(2) wchar_t</p>
<p><em>wchar_t使用在*<em>宽字元</em></em></p>
<p>2、使用char型别</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">char</span> ch = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,ch);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="char型别的运算"   >
          <a href="#char型别的运算" class="heading-link"><i class="fas fa-link"></i></a><a href="#char型别的运算" class="headerlink" title="char型别的运算"></a>char型别的运算</h3>
      <p>1、大写转小写练习</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">char</span> ch1,ch2;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please entry the word:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;ch1);</span><br><span class="line">	ch2 = ch1 + <span class="number">32</span>;		(*)</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,ch2);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></div></figure>
<p>————————————————————</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line">(*) 方法<span class="number">2</span>：</span><br><span class="line">	ch2 = ch1 + (<span class="string">&#x27;a&#x27;</span>-<span class="string">&#x27;A&#x27;</span>);	</span><br></pre></td></tr></table></div></figure>



        <h3 id="选择型别"   >
          <a href="#选择型别" class="heading-link"><i class="fas fa-link"></i></a><a href="#选择型别" class="headerlink" title="选择型别"></a>选择型别</h3>
      <div class="table-container"><table>
<thead>
<tr>
<th align="center">选择型别</th>
<th align="center">scanf格式符</th>
<th align="center">printf格式符</th>
</tr>
</thead>
<tbody><tr>
<td align="center">int</td>
<td align="center">%d</td>
<td align="center">%d</td>
</tr>
<tr>
<td align="center">double</td>
<td align="center">%lf</td>
<td align="center">%f</td>
</tr>
<tr>
<td align="center">char</td>
<td align="center">%c</td>
<td align="center">%c</td>
</tr>
</tbody></table></div>

        <h2 id="运算与表示式"   >
          <a href="#运算与表示式" class="heading-link"><i class="fas fa-link"></i></a><a href="#运算与表示式" class="headerlink" title="运算与表示式"></a>运算与表示式</h2>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span> + <span class="number">5</span> * <span class="number">2</span></span><br><span class="line">————————————————————</span><br><span class="line">运算元 Operand：<span class="number">3</span>、<span class="number">5</span>、<span class="number">2</span></span><br><span class="line">运算子 operator：+、*</span><br><span class="line">表示式 Expression：<span class="number">3</span> + <span class="number">5</span> * <span class="number">2</span></span><br></pre></td></tr></table></div></figure>



        <h3 id="整数与浮点数的算术运算"   >
          <a href="#整数与浮点数的算术运算" class="heading-link"><i class="fas fa-link"></i></a><a href="#整数与浮点数的算术运算" class="headerlink" title="整数与浮点数的算术运算"></a>整数与浮点数的算术运算</h3>
      <p>1、常见的算术运算</p>
<div class="table-container"><table>
<thead>
<tr>
<th align="center">运算子</th>
<th align="center">优先级</th>
<th align="center">运算顺序</th>
</tr>
</thead>
<tbody><tr>
<td align="center">加+</td>
<td align="center">2</td>
<td align="center">由左至右</td>
</tr>
<tr>
<td align="center">减-</td>
<td align="center">2</td>
<td align="center">由左至右</td>
</tr>
<tr>
<td align="center">乘x</td>
<td align="center">1</td>
<td align="center">由左至右</td>
</tr>
<tr>
<td align="center">除/</td>
<td align="center">1</td>
<td align="center">由左至右</td>
</tr>
<tr>
<td align="center">取余%</td>
<td align="center">1</td>
<td align="center">由左至右</td>
</tr>
</tbody></table></div>
<ul>
<li><p>取余%</p>
<ul>
<li>只能用于整数间运算，不能用于浮点数间运算</li>
</ul>
</li>
</ul>

        <h3 id="赋值运算"   >
          <a href="#赋值运算" class="heading-link"><i class="fas fa-link"></i></a><a href="#赋值运算" class="headerlink" title="赋值运算"></a>赋值运算</h3>
      <p>1、赋值运算子=</p>
<ul>
<li>将右边的值赋值给左边的<strong>变数</strong></li>
</ul>
<div class="table-container"><table>
<thead>
<tr>
<th align="center">运算子</th>
<th align="center">优先级</th>
<th align="center">运算顺序</th>
</tr>
</thead>
<tbody><tr>
<td align="center">加+</td>
<td align="center">2</td>
<td align="center">由左至右</td>
</tr>
<tr>
<td align="center">减-</td>
<td align="center">2</td>
<td align="center">由左至右</td>
</tr>
<tr>
<td align="center">乘x</td>
<td align="center">1</td>
<td align="center">由左至右</td>
</tr>
<tr>
<td align="center">除/</td>
<td align="center">1</td>
<td align="center">由左至右</td>
</tr>
<tr>
<td align="center">取余%</td>
<td align="center">1</td>
<td align="center">由左至右</td>
</tr>
<tr>
<td align="center">赋值=</td>
<td align="center">3</td>
<td align="center">由右至左</td>
</tr>
</tbody></table></div>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a,c;</span><br><span class="line">	<span class="type">double</span> b,d;</span><br><span class="line">	a=b=c=d=<span class="number">3</span>+<span class="number">7</span>/<span class="number">2.</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n%f\n%d\n%f\n&quot;</span>,a,b,c,d);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>————————————————————</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line">a=<span class="number">6</span></span><br><span class="line">b=<span class="number">6.000000</span></span><br><span class="line">c=<span class="number">6</span></span><br><span class="line">d=<span class="number">6.500000</span></span><br></pre></td></tr></table></div></figure>



        <h3 id="如何表示是非对错"   >
          <a href="#如何表示是非对错" class="heading-link"><i class="fas fa-link"></i></a><a href="#如何表示是非对错" class="headerlink" title="如何表示是非对错"></a>如何表示是非对错</h3>
      <ul>
<li><p>1为真</p>
</li>
<li><p>0为假</p>
</li>
<li><p>‘\0’为假</p>
<ul>
<li>‘\0’为空字元Null Character(编号0号的字元)</li>
</ul>
</li>
</ul>

        <h3 id="等号和关系运算"   >
          <a href="#等号和关系运算" class="heading-link"><i class="fas fa-link"></i></a><a href="#等号和关系运算" class="headerlink" title="等号和关系运算"></a>等号和关系运算</h3>
      <div class="table-container"><table>
<thead>
<tr>
<th align="center">运算子</th>
<th align="center">范例</th>
<th align="center">结果</th>
</tr>
</thead>
<tbody><tr>
<td align="center">大于＞</td>
<td align="center">3 ＞ 5</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">小于＜</td>
<td align="center">3 ＜ 5</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">等于=</td>
<td align="center">3 == 5</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">不等于</td>
<td align="center">3 ！= 5</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">大于等于＞=</td>
<td align="center">3 ＞= 5</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">小于等于＜=</td>
<td align="center">3＜=5</td>
<td align="center">1</td>
</tr>
</tbody></table></div>
<p>Ex:</p>
<ul>
<li><p>Q: 3 &gt; 2 &gt; 1是真或假？</p>
</li>
<li><p>A：(3&gt;2)为1，(1&gt;1)为0，结果为假</p>
</li>
</ul>

        <h3 id="逻辑运算"   >
          <a href="#逻辑运算" class="heading-link"><i class="fas fa-link"></i></a><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h3>
      <p>1、逻辑运算子</p>
<div class="table-container"><table>
<thead>
<tr>
<th align="center">运算子</th>
<th align="center">范例</th>
<th align="center">结果</th>
</tr>
</thead>
<tbody><tr>
<td align="center">而且&amp;&amp;</td>
<td align="center">3 &gt; 5 &amp;&amp; 2 &gt; 1</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">或者&#124;&#124;</td>
<td align="center">3 &lt; 5 &#124;&#124; 2 &gt; 3</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">非！</td>
<td align="center">! (3 &gt; 2)</td>
<td align="center">0</td>
</tr>
</tbody></table></div>
<ul>
<li><p>!优先于关系运算子</p>
</li>
<li><p>关系运算子优先于&amp;&amp;、&#124;&#124;</p>
</li>
</ul>

        <h3 id="运算子的优先顺序"   >
          <a href="#运算子的优先顺序" class="heading-link"><i class="fas fa-link"></i></a><a href="#运算子的优先顺序" class="headerlink" title="运算子的优先顺序"></a>运算子的优先顺序</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line">顺序|    运算子   | 运算类型 |结合顺序|</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"> <span class="number">1</span> | ！           | 逻辑运算 |由右至左|</span><br><span class="line"> —————————————————————————————————————</span><br><span class="line"> <span class="number">2</span> | *、/、%      |   算术   | 由左 |</span><br><span class="line"> <span class="number">3</span> | +、-         |   运算   | 至右 |</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"> <span class="number">4</span> | &gt;、&lt;、&gt;=、&lt;= |   关系   | 由左 |</span><br><span class="line"> <span class="number">5</span> | ==、！=      |   运算   | 至右 |</span><br><span class="line">————————————————————————————————————</span><br><span class="line"> <span class="number">6</span> | &amp;&amp;           |   逻辑   | 由左 |</span><br><span class="line"> <span class="number">7</span> | ||           |   运算   | 至右 |</span><br><span class="line">————————————————————————————————————</span><br><span class="line"> <span class="number">8</span> | =           | 赋值运算 |由右至左|</span><br></pre></td></tr></table></div></figure>



        <h2 id="程式流程控制"   >
          <a href="#程式流程控制" class="heading-link"><i class="fas fa-link"></i></a><a href="#程式流程控制" class="headerlink" title="程式流程控制"></a>程式流程控制</h2>
      <p>1、流程控制</p>
<ul>
<li><p>无条件地执行一次</p>
<ul>
<li>一般述句</li>
</ul>
</li>
<li><p>有条件地执行一次</p>
<ul>
<li>if述句</li>
</ul>
</li>
<li><p>无条件地重复执行</p>
<ul>
<li>无穷回圈</li>
</ul>
</li>
<li><p>有条件地重复执行</p>
<ul>
<li>while述句</li>
</ul>
</li>
<li><p>计次型重复执行</p>
<ul>
<li>for述句</li>
</ul>
</li>
<li><p>选择型地执行一次</p>
<ul>
<li>switch述句</li>
</ul>
</li>
<li><p>至少执行一次下有条件地重复执行</p>
<ul>
<li>do-while述句</li>
</ul>
</li>
</ul>

        <h3 id="有条件地执行"   >
          <a href="#有条件地执行" class="heading-link"><i class="fas fa-link"></i></a><a href="#有条件地执行" class="headerlink" title="有条件地执行"></a>有条件地执行</h3>
      <ul>
<li><p>if述句</p>
<ul>
<li>if (表示式){程式片段}</li>
</ul>
</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">	<span class="keyword">if</span>(a &gt; <span class="number">4</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;a is larger than 4.\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="猜数字-使用if述句"   >
          <a href="#猜数字-使用if述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#猜数字-使用if述句" class="headerlink" title="猜数字(使用if述句)"></a>猜数字(使用if述句)</h3>
      <p>1、比较大小练习</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">	<span class="keyword">if</span> (a &gt; <span class="number">4</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;a is larger than 4.\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (a &lt; <span class="number">4</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;a is smaller than 4.\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (a == <span class="number">4</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;a is equal to 4.\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>2、猜数字练习</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> answer = <span class="number">4</span>;</span><br><span class="line">	<span class="type">int</span> guess;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter your guess:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;guess);</span><br><span class="line">	<span class="keyword">if</span> (guess &gt; answer)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Too large!\n&quot;</span>);</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="keyword">if</span> (guess &lt; answer)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Too small!\n&quot;</span>);</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="keyword">if</span> (guess == answer)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Correct!\n&quot;</span>);</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="满额折扣计算练习-使用if述句"   >
          <a href="#满额折扣计算练习-使用if述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#满额折扣计算练习-使用if述句" class="headerlink" title="满额折扣计算练习(使用if述句)"></a>满额折扣计算练习(使用if述句)</h3>
      <p>1、写法一</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> number,total;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the number of customers:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;number);</span><br><span class="line">	<span class="keyword">if</span> (<span class="number">300</span> * number &lt; <span class="number">3000</span>)&#123;</span><br><span class="line">		total = <span class="number">300</span> * number;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="number">300</span> * number &gt;= <span class="number">3000</span>)&#123;</span><br><span class="line">		total = <span class="number">300</span> * number * <span class="number">0.8</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Total is %d.\n&quot;</span>,total);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>2、写法二</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> number,total,original;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the number of customers:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;number);</span><br><span class="line">	original = number * <span class="number">300</span>;</span><br><span class="line">	<span class="keyword">if</span> (original &lt; <span class="number">3000</span>)&#123;</span><br><span class="line">		total = original;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (original &gt;= <span class="number">3000</span>)&#123;</span><br><span class="line">		total = original * <span class="number">0.8</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Total is %d.\n&quot;</span>,total);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>3、写法三</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> number,total;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the number of customers:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;number);</span><br><span class="line">	total = number * <span class="number">300</span>;</span><br><span class="line">	<span class="keyword">if</span> (total &gt;= <span class="number">3000</span>)&#123;</span><br><span class="line">		total = total * <span class="number">0.8</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Total is %d.\n&quot;</span>,total);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="正三角形判断练习-使用if述句"   >
          <a href="#正三角形判断练习-使用if述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#正三角形判断练习-使用if述句" class="headerlink" title="正三角形判断练习(使用if述句)"></a>正三角形判断练习(使用if述句)</h3>
      <ul>
<li>正三角形 Regular Triangle</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> side1,side2,side3;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the lengths:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;side1,&amp;side2,&amp;side3);</span><br><span class="line">	<span class="keyword">if</span> (side1 == side2 &amp;&amp; side2 == side3)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Regular Triangle!\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="等腰三角形判断练习"   >
          <a href="#等腰三角形判断练习" class="heading-link"><i class="fas fa-link"></i></a><a href="#等腰三角形判断练习" class="headerlink" title="等腰三角形判断练习"></a>等腰三角形判断练习</h3>
      <ul>
<li>等腰三角形 Isosceles Triangle</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> side1,side2,side3;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the lengths:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;side1,&amp;side2,&amp;side3);</span><br><span class="line">	<span class="keyword">if</span> (side1 == side2 || side2 == side3 || side1 == side3)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Isosceles Triangle!\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="直角三角形判断练习"   >
          <a href="#直角三角形判断练习" class="heading-link"><i class="fas fa-link"></i></a><a href="#直角三角形判断练习" class="headerlink" title="直角三角形判断练习"></a>直角三角形判断练习</h3>
      <ul>
<li>直角三角形 Rectangular Triangle</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> side1,side2,side3;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the lengths:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;side1,&amp;side2,&amp;side3);</span><br><span class="line">	<span class="keyword">if</span>(side1 * side1 + side2 * side2 == side3 * side3 ||</span><br><span class="line">	   side1 * side1 + side3 * side3 == side2 * side2 ||</span><br><span class="line">	   side2 * side2 + side3 * side3 == side1 * side1)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Rectangular Triggle!\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="三角形种类判断练习"   >
          <a href="#三角形种类判断练习" class="heading-link"><i class="fas fa-link"></i></a><a href="#三角形种类判断练习" class="headerlink" title="三角形种类判断练习"></a>三角形种类判断练习</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a,b,c;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the lengths:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">	<span class="keyword">if</span> (a == b &amp;&amp; b == c)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Regular Triangle!\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (a == b || b == c || a == c)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Isosceles Triangle!\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (a * a + b * b == c * c ||</span><br><span class="line">	    a * a + c * c == b * b ||</span><br><span class="line">		b * b + c * c == a * a)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Rectangular Triangle!\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h2 id="对两个变数求最大值-使用if述句"   >
          <a href="#对两个变数求最大值-使用if述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#对两个变数求最大值-使用if述句" class="headerlink" title="对两个变数求最大值(使用if述句)"></a>对两个变数求最大值(使用if述句)</h2>
      <p>1、写法一</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b, max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the first number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the second number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">	<span class="keyword">if</span> (a &gt;= b)&#123;</span><br><span class="line">		max = a;		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (a &lt; b)&#123;</span><br><span class="line">		max = b;		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;The maximum is %d.\n&quot;</span>,max);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>2、写法二</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b, max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the first number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the first number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b);</span><br><span class="line">	max = a;</span><br><span class="line">	<span class="keyword">if</span> (a &lt; b)&#123;</span><br><span class="line">		max = b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;The maximum is %d.\n&quot;</span>,max);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="对三个变数求最大值-使用if述句"   >
          <a href="#对三个变数求最大值-使用if述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#对三个变数求最大值-使用if述句" class="headerlink" title="对三个变数求最大值(使用if述句)"></a>对三个变数求最大值(使用if述句)</h3>
      <p>1、写法一</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b, c, max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter three number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">	<span class="keyword">if</span> (a &gt;= b &amp;&amp; a &gt;=c)&#123;</span><br><span class="line">		max = a;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (b &gt;a &amp;&amp; b &gt;= c)&#123;</span><br><span class="line">		max = b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (c &gt;a &amp;&amp; c &gt; b)&#123;</span><br><span class="line">		max = c;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;The maximum is %d.\n&quot;</span>,max);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>2、写法二</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b, c, max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter three number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">	max = a;</span><br><span class="line">	<span class="keyword">if</span> (max &lt; b)&#123;</span><br><span class="line">		max = b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (max &lt; c)&#123;</span><br><span class="line">		max =c;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;The maximum is %d.\n&quot;</span>,max);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="对四个变数求最大值-使用if述句"   >
          <a href="#对四个变数求最大值-使用if述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#对四个变数求最大值-使用if述句" class="headerlink" title="对四个变数求最大值(使用if述句)"></a>对四个变数求最大值(使用if述句)</h3>
      <p>1、写法一</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b, c, d, max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter four integers:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c, &amp;d);</span><br><span class="line">	<span class="keyword">if</span> (a &gt;= b &amp;&amp; a &gt;= c &amp;&amp; a &gt;= d)&#123;</span><br><span class="line">		max = a;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (b &gt; a &amp;&amp; b &gt;= c &amp;&amp; b &gt;= d)&#123;</span><br><span class="line">		max = b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (c &gt; a &amp;&amp; c &gt; b &amp;&amp; c &gt;= d)&#123;</span><br><span class="line">		max = c;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (d &gt; a &amp;&amp; d &gt; b &amp;&amp; d &gt; c)&#123;</span><br><span class="line">		max = d;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;The maximum is %d.\n&quot;</span>,max);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>2、写法二</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b, c, d, max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter four integers:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c, &amp;d);</span><br><span class="line">	max = a;</span><br><span class="line">	<span class="keyword">if</span> (b &gt; a &amp;&amp; b &gt;= c &amp;&amp; b &gt;= d)&#123;</span><br><span class="line">		max = b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (c &gt; a &amp;&amp; c &gt; b &amp;&amp; c &gt;= d)&#123;</span><br><span class="line">		max = c;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (d &gt; a &amp;&amp; d &gt; b &amp;&amp; d &gt; c)&#123;</span><br><span class="line">		max = d;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;The maximum is %d.\n&quot;</span>,max);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>3、写法三</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b, c, d, max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter four integers:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>,&amp;a, &amp;b, &amp;c, &amp;d);</span><br><span class="line">	max = a;</span><br><span class="line">	<span class="keyword">if</span> (b &gt; max)&#123;</span><br><span class="line">		max = b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (c &gt; max)&#123;</span><br><span class="line">		max = c;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (d &gt; max)&#123;</span><br><span class="line">		max = d;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;The maxmum is %d.\n&quot;</span>,max);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="对多个变数求最小值的练习-使用if述句"   >
          <a href="#对多个变数求最小值的练习-使用if述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#对多个变数求最小值的练习-使用if述句" class="headerlink" title="对多个变数求最小值的练习(使用if述句)"></a>对多个变数求最小值的练习(使用if述句)</h3>
      <p>1、对两个变数求最小值</p>
<ul>
<li>写法一</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b, min;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter two integers:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">	<span class="keyword">if</span> (a &lt;= b)&#123;</span><br><span class="line">		min = a;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (b &lt; a)&#123;</span><br><span class="line">		min = b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;The minimum is %d.\n&quot;</span>,min);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>写法二</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b, min;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter two integers:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">	min = a;</span><br><span class="line">	<span class="keyword">if</span> (b &lt; a)&#123;</span><br><span class="line">		min = b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;The minimum is %d.\n&quot;</span>,min);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>2、对三个变数求最小值</p>
<ul>
<li>写法一</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b, c, min;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter three integers:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">	<span class="keyword">if</span> ( a &lt;= b &amp;&amp; a &lt;= c)&#123;</span><br><span class="line">		min = a;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (b &lt; a &amp;&amp; b &lt;= c)&#123;</span><br><span class="line">		min = b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (c &lt; a &amp;&amp; c &lt; b)&#123;</span><br><span class="line">		min = c;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></div></figure>

<ul>
<li>写法二</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b, c, min;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter three integers:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">	min = a;</span><br><span class="line">	<span class="keyword">if</span> (b &lt; a &amp;&amp; b &lt;= c)&#123;</span><br><span class="line">		min = b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (c &lt; a &amp;&amp; c &lt; b)&#123;</span><br><span class="line">		min = c;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="对三个变数求中位数的练习-使用if述句"   >
          <a href="#对三个变数求中位数的练习-使用if述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#对三个变数求中位数的练习-使用if述句" class="headerlink" title="对三个变数求中位数的练习(使用if述句)"></a>对三个变数求中位数的练习(使用if述句)</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b, c, med;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter three integers:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">	<span class="keyword">if</span> (b &lt;= a &amp;&amp; a &lt;= c || c &lt;= a &amp;&amp; a &lt;= b)&#123;</span><br><span class="line">		med = a;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (a &lt;= b &amp;&amp; b &lt;= c || c &lt;= b &amp;&amp; b &lt;= a)&#123;</span><br><span class="line">		med = b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (a &lt;= c &amp;&amp; c &lt;= b || b &lt;= c &amp;&amp; c &lt;= a)&#123;</span><br><span class="line">		med = c;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;The medium is %d.\n&quot;</span>, med);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h2 id="对多个变数排序-使用if述句"   >
          <a href="#对多个变数排序-使用if述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#对多个变数排序-使用if述句" class="headerlink" title="对多个变数排序(使用if述句)"></a>对多个变数排序(使用if述句)</h2>
      <p>1、排序</p>
<ul>
<li><p>改变资料存放的位置</p>
</li>
<li><p>使用数值交换的做法</p>
</li>
</ul>

        <h3 id="对两个变数依照大小排序练习-使用if述句"   >
          <a href="#对两个变数依照大小排序练习-使用if述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#对两个变数依照大小排序练习-使用if述句" class="headerlink" title="对两个变数依照大小排序练习(使用if述句)"></a>对两个变数依照大小排序练习(使用if述句)</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b, t;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Before: %d%d\n&quot;</span>, a, b);</span><br><span class="line">	<span class="keyword">if</span> (a &gt; b)&#123;</span><br><span class="line">		t = a;</span><br><span class="line">		a = b;</span><br><span class="line">		b = t;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;After: %d%d\n&quot;</span>, a, b);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="对三个变数依照大小排序练习-使用if述句"   >
          <a href="#对三个变数依照大小排序练习-使用if述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#对三个变数依照大小排序练习-使用if述句" class="headerlink" title="对三个变数依照大小排序练习(使用if述句)"></a>对三个变数依照大小排序练习(使用if述句)</h3>
      
        <h3 id="用两个变数的数值交换对三个变数做排序-使用if述句"   >
          <a href="#用两个变数的数值交换对三个变数做排序-使用if述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#用两个变数的数值交换对三个变数做排序-使用if述句" class="headerlink" title="用两个变数的数值交换对三个变数做排序(使用if述句)"></a>用两个变数的数值交换对三个变数做排序(使用if述句)</h3>
      
        <h3 id="用排序简化三角形判断条件-使用if述句"   >
          <a href="#用排序简化三角形判断条件-使用if述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#用排序简化三角形判断条件-使用if述句" class="headerlink" title="用排序简化三角形判断条件(使用if述句)"></a>用排序简化三角形判断条件(使用if述句)</h3>
      
        <h2 id="if-else述句"   >
          <a href="#if-else述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#if-else述句" class="headerlink" title="if-else述句"></a>if-else述句</h2>
      <p>1、if (表示式) {程式片段一} else {程式片段二}</p>

        <h3 id="二选一的交叉路口"   >
          <a href="#二选一的交叉路口" class="heading-link"><i class="fas fa-link"></i></a><a href="#二选一的交叉路口" class="headerlink" title="二选一的交叉路口"></a>二选一的交叉路口</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> grade;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the grade:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;grade);</span><br><span class="line">	<span class="keyword">if</span> (grade &gt;= <span class="number">60</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Pass.&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Fail.&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="两个变数比大小的练习-使用if-else述句"   >
          <a href="#两个变数比大小的练习-使用if-else述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#两个变数比大小的练习-使用if-else述句" class="headerlink" title="两个变数比大小的练习(使用if-else述句)"></a>两个变数比大小的练习(使用if-else述句)</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter a and b:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">	<span class="keyword">if</span> (a &gt; b)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;a &gt; b\n&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (a &lt; b)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;a &lt; b\n&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;a = b\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="猜数字练习-使用if-else述句"   >
          <a href="#猜数字练习-使用if-else述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#猜数字练习-使用if-else述句" class="headerlink" title="猜数字练习(使用if-else述句)"></a>猜数字练习(使用if-else述句)</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> guess;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter your guess:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;guess);</span><br><span class="line">	<span class="keyword">if</span> (guess &gt; <span class="number">4</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Too large!\n&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (guess &lt; <span class="number">4</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Too small!\n&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Correct!\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="猜数字练习-使用if-else述句-1"   >
          <a href="#猜数字练习-使用if-else述句-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#猜数字练习-使用if-else述句-1" class="headerlink" title="猜数字练习(使用if-else述句)"></a>猜数字练习(使用if-else述句)</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> answer = <span class="number">4</span>, guess;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter your guess:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;guess);</span><br><span class="line">	<span class="keyword">if</span> (guess &gt; answer)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Too large!\n&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (guess &lt; answer)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Too small!\n&quot;</span>)； </span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Correct!\n&quot;</span>);</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="简易四则运算-使用if-else述句"   >
          <a href="#简易四则运算-使用if-else述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#简易四则运算-使用if-else述句" class="headerlink" title="简易四则运算(使用if-else述句)"></a>简易四则运算(使用if-else述句)</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> num1, num2;</span><br><span class="line">	<span class="type">char</span> op;</span><br><span class="line">	<span class="type">float</span> answer;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%c%d&quot;</span>, &amp;num1, &amp;op, &amp;num2);</span><br><span class="line">	<span class="keyword">if</span> (op == <span class="string">&#x27;+&#x27;</span>)&#123;</span><br><span class="line">		answer = num1 + num2;</span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">		answer = num1 - num2;</span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">&#x27;*&#x27;</span>)&#123;</span><br><span class="line">		answer = num1 * num2;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		answer = (<span class="type">float</span>) (num1 / num2);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;ANS: %f\n&quot;</span>, answer);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="对多个变数求最大值的练习-使用if-else述句"   >
          <a href="#对多个变数求最大值的练习-使用if-else述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#对多个变数求最大值的练习-使用if-else述句" class="headerlink" title="对多个变数求最大值的练习(使用if-else述句)"></a>对多个变数求最大值的练习(使用if-else述句)</h3>
      <ul>
<li>写法一</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b, c, max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;PLease enter three integers:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">	<span class="keyword">if</span> (a &gt;= b &amp;&amp; a &gt;= c)&#123;</span><br><span class="line">		max = a;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (b &gt; a &amp;&amp; b &gt;= c)&#123;</span><br><span class="line">		max = b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (c &gt; a &amp;&amp; c &gt; b)&#123;</span><br><span class="line">		max = c;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;The maximum is %d.\n&quot;</span>, max); </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></div></figure>

<ul>
<li>写法二</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b, c, max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;PLease enter three integers:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">	<span class="keyword">if</span> (a &gt;= b &amp;&amp; a &gt;= c)&#123;</span><br><span class="line">		max = a;</span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (b &gt;= a &amp;&amp; b &gt;= c)&#123;</span><br><span class="line">		max = b;</span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (c &gt;= a &amp;&amp; c &gt;= b)&#123;</span><br><span class="line">		max = c;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;The maximum is %d.\n&quot;</span>, max); </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></div></figure>

<ul>
<li>写法三</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b, c, max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;PLease enter three integers:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">	<span class="keyword">if</span> (a &gt;= b &amp;&amp; a &gt;= c)&#123;</span><br><span class="line">		max = a;</span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (b &gt;= a &amp;&amp; b &gt;= c)&#123;</span><br><span class="line">		max = b;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		max = c;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;The maximum is %d.\n&quot;</span>, max); </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></div></figure>

<ul>
<li>写法四</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b, c, max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;PLease enter three integers:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">	max = a;</span><br><span class="line">	<span class="keyword">if</span> (b &gt; max)&#123;</span><br><span class="line">		max = b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (c &gt; max)&#123;</span><br><span class="line">		max = c;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;The maximum is %d.\n&quot;</span>, max); </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></div></figure>



        <h2 id="Switch述句"   >
          <a href="#Switch述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#Switch述句" class="headerlink" title="Switch述句"></a>Switch述句</h2>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span>(整数值) &#123;</span><br><span class="line">	<span class="keyword">case</span> 整数常数值:</span><br><span class="line">	程式片段;</span><br><span class="line">	<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">default</span>:</span><br><span class="line">	程式片段;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li><p>可以指定多个不同的case</p>
</li>
<li><p>执行到break为止</p>
</li>
<li><p>可以设定default，在所有case都不符合时执行</p>
</li>
</ul>

        <h3 id="多选一的路口-使用Switch述句"   >
          <a href="#多选一的路口-使用Switch述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#多选一的路口-使用Switch述句" class="headerlink" title="多选一的路口(使用Switch述句)"></a>多选一的路口(使用Switch述句)</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> num1, num2;</span><br><span class="line">	<span class="type">char</span> op;</span><br><span class="line">	<span class="type">float</span> answer;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%c%d&quot;</span>, &amp;num1, &amp;op, &amp;num2);</span><br><span class="line">	<span class="keyword">switch</span> (op)&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">			answer = num1 + num2;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">			answer = num1 - num2;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">			answer = num1 * num2;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">			answer = (<span class="type">float</span>) num1 / num2;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;ANS: %f.\n&quot;</span>, answer);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="ID查询练习-使用Switch述句"   >
          <a href="#ID查询练习-使用Switch述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#ID查询练习-使用Switch述句" class="headerlink" title="ID查询练习(使用Switch述句)"></a>ID查询练习(使用Switch述句)</h3>
      <p>1、使用if-else述句</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> id;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;ID: &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;id);</span><br><span class="line">	<span class="keyword">if</span> (id == <span class="number">2</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;John.\n&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (id == <span class="number">13</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Mary.\n&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (id == <span class="number">16</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Amy.\n&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Not found!\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>2、使用switch述句</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>  <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> id;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;ID: &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;id);</span><br><span class="line">	<span class="keyword">switch</span> (id)&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;John.\n&quot;</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">13</span>:</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Mary.\n&quot;</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">16</span>:</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Amy.\n&quot;</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Not found!\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>3、不同的case共用一个break述句，输出相同的值</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>  <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> id;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;ID: &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;id);</span><br><span class="line">	<span class="keyword">switch</span> (id)&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">		<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">		<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;John.\n&quot;</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">13</span>:</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Mary.\n&quot;</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">16</span>:</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Amy.\n&quot;</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Not found!\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="猜数字练习-使用Switch述句"   >
          <a href="#猜数字练习-使用Switch述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#猜数字练习-使用Switch述句" class="headerlink" title="猜数字练习(使用Switch述句)"></a>猜数字练习(使用Switch述句)</h3>
      <p>1、使用if-else述句</p>
<ul>
<li>猜一次数字</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> answer = <span class="number">4</span>;</span><br><span class="line">	<span class="type">int</span> guess;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the guess:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;guess);</span><br><span class="line">	<span class="keyword">if</span> (guess &gt; answer)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Too large!\n&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (guess &lt; answer)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Too small!\n&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Correct!\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h2 id="While述句"   >
          <a href="#While述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#While述句" class="headerlink" title="While述句"></a>While述句</h2>
      <ul>
<li>无穷回圈</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 当表示式成立时，就执行程式片段</span></span><br><span class="line"><span class="keyword">while</span> (表示式) &#123;程式片段&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="有条件地重复执行-使用While述句"   >
          <a href="#有条件地重复执行-使用While述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#有条件地重复执行-使用While述句" class="headerlink" title="有条件地重复执行(使用While述句)"></a>有条件地重复执行(使用While述句)</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (count &lt; <span class="number">3</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, count);</span><br><span class="line">		count = count + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="猜数字练习-使用While述句"   >
          <a href="#猜数字练习-使用While述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#猜数字练习-使用While述句" class="headerlink" title="猜数字练习(使用While述句)"></a>猜数字练习(使用While述句)</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> answer = <span class="number">4</span>;</span><br><span class="line">	<span class="type">int</span> guess;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter your guess:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;guess);</span><br><span class="line">	<span class="keyword">while</span> (guess != answer)&#123;</span><br><span class="line">		<span class="keyword">if</span> (guess &gt; answer)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Too large!\n&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Too small!\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Please enter your guess again:&quot;</span>);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;guess);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Correct!\n&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="总共猜了几次的练习-使用While述句"   >
          <a href="#总共猜了几次的练习-使用While述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#总共猜了几次的练习-使用While述句" class="headerlink" title="总共猜了几次的练习(使用While述句)"></a>总共猜了几次的练习(使用While述句)</h3>
      <ul>
<li>写法一</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> answer = <span class="number">4</span>;</span><br><span class="line">	<span class="type">int</span> guess;</span><br><span class="line">	<span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter your guess:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;guess);</span><br><span class="line">	count = count + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span> (guess != answer)&#123;</span><br><span class="line">		<span class="keyword">if</span> (guess &gt; answer)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Too large!\n&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Too small!\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Please enter your guess again:&quot;</span>);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;guess);</span><br><span class="line">		count = count + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Correct!\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Count: %d\n&quot;</span>, count);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>写法二</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> answer = <span class="number">4</span>;</span><br><span class="line">	<span class="type">int</span> guess;</span><br><span class="line">	<span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (count == <span class="number">0</span> || guess != answer)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Please enter your guess:&quot;</span>);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;guess);</span><br><span class="line">		count = count + <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span> (guess &gt; answer)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Too large!\n&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (guess &lt; answer)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Too small!\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Correct!\n&quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Count: %d\n&quot;</span>, count);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="求不定个数正整数和的练习-使用While述句"   >
          <a href="#求不定个数正整数和的练习-使用While述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#求不定个数正整数和的练习-使用While述句" class="headerlink" title="求不定个数正整数和的练习(使用While述句)"></a>求不定个数正整数和的练习(使用While述句)</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> number;</span><br><span class="line">	<span class="type">int</span> sum;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the numbers (quit: 0) :\n&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;number);</span><br><span class="line">	<span class="keyword">while</span> (number != <span class="number">0</span>)&#123;</span><br><span class="line">		sum = sum + number;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;number);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;The sum is %d.\n&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="求不定个数正整数平均的练习-使用while述句"   >
          <a href="#求不定个数正整数平均的练习-使用while述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#求不定个数正整数平均的练习-使用while述句" class="headerlink" title="求不定个数正整数平均的练习(使用while述句)"></a>求不定个数正整数平均的练习(使用while述句)</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> number;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">	<span class="type">float</span> average;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the numbers (0 : quit) :\n&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;number);</span><br><span class="line">	<span class="keyword">if</span> (number == <span class="number">0</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;The average is N/A.\n&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">	<span class="keyword">while</span> (number != <span class="number">0</span>)&#123;</span><br><span class="line">		sum = sum + number;</span><br><span class="line">		count = count + <span class="number">1</span>;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;number);</span><br><span class="line">	&#125;</span><br><span class="line">		average = (<span class="type">float</span>) sum / count;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;The average is %f.\n&quot;</span>, average);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="数数字的练习-使用while述句"   >
          <a href="#数数字的练习-使用while述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#数数字的练习-使用while述句" class="headerlink" title="数数字的练习(使用while述句)"></a>数数字的练习(使用while述句)</h3>
      <p>1、印出1到10</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> number = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span> (number &lt;= <span class="number">10</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, number);</span><br><span class="line">		number = number + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>2、印出1到N</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> number = <span class="number">1</span>;</span><br><span class="line">	<span class="type">int</span> N;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the number:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="keyword">while</span> (number &lt;= N)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, number);</span><br><span class="line">		number = number + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>3、印出10到20</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> number = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">while</span> (number &lt;= <span class="number">20</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, number);</span><br><span class="line">		number = number + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>4、印出M到N</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> number, M, N;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the number M:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;M);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the number N:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	number = M;</span><br><span class="line">	<span class="keyword">while</span> (number &lt;= N)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, number);</span><br><span class="line">		number = number + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h2 id="Do-while述句"   >
          <a href="#Do-while述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#Do-while述句" class="headerlink" title="Do-while述句"></a>Do-while述句</h2>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 第一次，先执行一次程式片段</span></span><br><span class="line"><span class="comment">// 第二次，当表示式成立时，就执行程式片段</span></span><br><span class="line"><span class="keyword">do</span> &#123;程式片段&#125; <span class="keyword">while</span> (表示式);</span><br></pre></td></tr></table></div></figure>


        <h3 id="至少做一次的重复执行-Do-while述句"   >
          <a href="#至少做一次的重复执行-Do-while述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#至少做一次的重复执行-Do-while述句" class="headerlink" title="至少做一次的重复执行(Do-while述句)"></a>至少做一次的重复执行(Do-while述句)</h3>
      <p>1、猜数字练习</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> answer = <span class="number">4</span>;</span><br><span class="line">	<span class="type">int</span> guess;</span><br><span class="line">	<span class="keyword">do</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Please enter the guess:&quot;</span>);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;guess);</span><br><span class="line">		<span class="keyword">if</span> (guess &gt; answer)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Too large!\n&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (guess &lt; answer)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Too small!\n&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Correct!\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">while</span> (guess != answer);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="复合赋值与递增递减运算"   >
          <a href="#复合赋值与递增递减运算" class="heading-link"><i class="fas fa-link"></i></a><a href="#复合赋值与递增递减运算" class="headerlink" title="复合赋值与递增递减运算"></a>复合赋值与递增递减运算</h3>
      <p>1、复合赋值运算</p>
<div class="table-container"><table>
<thead>
<tr>
<th align="center">运算子</th>
<th align="center">范例</th>
</tr>
</thead>
<tbody><tr>
<td align="center">+=加等于</td>
<td align="center">a += 2 (a = a + 2)</td>
</tr>
<tr>
<td align="center">-=减等于</td>
<td align="center">a -= 2 (a = a - 2)</td>
</tr>
<tr>
<td align="center">*=乘等于</td>
<td align="center">a *= 2 (a = a * 2)</td>
</tr>
<tr>
<td align="center">/=除等于</td>
<td align="center">a /= 2 (a = a / 2)</td>
</tr>
<tr>
<td align="center">%=求余等于</td>
<td align="center">a %= 2 (a = a % 2)</td>
</tr>
</tbody></table></div>
<p>2、递增递减运算</p>
<div class="table-container"><table>
<thead>
<tr>
<th align="center">运算子</th>
<th align="center">范例</th>
</tr>
</thead>
<tbody><tr>
<td align="center">++递增</td>
<td align="center">a++ (a = a + 1)</td>
</tr>
<tr>
<td align="center">++递增</td>
<td align="center">++a (a = a + 1)</td>
</tr>
<tr>
<td align="center">–递减</td>
<td align="center">a– (a = a - 1)</td>
</tr>
<tr>
<td align="center">–递减</td>
<td align="center">–a (a = a - 1)</td>
</tr>
</tbody></table></div>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line">count = count + <span class="number">1</span>;</span><br><span class="line">count += <span class="number">1</span>;</span><br><span class="line">count++;</span><br><span class="line">count + <span class="number">1</span>; <span class="comment">// count本身的值不会被改变</span></span><br></pre></td></tr></table></div></figure>

<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line">b = ++a; <span class="comment">// a = 1, b = 1 (先增后用)</span></span><br><span class="line">b = a++; <span class="comment">// a = 2, b = 1</span></span><br></pre></td></tr></table></div></figure>



        <h3 id="消费金额计算的练习-使用switch述句"   >
          <a href="#消费金额计算的练习-使用switch述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#消费金额计算的练习-使用switch述句" class="headerlink" title="消费金额计算的练习(使用switch述句)"></a>消费金额计算的练习(使用switch述句)</h3>
      <ul>
<li>使用者分别输入每个商品的价格，输入0后按下方的售价表进行结算，显示总金额</li>
</ul>
<div class="table-container"><table>
<thead>
<tr>
<th align="center">编号</th>
<th align="center">价格</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">90</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">75</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">83</td>
</tr>
</tbody></table></div>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> id;</span><br><span class="line">	<span class="keyword">do</span> &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;id);</span><br><span class="line">		<span class="keyword">switch</span> (id) &#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>: total += <span class="number">90</span>; <span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>: total += <span class="number">75</span>; <span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">3</span>: total += <span class="number">83</span>; <span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">while</span> (id != <span class="number">0</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Total: %d.\n&quot;</span>, total);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h2 id="For述句"   >
          <a href="#For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#For述句" class="headerlink" title="For述句"></a>For述句</h2>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 执行初始式。</span></span><br><span class="line"><span class="comment">// 当条件式成立时，执行程式片段。否则就结束回圈。</span></span><br><span class="line"><span class="comment">// 执行回圈式后再回到上一步。</span></span><br><span class="line"><span class="keyword">for</span> (初始式; 条件式; 回圈式) &#123;程式片段&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="计次型的重复执行-使用For述句"   >
          <a href="#计次型的重复执行-使用For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#计次型的重复执行-使用For述句" class="headerlink" title="计次型的重复执行(使用For述句)"></a>计次型的重复执行(使用For述句)</h3>
      <p>1、印出1到10练习</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> count;</span><br><span class="line">	<span class="keyword">for</span> (count = <span class="number">1</span>; count &lt;= <span class="number">10</span>; count++)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, count);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="数数字练习-使用For述句"   >
          <a href="#数数字练习-使用For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#数数字练习-使用For述句" class="headerlink" title="数数字练习(使用For述句)"></a>数数字练习(使用For述句)</h3>
      <p>1、印出1到N练习</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> count, N;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the number N:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="keyword">for</span> (count = <span class="number">1</span>; count &lt;= N; count++)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, count);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>2、印出10到20练习</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> count;</span><br><span class="line">	<span class="keyword">for</span> (count = <span class="number">10</span>; count &lt;= <span class="number">20</span>; count++)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, count);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>3、印出M到N练习</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> M, N;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the number M:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;M);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please enter the number N:&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="type">int</span> count;</span><br><span class="line">	<span class="keyword">for</span> (count = M; count &lt;= N; count++)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, count);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="数等差数列的练习-使用For述句"   >
          <a href="#数等差数列的练习-使用For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#数等差数列的练习-使用For述句" class="headerlink" title="数等差数列的练习(使用For述句)"></a>数等差数列的练习(使用For述句)</h3>
      <p>1、印出10到1练习</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> count;</span><br><span class="line">	<span class="keyword">for</span> (count = <span class="number">10</span>; count &gt;= <span class="number">1</span>; count--)&#123;</span><br><span class="line">		<span class="type">int</span> number = <span class="number">11</span>-count;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, count, number); <span class="comment">// count = 10, number = 1</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>2、印出1到10间的奇数练习</p>
<ul>
<li>写法一</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> count;</span><br><span class="line">	<span class="keyword">for</span> (count = <span class="number">1</span>; count &lt;= <span class="number">10</span>; count += <span class="number">2</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, count);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>写法二</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> count;</span><br><span class="line">	<span class="keyword">for</span> (count = <span class="number">1</span>; count &lt;= <span class="number">10</span>; count++)&#123;</span><br><span class="line">		<span class="keyword">if</span> (count % <span class="number">2</span> == <span class="number">1</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, count);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>3、印出1到10间的偶数练习</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> count;</span><br><span class="line">	<span class="keyword">for</span> (count = <span class="number">2</span>; count &lt;= <span class="number">10</span>; count += <span class="number">2</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, count);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="数特定条件数列的练习-使用For述句"   >
          <a href="#数特定条件数列的练习-使用For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#数特定条件数列的练习-使用For述句" class="headerlink" title="数特定条件数列的练习(使用For述句)"></a>数特定条件数列的练习(使用For述句)</h3>
      <p>1、印出1到10间不是3的倍数的偶数</p>
<ul>
<li>写法一</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> count;</span><br><span class="line">	<span class="keyword">for</span> (count = <span class="number">1</span>; count &lt;= <span class="number">10</span>; count++)&#123;</span><br><span class="line">		<span class="keyword">if</span> (count % <span class="number">2</span> == <span class="number">0</span> &amp;&amp; count % <span class="number">3</span> != <span class="number">0</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, count);</span><br><span class="line">		&#125; </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>写法二</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> count;</span><br><span class="line">	<span class="keyword">for</span> (count = <span class="number">2</span>; count &lt;= <span class="number">10</span>; count += <span class="number">2</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (count % <span class="number">3</span> != <span class="number">0</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, count);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="求连续整数和的练习-使用For述句"   >
          <a href="#求连续整数和的练习-使用For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#求连续整数和的练习-使用For述句" class="headerlink" title="求连续整数和的练习(使用For述句)"></a>求连续整数和的练习(使用For述句)</h3>
      <p>1、印出1加到100的整数和</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> i, sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++)&#123;</span><br><span class="line">		sum += i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>2、印出1加到N的整数和</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> N;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;N = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="type">int</span> i, sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= N; i++)&#123;</span><br><span class="line">		sum += i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Sum = %d.\n&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="用文字画横线的练习-使用For述句"   >
          <a href="#用文字画横线的练习-使用For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#用文字画横线的练习-使用For述句" class="headerlink" title="用文字画横线的练习(使用For述句)"></a>用文字画横线的练习(使用For述句)</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> N;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;N = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="type">int</span> count;</span><br><span class="line">	<span class="keyword">for</span> (count = <span class="number">1</span>; count &lt;= N; count++)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="中止重复执行-break与continue述句"   >
          <a href="#中止重复执行-break与continue述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#中止重复执行-break与continue述句" class="headerlink" title="中止重复执行(break与continue述句)"></a>中止重复执行(break与continue述句)</h3>
      <ul>
<li><p>break述句</p>
<ul>
<li>中断目前所属的重复执行述句</li>
</ul>
</li>
<li><p>continue述句</p>
<ul>
<li>在重复执行述句中跳过后面的程式区块</li>
</ul>
</li>
</ul>
<p>1、韩信点兵最大值的练习(使用break述句)</p>
<ul>
<li><p>让使用者输入搜索上限,找出上限内所有答案中最大的值</p>
</li>
<li><p>写法一</p>
</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;MAX = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;max);</span><br><span class="line">	<span class="type">int</span> number;</span><br><span class="line">	<span class="type">int</span> answer = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (number = max; number &gt;= <span class="number">1</span> &amp;&amp; answer == <span class="number">0</span>; number--)&#123;</span><br><span class="line">		<span class="keyword">if</span> (number % <span class="number">3</span> == <span class="number">2</span> &amp;&amp; number % <span class="number">5</span> == <span class="number">3</span> &amp;&amp; number % <span class="number">7</span> == <span class="number">2</span>)&#123;</span><br><span class="line">			answer = number;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (answer != <span class="number">0</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, answer);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>写法二</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;MAX = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;max);</span><br><span class="line">	<span class="type">int</span> number;</span><br><span class="line">	<span class="keyword">for</span> (number = max; number &gt;= <span class="number">1</span>; number--)&#123;</span><br><span class="line">		<span class="keyword">if</span> (number % <span class="number">3</span> == <span class="number">2</span> &amp;&amp; number % <span class="number">5</span> == <span class="number">3</span> &amp;&amp; number % <span class="number">7</span> == <span class="number">2</span>)&#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, number);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="找出所有正因数的练习-使用For述句"   >
          <a href="#找出所有正因数的练习-使用For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#找出所有正因数的练习-使用For述句" class="headerlink" title="找出所有正因数的练习(使用For述句)"></a>找出所有正因数的练习(使用For述句)</h3>
      <ul>
<li><p>N的因数</p>
<ul>
<li>可以整除N的整数 (整除：余数为0)</li>
<li>8的正因数有: 1,2,4,8</li>
</ul>
</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> N;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;N = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="type">int</span> number;</span><br><span class="line">	<span class="keyword">for</span> (number = <span class="number">1</span>; number &lt;= N; number++)&#123;</span><br><span class="line">		<span class="keyword">if</span> (N % number == <span class="number">0</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, number);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="韩信点兵的练习"   >
          <a href="#韩信点兵的练习" class="heading-link"><i class="fas fa-link"></i></a><a href="#韩信点兵的练习" class="headerlink" title="韩信点兵的练习"></a>韩信点兵的练习</h3>
      <ul>
<li><p>“今有物，不知其数。三三数之，剩二；五五数之，剩三；七七数之，剩二。问：物几何？答曰：二十三。”——《孙子算经》</p>
</li>
<li><p>中国同余数定理</p>
</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> number = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span> (!(number % <span class="number">3</span> == <span class="number">2</span> &amp;&amp; number % <span class="number">5</span> == <span class="number">3</span> &amp;&amp; number % <span class="number">7</span> == <span class="number">2</span>))&#123;</span><br><span class="line">		++number;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, number);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="有范围的韩信点兵练习-使用For述句"   >
          <a href="#有范围的韩信点兵练习-使用For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#有范围的韩信点兵练习-使用For述句" class="headerlink" title="有范围的韩信点兵练习(使用For述句)"></a>有范围的韩信点兵练习(使用For述句)</h3>
      <p>1、有上限的韩信点兵练习</p>
<ul>
<li>找出上限内所有的答案</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;MAX = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;max);</span><br><span class="line">	<span class="type">int</span> number;</span><br><span class="line">	<span class="keyword">for</span> (number = <span class="number">1</span>; number &lt;= max; number++)&#123;</span><br><span class="line">		<span class="keyword">if</span> (number % <span class="number">3</span> == <span class="number">2</span> &amp;&amp; number % <span class="number">5</span> == <span class="number">3</span> &amp;&amp; number % <span class="number">7</span> ==<span class="number">2</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, number);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>2、有范围的韩信点兵练习</p>
<ul>
<li>找出上、下限间所有的答案</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> min;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;MIN = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;min);</span><br><span class="line">	<span class="type">int</span> max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;MAX = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;max);</span><br><span class="line">	<span class="type">int</span> number;</span><br><span class="line">	<span class="keyword">for</span> (number = min; number &lt;= max; number++)&#123;</span><br><span class="line">		<span class="keyword">if</span> (number % <span class="number">3</span> == <span class="number">2</span> &amp;&amp; number % <span class="number">5</span> == <span class="number">3</span> &amp;&amp; number % <span class="number">7</span> == <span class="number">2</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, number);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>3、韩信点兵由大印到小的练习</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> min;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;MIN = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;min);</span><br><span class="line">	<span class="type">int</span> max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;MAX = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;max);</span><br><span class="line">	<span class="type">int</span> number;</span><br><span class="line">	<span class="keyword">for</span> (number = max; number &gt;= min; number--)&#123;</span><br><span class="line">		<span class="keyword">if</span> (number % <span class="number">3</span> == <span class="number">2</span> &amp;&amp; number % <span class="number">5</span> == <span class="number">3</span> &amp;&amp; number % <span class="number">7</span> == <span class="number">2</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, number);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="韩信点兵中的最大值练习-使用For述句"   >
          <a href="#韩信点兵中的最大值练习-使用For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#韩信点兵中的最大值练习-使用For述句" class="headerlink" title="韩信点兵中的最大值练习(使用For述句)"></a>韩信点兵中的最大值练习(使用For述句)</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;MAX = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;max);</span><br><span class="line">	<span class="type">int</span> number = max;</span><br><span class="line">	<span class="type">int</span> answer = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (number = max; number &gt;= <span class="number">1</span> &amp;&amp; answer == <span class="number">0</span>; number--)&#123;</span><br><span class="line">		<span class="keyword">if</span> (number % <span class="number">3</span> == <span class="number">2</span> &amp;&amp; number % <span class="number">5</span> == <span class="number">3</span> &amp;&amp; number % <span class="number">7</span> == <span class="number">2</span>)&#123;</span><br><span class="line">			answer = number;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (answer != <span class="number">0</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d.\n&quot;</span>, answer);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="有次数的韩信点兵练习-使用For述句"   >
          <a href="#有次数的韩信点兵练习-使用For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#有次数的韩信点兵练习-使用For述句" class="headerlink" title="有次数的韩信点兵练习(使用For述句)"></a>有次数的韩信点兵练习(使用For述句)</h3>
      <p>1、韩信点兵找前三小的练习</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> number;</span><br><span class="line">	<span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (number = <span class="number">1</span>; number &lt;= <span class="number">1000</span> &amp;&amp; count &lt; <span class="number">3</span>; number++)&#123;</span><br><span class="line">		<span class="keyword">if</span> (number % <span class="number">3</span> == <span class="number">2</span> &amp;&amp; number % <span class="number">5</span> == <span class="number">3</span> &amp;&amp; number % <span class="number">7</span> == <span class="number">2</span>)&#123;</span><br><span class="line">			count++;</span><br><span class="line">			<span class="keyword">if</span> (count &lt;= <span class="number">3</span>)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, number);	</span><br><span class="line">			&#125; </span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>2、韩信点兵找前三大的练习</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> number;</span><br><span class="line">	<span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (number = <span class="number">1000</span>; number &gt;= <span class="number">1</span> &amp;&amp; count &lt; <span class="number">3</span>; number--)&#123;</span><br><span class="line">		<span class="keyword">if</span> (number % <span class="number">3</span> == <span class="number">2</span> &amp;&amp; number % <span class="number">5</span> == <span class="number">3</span> &amp;&amp; number % <span class="number">7</span> == <span class="number">2</span>)&#123;</span><br><span class="line">			count++;</span><br><span class="line">			<span class="keyword">if</span> (count &lt;= <span class="number">3</span>)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, number);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>3、韩信点兵找第三小的练习</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> number;</span><br><span class="line">	<span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (number = <span class="number">1</span>; number &lt;= <span class="number">1000</span> &amp;&amp; count &lt; <span class="number">3</span>; number++)&#123;</span><br><span class="line">		<span class="keyword">if</span> (number % <span class="number">3</span> == <span class="number">2</span> &amp;&amp; number % <span class="number">5</span> == <span class="number">3</span> &amp;&amp; number % <span class="number">7</span> == <span class="number">2</span>)&#123;</span><br><span class="line">			count++;</span><br><span class="line">			<span class="keyword">if</span> (count == <span class="number">3</span>)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d.\n&quot;</span>, number);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="质数判断练习-使用For述句"   >
          <a href="#质数判断练习-使用For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#质数判断练习-使用For述句" class="headerlink" title="质数判断练习(使用For述句)"></a>质数判断练习(使用For述句)</h3>
      <ul>
<li><p>质数</p>
<ul>
<li>除了1与本身以外没有其它正因数的正整数</li>
</ul>
</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> N;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;N = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="type">int</span> isPrime = <span class="number">1</span>;</span><br><span class="line">	<span class="type">int</span> number;</span><br><span class="line">	<span class="keyword">for</span> (number = <span class="number">2</span>; number &lt; N &amp;&amp; isPrime; ++number)&#123;</span><br><span class="line">		<span class="keyword">if</span> (N % number == <span class="number">0</span>)&#123;</span><br><span class="line">			isPrime = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (isPrime)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Yes.\n&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;No.\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="印出九九乘法表的练习-使用For述句"   >
          <a href="#印出九九乘法表的练习-使用For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#印出九九乘法表的练习-使用For述句" class="headerlink" title="印出九九乘法表的练习(使用For述句)"></a>印出九九乘法表的练习(使用For述句)</h3>
      <ul>
<li>写法一</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; ++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="number">9</span>; ++j)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d x %d = %d\n&quot;</span>, i, j, i * j);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li><p>写法二</p>
<ul>
<li>此写法结果缺少(1 x 1 = 1)</li>
</ul>
</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> c;</span><br><span class="line">	<span class="keyword">for</span> (c = <span class="number">1</span>; c &lt;= <span class="number">72</span>; ++c)&#123;</span><br><span class="line">		<span class="type">int</span> i = (c - <span class="number">1</span>) / <span class="number">9</span> + <span class="number">2</span>;</span><br><span class="line">		<span class="type">int</span> j = (c - <span class="number">1</span>) % <span class="number">9</span> + <span class="number">1</span>;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d x %d = %d\n&quot;</span>, i, j, i * j);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="用文字绘制长方形的练习-使用For述句"   >
          <a href="#用文字绘制长方形的练习-使用For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#用文字绘制长方形的练习-使用For述句" class="headerlink" title="用文字绘制长方形的练习(使用For述句)"></a>用文字绘制长方形的练习(使用For述句)</h3>
      <ul>
<li>输入正整数N，印出N X N个’*’组成的图形</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> N;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;N = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= N; ++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= N; ++j)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="用文字绘制空心长方形的练习-使用For述句"   >
          <a href="#用文字绘制空心长方形的练习-使用For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#用文字绘制空心长方形的练习-使用For述句" class="headerlink" title="用文字绘制空心长方形的练习(使用For述句)"></a>用文字绘制空心长方形的练习(使用For述句)</h3>
      <p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> N;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;N = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= N; ++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= N; ++j)&#123;</span><br><span class="line">			<span class="keyword">if</span>(i == <span class="number">1</span> || i == N || j == <span class="number">1</span> || j == N)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="用文字绘制三角形的练习-使用For述句"   >
          <a href="#用文字绘制三角形的练习-使用For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#用文字绘制三角形的练习-使用For述句" class="headerlink" title="用文字绘制三角形的练习(使用For述句)"></a>用文字绘制三角形的练习(使用For述句)</h3>
      <p>1、用文字绘制三角形的练习</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> N;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;N = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= N; ++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= i; ++j)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>2、用文字绘制空心三角形的练习</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> N;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;N = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;*\n&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= N - <span class="number">3</span>; ++i)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= i; ++j)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;*\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= N; ++j)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="基于坐标法用文字绘制三角形-使用For述句"   >
          <a href="#基于坐标法用文字绘制三角形-使用For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#基于坐标法用文字绘制三角形-使用For述句" class="headerlink" title="基于坐标法用文字绘制三角形(使用For述句)"></a>基于坐标法用文字绘制三角形(使用For述句)</h3>
      <p>1、坐标点</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; ++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="number">5</span>; ++j)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;(%d,%d)&quot;</span>, i, j);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>2、左对角线(i等于j)</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; ++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="number">5</span>; ++j)&#123;</span><br><span class="line">			<span class="keyword">if</span> (i == j)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>3、左下实心三角形(列i大于行j)</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; ++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="number">5</span>; ++j)&#123;</span><br><span class="line">			<span class="keyword">if</span> (i &gt;= j)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>4、左下空心三角形</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> N;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;N = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= N; ++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= N; ++j)&#123;</span><br><span class="line">			<span class="keyword">if</span> (j == <span class="number">1</span> || i == N || i == j)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>5、右下实心三角形(列i小于行j)</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> N;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;N = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= N; ++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= N; ++j)&#123;</span><br><span class="line">			<span class="keyword">if</span> (i + j &gt;= N + <span class="number">1</span>)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>5、右下空心三角形</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> N;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;N = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= N; ++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= N; ++j)&#123;</span><br><span class="line">			<span class="keyword">if</span> (i == N || j == N || i + j == N + <span class="number">1</span>)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	 </span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>6、右上空心三角形</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> N;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;N = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= N; ++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= N; ++j)&#123;</span><br><span class="line">			<span class="keyword">if</span> (i == <span class="number">1</span> || j == N || i == j )&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	 </span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>7、右上实心三角形(列i小于行j)</p>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> N;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;N = &quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= N; ++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= N; ++j)&#123;</span><br><span class="line">			<span class="keyword">if</span> (i == <span class="number">1</span> || j == N || i &lt;= j )&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	 </span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



        <h3 id="找简易整数方程式的练习-使用For述句"   >
          <a href="#找简易整数方程式的练习-使用For述句" class="heading-link"><i class="fas fa-link"></i></a><a href="#找简易整数方程式的练习-使用For述句" class="headerlink" title="找简易整数方程式的练习(使用For述句)"></a>找简易整数方程式的练习(使用For述句)</h3>
      <ul>
<li>写法一</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">30</span>; ++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="number">30</span>; ++j)&#123;</span><br><span class="line">			<span class="keyword">if</span> (i + j == <span class="number">30</span> &amp;&amp; i * j == <span class="number">221</span>)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d, %d\n&quot;</span>, i, j);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>写法二</li>
</ul>
<p>Ex:</p>
<figure class="highlight c"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">30</span> / <span class="number">2</span>; ++i)&#123;</span><br><span class="line">		<span class="type">int</span> j = <span class="number">30</span> - i;</span><br><span class="line">		<span class="keyword">if</span> (i * j == <span class="number">221</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d, %d\n&quot;</span>, i, j);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>



<p>参考资料：</p>
<ul>
<li><p><span class="exturl"><a class="exturl__link"   href="https://www.bilibili.com/video/BV1WJ411H7v2?mid=0&p=1&share_from=ugc&share_medium=android&share_plat=android&share_session_id=4416b920-6c37-4606-8478-6330d1ec1101&share_source=QQ&share_tag=s_i&timestamp=1658578926&unique_k=Ymcefg8" >C语言入门</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
</li>
<li><p><span class="exturl"><a class="exturl__link"   href="https://feis.studio/#/c" >课程网站</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
</li>
</ul>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分布式文件系统HDFS</title>
    <url>/2024/10/16/HDFS%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[
        <h1 id="分布式文件系统HDFS"   >
          <a href="#分布式文件系统HDFS" class="heading-link"><i class="fas fa-link"></i></a><a href="#分布式文件系统HDFS" class="headerlink" title="分布式文件系统HDFS"></a>分布式文件系统HDFS</h1>
      
        <h2 id="概述"   >
          <a href="#概述" class="heading-link"><i class="fas fa-link"></i></a><a href="#概述" class="headerlink" title="概述"></a>概述</h2>
      <p>Hadoop分布式文件系统。<br>作为大数据生态圈最底层的分布式存储服务而存在。</p>
<blockquote>
<p>用于解决大数据如何存储问题。</p>
</blockquote>

        <h3 id="特性"   >
          <a href="#特性" class="heading-link"><i class="fas fa-link"></i></a><a href="#特性" class="headerlink" title="特性"></a>特性</h3>
      <ol>
<li>横跨在多台计算机上</li>
<li>高度容错</li>
<li>提供统一的访问接口</li>
</ol>

        <h3 id="设计目标"   >
          <a href="#设计目标" class="heading-link"><i class="fas fa-link"></i></a><a href="#设计目标" class="headerlink" title="设计目标"></a>设计目标</h3>
      
        <h4 id="硬件故障"   >
          <a href="#硬件故障" class="heading-link"><i class="fas fa-link"></i></a><a href="#硬件故障" class="headerlink" title="硬件故障"></a>硬件故障</h4>
      <p>HDFS核心架构目标<strong>故障检测和自动快速恢复</strong></p>

        <h4 id="流式读取数据"   >
          <a href="#流式读取数据" class="heading-link"><i class="fas fa-link"></i></a><a href="#流式读取数据" class="headerlink" title="流式读取数据"></a>流式读取数据</h4>
      <p>HDFS被设计用于<strong>批处理</strong></p>

        <h4 id="支持大文件"   >
          <a href="#支持大文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#支持大文件" class="headerlink" title="支持大文件"></a>支持大文件</h4>
      <p>典型的HDFS文件大小是GB到TB的级别</p>

        <h4 id="write-one-read-many模型"   >
          <a href="#write-one-read-many模型" class="heading-link"><i class="fas fa-link"></i></a><a href="#write-one-read-many模型" class="headerlink" title="write-one-read-many模型"></a>write-one-read-many模型</h4>
      <p>一个文件一旦创建、写入，关闭之后不需要再修改</p>

        <h4 id="移动计算"   >
          <a href="#移动计算" class="heading-link"><i class="fas fa-link"></i></a><a href="#移动计算" class="headerlink" title="移动计算"></a>移动计算</h4>
      <p>移动计算的代价比之移动数据的代价低</p>

        <h3 id="应用场景"   >
          <a href="#应用场景" class="heading-link"><i class="fas fa-link"></i></a><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3>
      <ol>
<li>大文件</li>
<li>数据流式访问</li>
<li>一次写入多次读取</li>
<li>低成本部署，廉价PC</li>
<li>高容错</li>
</ol>

        <h3 id="重要特性"   >
          <a href="#重要特性" class="heading-link"><i class="fas fa-link"></i></a><a href="#重要特性" class="headerlink" title="重要特性"></a>重要特性</h3>
      
        <h4 id="主从架构"   >
          <a href="#主从架构" class="heading-link"><i class="fas fa-link"></i></a><a href="#主从架构" class="headerlink" title="主从架构"></a>主从架构</h4>
      <p>HDFS采用master/slave架构。</p>
<p>一般一个HDFS集群是有一个Namenode和一定数目的Datanode组成。</p>
<blockquote>
<p>Namenode是HDFS主节点<br>Datanode是HDFS从节点</p>
</blockquote>

        <h4 id="分块存储机制"   >
          <a href="#分块存储机制" class="heading-link"><i class="fas fa-link"></i></a><a href="#分块存储机制" class="headerlink" title="分块存储机制"></a>分块存储机制</h4>
      <p>HDFS中的文件<strong>在物理上是分块存储</strong>的。</p>
<p>块的大小可以通过配置参数来规定，参数位于hdfs-default.xml中：dfs.blocksize。</p>
<p>默认大小是128M。</p>

        <h4 id="副本机制"   >
          <a href="#副本机制" class="heading-link"><i class="fas fa-link"></i></a><a href="#副本机制" class="headerlink" title="副本机制"></a>副本机制</h4>
      <p>文件的所有block都会有副本。</p>
<p>文件的block大小：dfs.blocksize。</p>
<p>副本系数：dfs.replication，默认值为3，会额外复制2份，连同本身总共3份副本</p>

        <h4 id="namespace"   >
          <a href="#namespace" class="heading-link"><i class="fas fa-link"></i></a><a href="#namespace" class="headerlink" title="namespace"></a>namespace</h4>
      <p>HDFS支持<strong>层次型文件组织结构</strong>。</p>
<p>HDFS给客户端提供一个<strong>统一的抽象目录树</strong>。</p>

        <h4 id="元数据管理"   >
          <a href="#元数据管理" class="heading-link"><i class="fas fa-link"></i></a><a href="#元数据管理" class="headerlink" title="元数据管理"></a>元数据管理</h4>
      <p>Namenode管理的元数据具有两种类型：</p>
<ol>
<li>文件自身属性信息：文件名称、权限，修改时间</li>
<li>文件块位置映射信息：哪个块位于哪个节点上</li>
</ol>

        <h4 id="数据块存储"   >
          <a href="#数据块存储" class="heading-link"><i class="fas fa-link"></i></a><a href="#数据块存储" class="headerlink" title="数据块存储"></a>数据块存储</h4>
      <p>文件的各个block的<strong>具体存储管理由Datanode节点承担</strong>。</p>

        <h2 id="微博HDFS案例"   >
          <a href="#微博HDFS案例" class="heading-link"><i class="fas fa-link"></i></a><a href="#微博HDFS案例" class="headerlink" title="微博HDFS案例"></a>微博HDFS案例</h2>
      
        <h3 id="HDFS-Shell-CLI客户端"   >
          <a href="#HDFS-Shell-CLI客户端" class="heading-link"><i class="fas fa-link"></i></a><a href="#HDFS-Shell-CLI客户端" class="headerlink" title="HDFS Shell CLI客户端"></a>HDFS Shell CLI客户端</h3>
      <ol>
<li>命令行界面CLI</li>
<li>跟文件系统读写相关的命令： hdfs dfs</li>
</ol>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">hdfs dfs -ls file:/// #操作本地文件系统</span><br><span class="line">hdfs dfs -ls hdfs://localhost:9000/ #操作HDFS分布式文件系统</span><br></pre></td></tr></table></div></figure>

]]></content>
      <categories>
        <category>HDFS</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
        <tag>HDFS</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop集群搭建</title>
    <url>/2024/10/16/Hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[
        <h1 id="Hadoop-集群搭建"   >
          <a href="#Hadoop-集群搭建" class="heading-link"><i class="fas fa-link"></i></a><a href="#Hadoop-集群搭建" class="headerlink" title="Hadoop 集群搭建"></a>Hadoop 集群搭建</h1>
      
        <h2 id="安装虚拟机"   >
          <a href="#安装虚拟机" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装虚拟机" class="headerlink" title="安装虚拟机"></a>安装虚拟机</h2>
      
        <h3 id="初始化"   >
          <a href="#初始化" class="heading-link"><i class="fas fa-link"></i></a><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3>
      
        <h4 id="自定义路径，新建虚拟机-Hadoop01"   >
          <a href="#自定义路径，新建虚拟机-Hadoop01" class="heading-link"><i class="fas fa-link"></i></a><a href="#自定义路径，新建虚拟机-Hadoop01" class="headerlink" title="自定义路径，新建虚拟机 Hadoop01"></a>自定义路径，新建虚拟机 Hadoop01</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/01.jpg" alt="" title="">


        <h4 id="处理器配置"   >
          <a href="#处理器配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#处理器配置" class="headerlink" title="处理器配置"></a>处理器配置</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/02.jpg" alt="" title="">


        <h4 id="内存配置"   >
          <a href="#内存配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#内存配置" class="headerlink" title="内存配置"></a>内存配置</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/03.jpg" alt="" title="">


        <h4 id="网络类型"   >
          <a href="#网络类型" class="heading-link"><i class="fas fa-link"></i></a><a href="#网络类型" class="headerlink" title="网络类型"></a>网络类型</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/04.jpg" alt="" title="">


        <h4 id="选择-I-O-控制器类型"   >
          <a href="#选择-I-O-控制器类型" class="heading-link"><i class="fas fa-link"></i></a><a href="#选择-I-O-控制器类型" class="headerlink" title="选择 I/O 控制器类型"></a>选择 I/O 控制器类型</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/05.jpg" alt="" title="">


        <h4 id="选择磁盘类型"   >
          <a href="#选择磁盘类型" class="heading-link"><i class="fas fa-link"></i></a><a href="#选择磁盘类型" class="headerlink" title="选择磁盘类型"></a>选择磁盘类型</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/06.jpg" alt="" title="">


        <h4 id="选择磁盘"   >
          <a href="#选择磁盘" class="heading-link"><i class="fas fa-link"></i></a><a href="#选择磁盘" class="headerlink" title="选择磁盘"></a>选择磁盘</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/07.jpg" alt="" title="">


        <h4 id="指定磁盘容量"   >
          <a href="#指定磁盘容量" class="heading-link"><i class="fas fa-link"></i></a><a href="#指定磁盘容量" class="headerlink" title="指定磁盘容量"></a>指定磁盘容量</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/08.jpg" alt="" title="">


        <h4 id="指定磁盘文件"   >
          <a href="#指定磁盘文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#指定磁盘文件" class="headerlink" title="指定磁盘文件"></a>指定磁盘文件</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/09.jpg" alt="" title="">


        <h4 id="完成创建"   >
          <a href="#完成创建" class="heading-link"><i class="fas fa-link"></i></a><a href="#完成创建" class="headerlink" title="完成创建"></a>完成创建</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/10.jpg" alt="" title="">


        <h4 id="使用-ISO-映像文件"   >
          <a href="#使用-ISO-映像文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#使用-ISO-映像文件" class="headerlink" title="使用 ISO 映像文件"></a>使用 ISO 映像文件</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/11.jpg" alt="" title="">


        <h4 id="中文界面"   >
          <a href="#中文界面" class="heading-link"><i class="fas fa-link"></i></a><a href="#中文界面" class="headerlink" title="中文界面"></a>中文界面</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/13.jpg" alt="" title="">


        <h4 id="自定义主机名"   >
          <a href="#自定义主机名" class="heading-link"><i class="fas fa-link"></i></a><a href="#自定义主机名" class="headerlink" title="自定义主机名"></a>自定义主机名</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/14.jpg" alt="" title="">


        <h4 id="安装目标位置"   >
          <a href="#安装目标位置" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装目标位置" class="headerlink" title="安装目标位置"></a>安装目标位置</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/15.jpg" alt="" title="">


        <h4 id="软件选择-环境界面"   >
          <a href="#软件选择-环境界面" class="heading-link"><i class="fas fa-link"></i></a><a href="#软件选择-环境界面" class="headerlink" title="软件选择-环境界面"></a>软件选择-环境界面</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/16.jpg" alt="" title="">


        <h4 id="开始安装"   >
          <a href="#开始安装" class="heading-link"><i class="fas fa-link"></i></a><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/17.jpg" alt="" title="">


        <h4 id="设置-ROOT-密码"   >
          <a href="#设置-ROOT-密码" class="heading-link"><i class="fas fa-link"></i></a><a href="#设置-ROOT-密码" class="headerlink" title="设置 ROOT 密码"></a>设置 ROOT 密码</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/18.jpg" alt="" title="">


        <h4 id="成功安装并重启"   >
          <a href="#成功安装并重启" class="heading-link"><i class="fas fa-link"></i></a><a href="#成功安装并重启" class="headerlink" title="成功安装并重启"></a>成功安装并重启</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/19.jpg" alt="" title="">


        <h4 id="接受许可证提示"   >
          <a href="#接受许可证提示" class="heading-link"><i class="fas fa-link"></i></a><a href="#接受许可证提示" class="headerlink" title="接受许可证提示"></a>接受许可证提示</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/20.jpg" alt="" title="">


        <h4 id="勾选同意许可协议"   >
          <a href="#勾选同意许可协议" class="heading-link"><i class="fas fa-link"></i></a><a href="#勾选同意许可协议" class="headerlink" title="勾选同意许可协议"></a>勾选同意许可协议</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/21.jpg" alt="" title="">


        <h4 id="配置中文"   >
          <a href="#配置中文" class="heading-link"><i class="fas fa-link"></i></a><a href="#配置中文" class="headerlink" title="配置中文"></a>配置中文</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/24.jpg" alt="" title="">


        <h4 id="关闭位置服务"   >
          <a href="#关闭位置服务" class="heading-link"><i class="fas fa-link"></i></a><a href="#关闭位置服务" class="headerlink" title="关闭位置服务"></a>关闭位置服务</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/25.jpg" alt="" title="">


        <h4 id="自定义时区"   >
          <a href="#自定义时区" class="heading-link"><i class="fas fa-link"></i></a><a href="#自定义时区" class="headerlink" title="自定义时区"></a>自定义时区</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/26.jpg" alt="" title="">


        <h4 id="跳过登录"   >
          <a href="#跳过登录" class="heading-link"><i class="fas fa-link"></i></a><a href="#跳过登录" class="headerlink" title="跳过登录"></a>跳过登录</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/27.jpg" alt="" title="">


        <h4 id="设置用户名"   >
          <a href="#设置用户名" class="heading-link"><i class="fas fa-link"></i></a><a href="#设置用户名" class="headerlink" title="设置用户名"></a>设置用户名</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/28.jpg" alt="" title="">


        <h4 id="设置密码"   >
          <a href="#设置密码" class="heading-link"><i class="fas fa-link"></i></a><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/29.jpg" alt="" title="">


        <h4 id="开始使用"   >
          <a href="#开始使用" class="heading-link"><i class="fas fa-link"></i></a><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/30.jpg" alt="" title="">


        <h3 id="克隆"   >
          <a href="#克隆" class="heading-link"><i class="fas fa-link"></i></a><a href="#克隆" class="headerlink" title="克隆"></a>克隆</h3>
      
        <h4 id="选择克隆源"   >
          <a href="#选择克隆源" class="heading-link"><i class="fas fa-link"></i></a><a href="#选择克隆源" class="headerlink" title="选择克隆源"></a>选择克隆源</h4>
      <blockquote>
<p>选中虚拟机 Hadoop01，右键选择“管理-克隆”</p>
</blockquote>
<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/33.jpg" alt="" title="">


        <h4 id="选择克隆类型"   >
          <a href="#选择克隆类型" class="heading-link"><i class="fas fa-link"></i></a><a href="#选择克隆类型" class="headerlink" title="选择克隆类型"></a>选择克隆类型</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/34.jpg" alt="" title="">


        <h4 id="新建虚拟机-Hadoop02"   >
          <a href="#新建虚拟机-Hadoop02" class="heading-link"><i class="fas fa-link"></i></a><a href="#新建虚拟机-Hadoop02" class="headerlink" title="新建虚拟机 Hadoop02"></a>新建虚拟机 Hadoop02</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/35.jpg" alt="" title="">


        <h4 id="克隆成功"   >
          <a href="#克隆成功" class="heading-link"><i class="fas fa-link"></i></a><a href="#克隆成功" class="headerlink" title="克隆成功"></a>克隆成功</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/36.jpg" alt="" title="">


        <h3 id="VMware-网络配置"   >
          <a href="#VMware-网络配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#VMware-网络配置" class="headerlink" title="VMware 网络配置"></a>VMware 网络配置</h3>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">Hadoop01：</span><br><span class="line">192.168.239.131</span><br><span class="line">Hadoop02：</span><br><span class="line">192.168.239.132</span><br><span class="line">Hadoop03：</span><br><span class="line">192.168.239.133</span><br></pre></td></tr></table></div></figure>


        <h4 id="ROOT-登录"   >
          <a href="#ROOT-登录" class="heading-link"><i class="fas fa-link"></i></a><a href="#ROOT-登录" class="headerlink" title="ROOT 登录"></a>ROOT 登录</h4>
      <blockquote>
<p>su root + 密码</p>
</blockquote>

        <h4 id="vi-指令"   >
          <a href="#vi-指令" class="heading-link"><i class="fas fa-link"></i></a><a href="#vi-指令" class="headerlink" title="vi 指令"></a>vi 指令</h4>
      <blockquote>
<p>vi /etc/sysconfig/network-scripts/ifcfg-ens33</p>
</blockquote>
<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/37.jpg" alt="" title="">


        <h4 id="Hadoop01-对应配置"   >
          <a href="#Hadoop01-对应配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#Hadoop01-对应配置" class="headerlink" title="Hadoop01 对应配置"></a>Hadoop01 对应配置</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">BOOTPROTO=static</span><br><span class="line">ONBOOT=yes</span><br></pre></td></tr></table></div></figure>

<p>IP 地址+网关地址+子网掩码+DNS 服务器地址：</p>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">IPADDR=192.168.239.131</span><br><span class="line">GATEWAY=192.168.239.2</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">DNS1=8.8.8.8</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/38.jpg" alt="" title="">


        <h4 id="Hadoop02-对应配置"   >
          <a href="#Hadoop02-对应配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#Hadoop02-对应配置" class="headerlink" title="Hadoop02 对应配置"></a>Hadoop02 对应配置</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">IPADDR=192.168.239.132</span><br><span class="line">GATEWAY=192.168.239.2</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">DNS1=8.8.8.8</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/39.jpg" alt="" title="">


        <h4 id="Hadoop03-对应配置"   >
          <a href="#Hadoop03-对应配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#Hadoop03-对应配置" class="headerlink" title="Hadoop03 对应配置"></a>Hadoop03 对应配置</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">IPADDR=192.168.239.133</span><br><span class="line">GATEWAY=192.168.239.2</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">DNS1=8.8.8.8</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/40.jpg" alt="" title="">

<p>@[toc]</p>
<blockquote>
<p>systemctl restart network</p>
<p>ifconfig</p>
</blockquote>
<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/41.jpg" alt="" title="">


        <h4 id="Hadoop01-修改主机名-并查看"   >
          <a href="#Hadoop01-修改主机名-并查看" class="heading-link"><i class="fas fa-link"></i></a><a href="#Hadoop01-修改主机名-并查看" class="headerlink" title="Hadoop01 修改主机名,并查看"></a>Hadoop01 修改主机名,并查看</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname + 主机名</span><br><span class="line">hostname</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/42.jpg" alt="" title="">


        <h4 id="Hosts-修改域名"   >
          <a href="#Hosts-修改域名" class="heading-link"><i class="fas fa-link"></i></a><a href="#Hosts-修改域名" class="headerlink" title="Hosts 修改域名"></a>Hosts 修改域名</h4>
      <blockquote>
<p>vi /etc/hosts</p>
</blockquote>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">192.168.239.131 hadoop01</span><br><span class="line">192.168.239.132 hadoop02</span><br><span class="line">192.168.239.133 hadoop03</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/43.jpg" alt="" title="">

<blockquote>
<p>按 Esc 键+:wq 保存退出</p>
</blockquote>

        <h4 id="重启"   >
          <a href="#重启" class="heading-link"><i class="fas fa-link"></i></a><a href="#重启" class="headerlink" title="重启"></a>重启</h4>
      <blockquote>
<p>reboot</p>
</blockquote>
<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/44.jpg" alt="" title="">


        <h4 id="Hadoop02-修改主机名-并查看"   >
          <a href="#Hadoop02-修改主机名-并查看" class="heading-link"><i class="fas fa-link"></i></a><a href="#Hadoop02-修改主机名-并查看" class="headerlink" title="Hadoop02 修改主机名,并查看"></a>Hadoop02 修改主机名,并查看</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname + 主机名</span><br><span class="line">hostname</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/45.jpg" alt="" title="">


        <h4 id="Hadoop03-修改主机名-并查看"   >
          <a href="#Hadoop03-修改主机名-并查看" class="heading-link"><i class="fas fa-link"></i></a><a href="#Hadoop03-修改主机名-并查看" class="headerlink" title="Hadoop03 修改主机名,并查看"></a>Hadoop03 修改主机名,并查看</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname + 主机名</span><br><span class="line">hostname</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/46.jpg" alt="" title="">


        <h2 id="Xshell-连接"   >
          <a href="#Xshell-连接" class="heading-link"><i class="fas fa-link"></i></a><a href="#Xshell-连接" class="headerlink" title="Xshell 连接"></a>Xshell 连接</h2>
      
        <h3 id="初始化-1"   >
          <a href="#初始化-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#初始化-1" class="headerlink" title="初始化"></a>初始化</h3>
      
        <h4 id="yum-源配置"   >
          <a href="#yum-源配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#yum-源配置" class="headerlink" title="yum 源配置"></a>yum 源配置</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line">// 下载新的CentOS-Base.repo到/etc/yum.repos.d</span><br><span class="line">wget -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">// 添加EPEL</span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/46b.jpg" alt="" title="">


        <h4 id="清理缓存并生成新的缓存"   >
          <a href="#清理缓存并生成新的缓存" class="heading-link"><i class="fas fa-link"></i></a><a href="#清理缓存并生成新的缓存" class="headerlink" title="清理缓存并生成新的缓存"></a>清理缓存并生成新的缓存</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/47.jpg" alt="" title="">


        <h2 id="JDK-安装"   >
          <a href="#JDK-安装" class="heading-link"><i class="fas fa-link"></i></a><a href="#JDK-安装" class="headerlink" title="JDK 安装"></a>JDK 安装</h2>
      
        <h3 id="初始化-2"   >
          <a href="#初始化-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#初始化-2" class="headerlink" title="初始化"></a>初始化</h3>
      
        <h4 id="上传到-hadoop01"   >
          <a href="#上传到-hadoop01" class="heading-link"><i class="fas fa-link"></i></a><a href="#上传到-hadoop01" class="headerlink" title="上传到 hadoop01"></a>上传到 hadoop01</h4>
      <blockquote>
<p>主机节点可用 rz 命令进行上传文件</p>
</blockquote>
<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/48.jpg" alt="" title="">


        <h4 id="选择对应-JDK-文件"   >
          <a href="#选择对应-JDK-文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#选择对应-JDK-文件" class="headerlink" title="选择对应 JDK 文件"></a>选择对应 JDK 文件</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/50.jpg" alt="" title="">


        <h4 id="传输界面"   >
          <a href="#传输界面" class="heading-link"><i class="fas fa-link"></i></a><a href="#传输界面" class="headerlink" title="传输界面"></a>传输界面</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/49.jpg" alt="" title="">


        <h4 id="查看当前目录"   >
          <a href="#查看当前目录" class="heading-link"><i class="fas fa-link"></i></a><a href="#查看当前目录" class="headerlink" title="查看当前目录"></a>查看当前目录</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/53.jpg" alt="" title="">


        <h4 id="在-home-目录下创建目录"   >
          <a href="#在-home-目录下创建目录" class="heading-link"><i class="fas fa-link"></i></a><a href="#在-home-目录下创建目录" class="headerlink" title="在 home 目录下创建目录"></a>在 home 目录下创建目录</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">// 创建目录</span><br><span class="line">mkdir -p /export/servers</span><br><span class="line">// 进入目录</span><br><span class="line">cd /export/servers</span><br><span class="line">//</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/54.jpg" alt="" title="">


        <h4 id="解压到对应目录"   >
          <a href="#解压到对应目录" class="heading-link"><i class="fas fa-link"></i></a><a href="#解压到对应目录" class="headerlink" title="解压到对应目录"></a>解压到对应目录</h4>
      <blockquote>
<p>tar -zxvf jdk-8u171-linux-x64.tar.gz -C /export/servers/</p>
</blockquote>

        <h4 id="进入目录-ls-查看文件"   >
          <a href="#进入目录-ls-查看文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#进入目录-ls-查看文件" class="headerlink" title="进入目录 ls 查看文件"></a>进入目录 ls 查看文件</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">cd /export/servers</span><br><span class="line">对jdk1.8.0 171创建快捷方式为jdk：</span><br><span class="line">ln -s jdk1.8.0_171 jdk</span><br><span class="line">// 查看当前目录</span><br><span class="line">ls</span><br><span class="line">// 查看当前路径</span><br><span class="line">pwd</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/58.jpg" alt="" title="">


        <h4 id="配置环境变量"   >
          <a href="#配置环境变量" class="heading-link"><i class="fas fa-link"></i></a><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">// 进入目录</span><br><span class="line">cd jdk1.8.0_171</span><br></pre></td></tr></table></div></figure>


        <h4 id="在-jdk-目录下配置-java-环境变量"   >
          <a href="#在-jdk-目录下配置-java-环境变量" class="heading-link"><i class="fas fa-link"></i></a><a href="#在-jdk-目录下配置-java-环境变量" class="headerlink" title="在 jdk 目录下配置 java 环境变量"></a>在 jdk 目录下配置 java 环境变量</h4>
      <blockquote>
<p>vi /etc/profile</p>
</blockquote>
<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/59.jpg" alt="" title="">

<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">// 添加内容</span><br><span class="line">export JAVA_HOME=/export/servers/jdk</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export CLASSPATH=$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/60.jpg" alt="" title="">


        <h4 id="让配置生效，并查看-java-是否安装成功"   >
          <a href="#让配置生效，并查看-java-是否安装成功" class="heading-link"><i class="fas fa-link"></i></a><a href="#让配置生效，并查看-java-是否安装成功" class="headerlink" title="让配置生效，并查看 java 是否安装成功"></a>让配置生效，并查看 java 是否安装成功</h4>
      <blockquote>
<p>source /etc/profile</p>
<p>java -version</p>
</blockquote>
<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/61.jpg" alt="" title="">


        <h4 id="配置免密登录"   >
          <a href="#配置免密登录" class="heading-link"><i class="fas fa-link"></i></a><a href="#配置免密登录" class="headerlink" title="配置免密登录"></a>配置免密登录</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">cd ~</span><br><span class="line">ssh-keygen -t rsa // 然后一直按回车</span><br><span class="line">ssh localhost</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/64-3.jpg" alt="" title="">

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/65.jpg" alt="" title="">


        <h4 id="拷贝密码到-hadoop02-和-hadoop03"   >
          <a href="#拷贝密码到-hadoop02-和-hadoop03" class="heading-link"><i class="fas fa-link"></i></a><a href="#拷贝密码到-hadoop02-和-hadoop03" class="headerlink" title="拷贝密码到 hadoop02 和 hadoop03"></a>拷贝密码到 hadoop02 和 hadoop03</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">ssh-copy-id hadoop02</span><br><span class="line">ssh-copy-id hadoop03</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/66.jpg" alt="" title="">


        <h2 id="Hadoop-安装"   >
          <a href="#Hadoop-安装" class="heading-link"><i class="fas fa-link"></i></a><a href="#Hadoop-安装" class="headerlink" title="Hadoop 安装"></a>Hadoop 安装</h2>
      
        <h3 id="初始化-3"   >
          <a href="#初始化-3" class="heading-link"><i class="fas fa-link"></i></a><a href="#初始化-3" class="headerlink" title="初始化"></a>初始化</h3>
      
        <h4 id="配置目录"   >
          <a href="#配置目录" class="heading-link"><i class="fas fa-link"></i></a><a href="#配置目录" class="headerlink" title="配置目录"></a>配置目录</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">// hadoop01作为主节点</span><br><span class="line">cd /home</span><br><span class="line">cd /export</span><br><span class="line">// 进入export下创建一个目录存放hadoop</span><br><span class="line">mkdir software</span><br><span class="line">// 切换目录</span><br><span class="line">cd software/</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/69.jpg" alt="" title="">


        <h4 id="上传-hadoop-文件到-software-目录下"   >
          <a href="#上传-hadoop-文件到-software-目录下" class="heading-link"><i class="fas fa-link"></i></a><a href="#上传-hadoop-文件到-software-目录下" class="headerlink" title="上传 hadoop 文件到 software 目录下"></a>上传 hadoop 文件到 software 目录下</h4>
      <blockquote>
<p>rz</p>
</blockquote>
<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/70.jpg" alt="" title="">


        <h4 id="解压到-servers-目录里"   >
          <a href="#解压到-servers-目录里" class="heading-link"><i class="fas fa-link"></i></a><a href="#解压到-servers-目录里" class="headerlink" title="解压到 servers 目录里"></a>解压到 servers 目录里</h4>
      <blockquote>
<p>tar -zxvf hadoop-2.10.1.tar.gz -C /export/servers</p>
</blockquote>

        <h4 id="进入目录"   >
          <a href="#进入目录" class="heading-link"><i class="fas fa-link"></i></a><a href="#进入目录" class="headerlink" title="进入目录"></a>进入目录</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">cd /export</span><br><span class="line">cd servers/</span><br></pre></td></tr></table></div></figure>


        <h4 id="查看是否解压成功"   >
          <a href="#查看是否解压成功" class="heading-link"><i class="fas fa-link"></i></a><a href="#查看是否解压成功" class="headerlink" title="查看是否解压成功"></a>查看是否解压成功</h4>
      <blockquote>
<p>ls</p>
</blockquote>
<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/72.jpg" alt="" title="">


        <h4 id="创建快捷方式"   >
          <a href="#创建快捷方式" class="heading-link"><i class="fas fa-link"></i></a><a href="#创建快捷方式" class="headerlink" title="创建快捷方式"></a>创建快捷方式</h4>
      <blockquote>
<p>ln -s hadoop-2.10.1 hadoop</p>
</blockquote>
<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/72.jpg" alt="" title="">


        <h4 id="配置-hadoop-的环境变量"   >
          <a href="#配置-hadoop-的环境变量" class="heading-link"><i class="fas fa-link"></i></a><a href="#配置-hadoop-的环境变量" class="headerlink" title="配置 hadoop 的环境变量"></a>配置 hadoop 的环境变量</h4>
      <blockquote>
<p>vim /etc/profile</p>
</blockquote>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">export HADOOP_HOME=/export/servers/hadoop</span><br><span class="line">export PATH=$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$PATH</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/75.jpg" alt="" title="">

<blockquote>
<p>按 Esc 键+:wq 保存退出</p>
</blockquote>

        <h4 id="使配置生效"   >
          <a href="#使配置生效" class="heading-link"><i class="fas fa-link"></i></a><a href="#使配置生效" class="headerlink" title="使配置生效"></a>使配置生效</h4>
      <blockquote>
<p>source /etc/profile</p>
</blockquote>

        <h4 id="报错-Error"   >
          <a href="#报错-Error" class="heading-link"><i class="fas fa-link"></i></a><a href="#报错-Error" class="headerlink" title="报错 Error"></a>报错 Error</h4>
      <p>JAVA_HOME is not set and could not be found.</p>
<blockquote>
<p>sudo vim hadoop/etc/hadoop/hadoop-env.sh</p>
</blockquote>
<p>将语句 export JAVA_HOME=${JAVA_HOME}修改为：</p>
<blockquote>
<p>export JAVA_HOME=/export/servers/jdk</p>
</blockquote>
<p>保存后退出</p>

        <h4 id="再次输入"   >
          <a href="#再次输入" class="heading-link"><i class="fas fa-link"></i></a><a href="#再次输入" class="headerlink" title="再次输入"></a>再次输入</h4>
      <blockquote>
<p>start-dfs.sh</p>
</blockquote>

        <h4 id="查看-hadoop-是否安装成功"   >
          <a href="#查看-hadoop-是否安装成功" class="heading-link"><i class="fas fa-link"></i></a><a href="#查看-hadoop-是否安装成功" class="headerlink" title="查看 hadoop 是否安装成功"></a>查看 hadoop 是否安装成功</h4>
      <blockquote>
<p>hadoop version</p>
</blockquote>
<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/79.jpg" alt="" title="">


        <h4 id="修改-xml-文件"   >
          <a href="#修改-xml-文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#修改-xml-文件" class="headerlink" title="修改 xml 文件"></a>修改 xml 文件</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">cd /export</span><br><span class="line">cd servers/</span><br><span class="line">cd hadoop-2.10.1/</span><br><span class="line">cd etc/</span><br><span class="line">ls</span><br><span class="line">cd hadoop</span><br></pre></td></tr></table></div></figure>


        <h5 id="core-site-xml"   >
          <a href="#core-site-xml" class="heading-link"><i class="fas fa-link"></i></a><a href="#core-site-xml" class="headerlink" title="core-site.xml"></a>core-site.xml</h5>
      <blockquote>
<p>vi core-site.xml</p>
</blockquote>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;!-- 指定HDFS老大（namenode）的通信地址 --&gt;</span><br><span class="line">　　&lt;property&gt;</span><br><span class="line">　　　　&lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">　　　　&lt;value&gt;XXX.XXX.XXX.XXX:9000(将XXX替换成自己的ip)&lt;/value&gt;</span><br><span class="line">　　&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">　　&lt;!-- 指定hadoop运行时产生文件的存储路径 --&gt;</span><br><span class="line">　　&lt;property&gt;</span><br><span class="line">　　　　&lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">　　　　&lt;value&gt;/export/servers/hadoop-2.10.1/tmp&lt;/value&gt;</span><br><span class="line">　　&lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></div></figure>


        <h5 id="hdfs-site-xml"   >
          <a href="#hdfs-site-xml" class="heading-link"><i class="fas fa-link"></i></a><a href="#hdfs-site-xml" class="headerlink" title="hdfs-site.xml"></a>hdfs-site.xml</h5>
      <blockquote>
<p>vi hdfs-site.xml</p>
</blockquote>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;!-- 设置hdfs副本数量 --&gt;</span><br><span class="line">　　　&lt;property&gt;</span><br><span class="line">　　　　&lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">　　　　&lt;value&gt;192.168.239.131:9000&lt;/value&gt;</span><br><span class="line">　　&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.datanode.http.address&lt;/name&gt;</span><br><span class="line">&lt;value&gt;192.168.239.131:50075&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></div></figure>


        <h5 id="mapred-site-xml"   >
          <a href="#mapred-site-xml" class="heading-link"><i class="fas fa-link"></i></a><a href="#mapred-site-xml" class="headerlink" title="mapred-site.xml"></a>mapred-site.xml</h5>
      <blockquote>
<p>vi mapred-site.xml</p>
</blockquote>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;!-- 通知框架MR使用YARN --&gt;</span><br><span class="line">　　&lt;property&gt;</span><br><span class="line">　　　　&lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">　　　　&lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">　　&lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></div></figure>


        <h5 id="yarn-site-xml"   >
          <a href="#yarn-site-xml" class="heading-link"><i class="fas fa-link"></i></a><a href="#yarn-site-xml" class="headerlink" title="yarn-site.xml"></a>yarn-site.xml</h5>
      <blockquote>
<p>vi yarn-site.xml</p>
</blockquote>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Site specific YARN configuration properties --&gt;</span><br><span class="line">&lt;!-- reducer取数据的方式是mapreduce_shuffle --&gt;</span><br><span class="line">　　&lt;property&gt;</span><br><span class="line">　　　　&lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">　　　　&lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">　　&lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></div></figure>


        <h4 id="初始化节点"   >
          <a href="#初始化节点" class="heading-link"><i class="fas fa-link"></i></a><a href="#初始化节点" class="headerlink" title="初始化节点"></a>初始化节点</h4>
      <blockquote>
<p>hdfs namenode -format</p>
</blockquote>
<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/84.jpg" alt="" title="">


        <h4 id="初始化节点成功"   >
          <a href="#初始化节点成功" class="heading-link"><i class="fas fa-link"></i></a><a href="#初始化节点成功" class="headerlink" title="初始化节点成功"></a>初始化节点成功</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/85.jpg" alt="" title="">


        <h4 id="启动-hadoop"   >
          <a href="#启动-hadoop" class="heading-link"><i class="fas fa-link"></i></a><a href="#启动-hadoop" class="headerlink" title="启动 hadoop"></a>启动 hadoop</h4>
      <blockquote>
<p>start-dfs.sh<br>start-dfs.sh</p>
</blockquote>

        <h4 id="输入-jps-报错"   >
          <a href="#输入-jps-报错" class="heading-link"><i class="fas fa-link"></i></a><a href="#输入-jps-报错" class="headerlink" title="输入 jps 报错"></a>输入 jps 报错</h4>
      <blockquote>
<p>bash: jps: 未找到命令…</p>
</blockquote>
<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/86.jpg" alt="" title="">


        <h4 id="Web-页面访问"   >
          <a href="#Web-页面访问" class="heading-link"><i class="fas fa-link"></i></a><a href="#Web-页面访问" class="headerlink" title="Web 页面访问"></a>Web 页面访问</h4>
      <blockquote>
<p>192.168.239.131:50070</p>
</blockquote>

        <h4 id="终止进程"   >
          <a href="#终止进程" class="heading-link"><i class="fas fa-link"></i></a><a href="#终止进程" class="headerlink" title="终止进程"></a>终止进程</h4>
      <blockquote>
<p>stop-dfs.sh<br>stop-yarn.sh</p>
</blockquote>

        <h2 id="Spark-安装"   >
          <a href="#Spark-安装" class="heading-link"><i class="fas fa-link"></i></a><a href="#Spark-安装" class="headerlink" title="Spark 安装"></a>Spark 安装</h2>
      
        <h3 id="初始化-4"   >
          <a href="#初始化-4" class="heading-link"><i class="fas fa-link"></i></a><a href="#初始化-4" class="headerlink" title="初始化"></a>初始化</h3>
      
        <h4 id="下载安装"   >
          <a href="#下载安装" class="heading-link"><i class="fas fa-link"></i></a><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h4>
      <p>hadoop01 作为主节点,/export/servers 作为解压后的文件存储目录</p>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">cd /home</span><br><span class="line">cd /export</span><br><span class="line">cd software/</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/89.jpg" alt="" title="">


        <h4 id="上传文件到-software-目录下"   >
          <a href="#上传文件到-software-目录下" class="heading-link"><i class="fas fa-link"></i></a><a href="#上传文件到-software-目录下" class="headerlink" title="上传文件到 software 目录下"></a>上传文件到 software 目录下</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/89.jpg" alt="" title="">


        <h4 id="解压到-servers-目录里-1"   >
          <a href="#解压到-servers-目录里-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#解压到-servers-目录里-1" class="headerlink" title="解压到 servers 目录里"></a>解压到 servers 目录里</h4>
      <blockquote>
<p>tar -zxvf spark-3.3.2-bin-hadoop3.tgz -C /export/servers</p>
</blockquote>

        <h4 id="ls-查看"   >
          <a href="#ls-查看" class="heading-link"><i class="fas fa-link"></i></a><a href="#ls-查看" class="headerlink" title="ls 查看"></a>ls 查看</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/90.jpg" alt="" title="">


        <h4 id="配置环境变量-1"   >
          <a href="#配置环境变量-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#配置环境变量-1" class="headerlink" title="配置环境变量"></a>配置环境变量</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">// 进入环境变量配置界面</span><br><span class="line">vi /etc/profile</span><br></pre></td></tr></table></div></figure>

<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">// 新增</span><br><span class="line">export SPARK_HOME=/export/servers/spark-3.3.2-bin-hadoop3</span><br><span class="line">export PATH=$SPARK_HOME/bin:$PATH</span><br></pre></td></tr></table></div></figure>


        <h4 id="激活"   >
          <a href="#激活" class="heading-link"><i class="fas fa-link"></i></a><a href="#激活" class="headerlink" title="激活"></a>激活</h4>
      <blockquote>
<p>source /etc/profile</p>
</blockquote>

        <h4 id="修改-spark-配置文件"   >
          <a href="#修改-spark-配置文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#修改-spark-配置文件" class="headerlink" title="修改 spark 配置文件"></a>修改 spark 配置文件</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">cd spark-3.3.2-bin-hadoop3</span><br><span class="line">cd conf</span><br><span class="line">ls</span><br><span class="line">cp spark-env.sh.template spark-env.sh</span><br></pre></td></tr></table></div></figure>

<blockquote>
<p>vi spark-env.sh</p>
</blockquote>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=/export/servers/jdk</span><br><span class="line">export SPARK_MASTER_IP=192.168.239.131</span><br><span class="line">export SPARK_MASTER_PORT=7077</span><br></pre></td></tr></table></div></figure>

<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/92.jpg" alt="" title="">

<blockquote>
<p>cd ../..返回/export/servers 目录</p>
</blockquote>
<blockquote>
<p>scp -r spark-3.3.2-bin-hadoop3/ 192.168.239.131:/export/servers</p>
</blockquote>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">cd..</span><br><span class="line">./sbin/start-all.sh</span><br><span class="line">jps</span><br><span class="line">cd /export</span><br><span class="line">cd servers</span><br></pre></td></tr></table></div></figure>


        <h4 id="查看最终结果"   >
          <a href="#查看最终结果" class="heading-link"><i class="fas fa-link"></i></a><a href="#查看最终结果" class="headerlink" title="查看最终结果"></a>查看最终结果</h4>
      <img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/88.jpg" alt="" title="">

<blockquote>
<p>spark-shell</p>
</blockquote>
<img src="https://images2023-1317225058.cos.ap-nanjing.myqcloud.com/blog/93.jpg" alt="" title="">
]]></content>
      <categories>
        <category>Hadoop</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
        <tag>Linux</tag>
        <tag>Spark</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-IO流</title>
    <url>/2024/10/16/Java-IO%E6%B5%81/</url>
    <content><![CDATA[
        <h1 id="IO流"   >
          <a href="#IO流" class="heading-link"><i class="fas fa-link"></i></a><a href="#IO流" class="headerlink" title="IO流"></a>IO流</h1>
      
        <h2 id="字节流"   >
          <a href="#字节流" class="heading-link"><i class="fas fa-link"></i></a><a href="#字节流" class="headerlink" title="字节流"></a>字节流</h2>
      <ul>
<li><p>分类：</p>
<ol>
<li>字节输入流InputStream</li>
<li>字节输出流OutputStream</li>
</ol>
</li>
<li><p>字节流一次读取一个字节</p>
</li>
<li><p>字节流读取中文会乱码</p>
</li>
</ul>

        <h3 id="字节输出流"   >
          <a href="#字节输出流" class="heading-link"><i class="fas fa-link"></i></a><a href="#字节输出流" class="headerlink" title="字节输出流"></a>字节输出流</h3>
      <ul>
<li>如果文件不存在，则创建</li>
</ul>

        <h4 id="字节输出流写出数据的三种方式"   >
          <a href="#字节输出流写出数据的三种方式" class="heading-link"><i class="fas fa-link"></i></a><a href="#字节输出流写出数据的三种方式" class="headerlink" title="字节输出流写出数据的三种方式"></a>字节输出流写出数据的三种方式</h4>
      <ul>
<li>一次写一个字节数据</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;D:\\CCCCCCCCCCCCCCComputer\\2022FallSE\\111Java\\2022FallJavaLessonCode\\a.txt&quot;</span>); <span class="comment">// 输入完整路径名</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 2.写出数据</span></span><br><span class="line">        fos.write(<span class="number">97</span>);  <span class="comment">// 在a.txt中显示字符&quot;a&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        fos.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>一次写一个字节数组数据</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;D:\\CCCCCCCCCCCCCCComputer\\2022FallSE\\111Java\\2022FallJavaLessonCode\\a.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.写出数据</span></span><br><span class="line">        <span class="type">byte</span>[] bytes = &#123;<span class="number">97</span>,<span class="number">98</span>,<span class="number">99</span>,<span class="number">100</span>&#125;;</span><br><span class="line">        fos.write(bytes);   <span class="comment">// 输出: abcd</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        fos.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>一次写一个字节数组的部分数据</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;D:\\CCCCCCCCCCCCCCComputer\\2022FallSE\\111Java\\2022FallJavaLessonCode\\a.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.写出数据</span></span><br><span class="line">        <span class="type">byte</span>[] bytes = &#123;<span class="number">97</span>,<span class="number">98</span>,<span class="number">99</span>,<span class="number">100</span>&#125;;</span><br><span class="line">        fos.write(bytes,<span class="number">1</span>,<span class="number">2</span>);   <span class="comment">// bc</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        fos.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure>


        <h4 id="换行和续写"   >
          <a href="#换行和续写" class="heading-link"><i class="fas fa-link"></i></a><a href="#换行和续写" class="headerlink" title="换行和续写"></a>换行和续写</h4>
      <ul>
<li>输出字符串</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;D:\\CCCCCCCCCCCCCCComputer\\2022FallSE\\111Java\\2022FallJavaLessonCode\\a.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.写出数据</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;today&quot;</span>;</span><br><span class="line">        <span class="type">byte</span>[] bytes = str.getBytes();</span><br><span class="line">        fos.write(bytes);   <span class="comment">// today</span></span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str02</span> <span class="operator">=</span> <span class="string">&quot;20220127&quot;</span>;</span><br><span class="line">        <span class="type">byte</span>[] bytes02 = str02.getBytes();</span><br><span class="line">        fos.write(bytes02);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        fos.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>换行(换行符)</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;D:\\CCCCCCCCCCCCCCComputer\\2022FallSE\\111Java\\2022FallJavaLessonCode\\a.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.写出数据</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;today&quot;</span>;</span><br><span class="line">        <span class="type">byte</span>[] bytes = str.getBytes();</span><br><span class="line">        fos.write(bytes);   <span class="comment">// today</span></span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">wrap</span> <span class="operator">=</span> <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">        <span class="type">byte</span>[] bytes01 = wrap.getBytes();</span><br><span class="line">        fos.write(bytes01); <span class="comment">// 回车换行</span></span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str02</span> <span class="operator">=</span> <span class="string">&quot;20220127&quot;</span>;</span><br><span class="line">        <span class="type">byte</span>[] bytes02 = str02.getBytes();</span><br><span class="line">        fos.write(bytes02);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        fos.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 输出: </span></span><br><span class="line">    <span class="comment">//today</span></span><br><span class="line">    <span class="comment">//20220127</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>续写</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;D:\\CCCCCCCCCCCCCCComputer\\2022FallSE\\111Java\\2022FallJavaLessonCode\\a.txt&quot;</span>,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.写出数据</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;today&quot;</span>;</span><br><span class="line">        <span class="type">byte</span>[] bytes = str.getBytes();</span><br><span class="line">        fos.write(bytes);   <span class="comment">// today</span></span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">wrap</span> <span class="operator">=</span> <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">        <span class="type">byte</span>[] bytes01 = wrap.getBytes();</span><br><span class="line">        fos.write(bytes01); <span class="comment">// 回车换行</span></span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str02</span> <span class="operator">=</span> <span class="string">&quot;20220127&quot;</span>;</span><br><span class="line">        <span class="type">byte</span>[] bytes02 = str02.getBytes();</span><br><span class="line">        fos.write(bytes02);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        fos.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 输出: </span></span><br><span class="line">    <span class="comment">//today</span></span><br><span class="line">    <span class="comment">//20220127today</span></span><br><span class="line">    <span class="comment">//20220127</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="字节输入流"   >
          <a href="#字节输入流" class="heading-link"><i class="fas fa-link"></i></a><a href="#字节输入流" class="headerlink" title="字节输入流"></a>字节输入流</h3>
      <ul>
<li><p>如果文件不存在，则报错</p>
</li>
<li><p>读到文件末尾，read方法返回-1</p>
</li>
</ul>

        <h4 id="基本用法"   >
          <a href="#基本用法" class="heading-link"><i class="fas fa-link"></i></a><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteStreamTest</span> &#123;</span><br><span class="line">    <span class="comment">// a.txt文件中显示&quot;abcde&quot;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;D:\\CCCCCCCCCCCCCCComputer\\2022FallSE\\111Java\\2022FallJavaLessonCode\\a.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.读取数据</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">b1</span> <span class="operator">=</span> fis.read();</span><br><span class="line">        System.out.println(b1); <span class="comment">// 97</span></span><br><span class="line">        System.out.println((<span class="type">char</span>)b1); <span class="comment">// a</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        fis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>读入所有数据</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteStreamTest</span> &#123;</span><br><span class="line">    <span class="comment">// a.txt文件中显示&quot;abcde&quot;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;D:\\CCCCCCCCCCCCCCComputer\\2022FallSE\\111Java\\2022FallJavaLessonCode\\a.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.读取数据</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">b1</span> <span class="operator">=</span> fis.read();</span><br><span class="line">        System.out.println(b1); <span class="comment">// 97</span></span><br><span class="line">        System.out.println((<span class="type">char</span>)b1); <span class="comment">// a</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">b2</span> <span class="operator">=</span> fis.read();</span><br><span class="line">        System.out.println(b2); <span class="comment">// 98</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">b3</span> <span class="operator">=</span> fis.read();</span><br><span class="line">        System.out.println(b3); <span class="comment">// 99</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">b4</span> <span class="operator">=</span> fis.read();</span><br><span class="line">        System.out.println(b4); <span class="comment">// 100</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">b5</span> <span class="operator">=</span> fis.read();</span><br><span class="line">        System.out.println(b5); <span class="comment">// 101</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">b6</span> <span class="operator">=</span> fis.read();</span><br><span class="line">        System.out.println(b6); <span class="comment">// -1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        fis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="循环读取"   >
          <a href="#循环读取" class="heading-link"><i class="fas fa-link"></i></a><a href="#循环读取" class="headerlink" title="循环读取"></a>循环读取</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteStreamTest</span> &#123;</span><br><span class="line">    <span class="comment">// a.txt文件显示&quot;txt&quot;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        字节输入流循环读取</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;D:\\CCCCCCCCCCCCCCComputer\\2022FallSE\\111Java\\2022FallJavaLessonCode\\a.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.循环读取</span></span><br><span class="line">        <span class="type">int</span> b;</span><br><span class="line">        <span class="keyword">while</span>((b = fis.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println((<span class="type">char</span>)b);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        fis.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 输出:</span></span><br><span class="line">    <span class="comment">//t</span></span><br><span class="line">    <span class="comment">//x</span></span><br><span class="line">    <span class="comment">//t</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="文件拷贝"   >
          <a href="#文件拷贝" class="heading-link"><i class="fas fa-link"></i></a><a href="#文件拷贝" class="headerlink" title="文件拷贝"></a>文件拷贝</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteStreamTest</span> &#123;</span><br><span class="line">    <span class="comment">// a.txt文件显示&quot;abcde&quot;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        文件拷贝</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;D:\\CCCCCCCCCCCCCCComputer\\2022FallSE\\111Java\\2022FallJavaLessonCode\\a.txt&quot;</span>);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;D:\\CCCCCCCCCCCCCCComputer\\2022FallSE\\111Java\\2022FallJavaLessonCode\\copy.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.拷贝(核心思想: 边读边写)</span></span><br><span class="line">        <span class="type">int</span> b;</span><br><span class="line">        <span class="keyword">while</span>((b = fis.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">            fos.write(b);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源(先开的流后关闭)</span></span><br><span class="line">        fos.close();</span><br><span class="line">        fis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="文件拷贝的弊端和解决方案"   >
          <a href="#文件拷贝的弊端和解决方案" class="heading-link"><i class="fas fa-link"></i></a><a href="#文件拷贝的弊端和解决方案" class="headerlink" title="文件拷贝的弊端和解决方案"></a>文件拷贝的弊端和解决方案</h4>
      
        <h5 id="FileInputStream一次读写一个字节"   >
          <a href="#FileInputStream一次读写一个字节" class="heading-link"><i class="fas fa-link"></i></a><a href="#FileInputStream一次读写一个字节" class="headerlink" title="FileInputStream一次读写一个字节"></a>FileInputStream一次读写一个字节</h5>
      <ul>
<li>弊端: 耗时长</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 边读边写</span></span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line">        <span class="keyword">while</span>((b = fis.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">            fos.write(b);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></div></figure>


        <h5 id="FileInputStream一次读写多个字节"   >
          <a href="#FileInputStream一次读写多个字节" class="heading-link"><i class="fas fa-link"></i></a><a href="#FileInputStream一次读写多个字节" class="headerlink" title="FileInputStream一次读写多个字节"></a>FileInputStream一次读写多个字节</h5>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteStreamTest</span> &#123;</span><br><span class="line">    <span class="comment">// a.txt文件显示&quot;abcde&quot;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        一次读一个字节数组数据</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;D:\\CCCCCCCCCCCCCCComputer\\2022FallSE\\111Java\\2022FallJavaLessonCode\\a.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.读取数据</span></span><br><span class="line">        <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> fis.read(bytes);</span><br><span class="line">        System.out.println(len);    <span class="comment">// 2</span></span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(bytes);</span><br><span class="line">        System.out.println(str);    <span class="comment">// ab</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">len01</span> <span class="operator">=</span> fis.read(bytes);</span><br><span class="line">        System.out.println(len01);    <span class="comment">// 2</span></span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(bytes);</span><br><span class="line">        System.out.println(str01);    <span class="comment">// cd</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">len02</span> <span class="operator">=</span> fis.read(bytes);</span><br><span class="line">        System.out.println(len02);    <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(bytes);</span><br><span class="line">        System.out.println(str02);    <span class="comment">// ed</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">len03</span> <span class="operator">=</span> fis.read(bytes);</span><br><span class="line">        System.out.println(len03);    <span class="comment">// -1</span></span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(bytes);</span><br><span class="line">        System.out.println(str03);    <span class="comment">// ed</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        fis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteStreamTest</span> &#123;</span><br><span class="line">    <span class="comment">// a.txt文件显示&quot;abcde&quot;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        一次读一个字节数组数据</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;D:\\CCCCCCCCCCCCCCComputer\\2022FallSE\\111Java\\2022FallJavaLessonCode\\a.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.读取数据</span></span><br><span class="line">        <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> fis.read(bytes);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(bytes,<span class="number">0</span>,len));    <span class="comment">// ab</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">len01</span> <span class="operator">=</span> fis.read(bytes);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(bytes,<span class="number">0</span>,len01));  <span class="comment">// cd</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">len02</span> <span class="operator">=</span> fis.read(bytes);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(bytes,<span class="number">0</span>,len02));  <span class="comment">// e</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        fis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="文件拷贝改写"   >
          <a href="#文件拷贝改写" class="heading-link"><i class="fas fa-link"></i></a><a href="#文件拷贝改写" class="headerlink" title="文件拷贝改写"></a>文件拷贝改写</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;D:\\CCCCCCCCCCCCCCComputer\\2022FallSE\\111Java\\2022FallJavaLessonCode\\a.txt&quot;</span>);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;D:\\CCCCCCCCCCCCCCComputer\\2022FallSE\\111Java\\2022FallJavaLessonCode\\change.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.拷贝</span></span><br><span class="line">        <span class="type">int</span> len;</span><br><span class="line">        <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span> * <span class="number">1024</span> * <span class="number">5</span>];</span><br><span class="line">        <span class="keyword">while</span>((len = fis.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">            fos.write(bytes,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        fos.close();</span><br><span class="line">        fis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>文件拷贝改写所花时间(单位毫秒)</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;D:\\CCCCCCCCCCCCCCComputer\\2022FallSE\\111Java\\2022FallJavaLessonCode\\a.txt&quot;</span>);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;D:\\CCCCCCCCCCCCCCComputer\\2022FallSE\\111Java\\2022FallJavaLessonCode\\change.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.拷贝</span></span><br><span class="line">        <span class="type">int</span> len;</span><br><span class="line">        <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span> * <span class="number">1024</span> * <span class="number">5</span>];</span><br><span class="line">        <span class="keyword">while</span>((len = fis.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">            fos.write(bytes,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        fos.close();</span><br><span class="line">        fis.close();</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">        System.out.println(end - start);    <span class="comment">// 14</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="IO流中不同JDK版本捕获异常的方式"   >
          <a href="#IO流中不同JDK版本捕获异常的方式" class="heading-link"><i class="fas fa-link"></i></a><a href="#IO流中不同JDK版本捕获异常的方式" class="headerlink" title="IO流中不同JDK版本捕获异常的方式"></a>IO流中不同JDK版本捕获异常的方式</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        利用try...catch...finally捕获拷贝文件中代码出现的异常</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fis = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>);</span><br><span class="line">            fos = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\copy.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2.拷贝</span></span><br><span class="line">            <span class="type">int</span> len;</span><br><span class="line">            <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span> * <span class="number">1024</span> * <span class="number">5</span>];</span><br><span class="line">            <span class="keyword">while</span>((len = fis.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                fos.write(bytes,<span class="number">0</span>,len);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 3.释放资源</span></span><br><span class="line">            <span class="keyword">if</span>(fos != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fos.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(fis != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fis.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>JDK7：IO流中捕获异常的写法</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * JDK7：IO流中捕获异常的写法</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>(<span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>);</span><br><span class="line">            <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\copy.txt&quot;</span>))&#123;</span><br><span class="line">            <span class="comment">// 拷贝</span></span><br><span class="line">            <span class="type">int</span> len;</span><br><span class="line">            <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span> * <span class="number">1024</span> * <span class="number">5</span>];</span><br><span class="line">            <span class="keyword">while</span>((len = fis.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                fos.write(bytes,<span class="number">0</span>,len);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span>(IOException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>JDK9：IO流中捕获异常的写法</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FileNotFoundException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * </span></span><br><span class="line"><span class="comment">        * JDK9：IO流中捕获异常的写法</span></span><br><span class="line"><span class="comment">        * </span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\copy.txt&quot;</span>);</span><br><span class="line">                </span><br><span class="line">        <span class="keyword">try</span>(fis;fos)&#123;</span><br><span class="line">            <span class="comment">// 拷贝</span></span><br><span class="line">            <span class="type">int</span> len;</span><br><span class="line">            <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span> * <span class="number">1024</span> * <span class="number">5</span>];</span><br><span class="line">            <span class="keyword">while</span>((len = fis.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                fos.write(bytes,<span class="number">0</span>,len);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span>(IOException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="字符集"   >
          <a href="#字符集" class="heading-link"><i class="fas fa-link"></i></a><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h2>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharSetTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        *</span></span><br><span class="line"><span class="comment">        * 字节流读取中文会乱码</span></span><br><span class="line"><span class="comment">        *</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;C:\\\\Users\\\\Administrator\\\\Desktop\\\\a.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> b;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((b = fis.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.print((<span class="type">char</span>)b);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fis.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 输出: ä¸­æ</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="ASCII"   >
          <a href="#ASCII" class="heading-link"><i class="fas fa-link"></i></a><a href="#ASCII" class="headerlink" title="ASCII"></a>ASCII</h3>
      <p>略</p>

        <h3 id="GBK"   >
          <a href="#GBK" class="heading-link"><i class="fas fa-link"></i></a><a href="#GBK" class="headerlink" title="GBK"></a>GBK</h3>
      <ul>
<li>编码规则:<ol>
<li>英文-1个字节</li>
<li>中文-2个字节</li>
</ol>
</li>
</ul>

        <h3 id="Unicode"   >
          <a href="#Unicode" class="heading-link"><i class="fas fa-link"></i></a><a href="#Unicode" class="headerlink" title="Unicode"></a>Unicode</h3>
      
        <h4 id="UTF-8"   >
          <a href="#UTF-8" class="heading-link"><i class="fas fa-link"></i></a><a href="#UTF-8" class="headerlink" title="UTF-8"></a>UTF-8</h4>
      <ul>
<li><p>是Unicode字符集的一种编码方式</p>
</li>
<li><p>编码规则:</p>
<ol>
<li>英文-1个字节</li>
<li>中文-3个字节</li>
</ol>
</li>
</ul>

        <h3 id="Java中编码和解码的代码实现"   >
          <a href="#Java中编码和解码的代码实现" class="heading-link"><i class="fas fa-link"></i></a><a href="#Java中编码和解码的代码实现" class="headerlink" title="Java中编码和解码的代码实现"></a>Java中编码和解码的代码实现</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharSetTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> UnsupportedEncodingException &#123;</span><br><span class="line">        <span class="comment">// 1.编码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;today&quot;</span>;</span><br><span class="line">        <span class="type">byte</span>[] bytes1 = str.getBytes(); <span class="comment">// idea默认使用UTF-8</span></span><br><span class="line">        System.out.print(bytes1);   <span class="comment">// 输出：[B@5cad8086</span></span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.print(Arrays.toString(bytes1));  <span class="comment">// 输出：[116, 111, 100, 97, 121]</span></span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] bytes2 = str.getBytes(<span class="string">&quot;GBK&quot;</span>);  <span class="comment">// 输出：[116, 111, 100, 97, 121]</span></span><br><span class="line">        System.out.print(Arrays.toString(bytes2));</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.解码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">newStr</span> <span class="operator">=</span> <span class="string">&quot;今天&quot;</span>;</span><br><span class="line">        <span class="type">byte</span>[] newBytes = newStr.getBytes();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(newBytes);</span><br><span class="line">        System.out.print(str2); <span class="comment">// 输出：今天</span></span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(newBytes,<span class="string">&quot;GBK&quot;</span>);</span><br><span class="line">        System.out.print(str3); <span class="comment">// 输出：浠婂ぉ</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="字符流"   >
          <a href="#字符流" class="heading-link"><i class="fas fa-link"></i></a><a href="#字符流" class="headerlink" title="字符流"></a>字符流</h2>
      <ul>
<li><p>分类：</p>
<ol>
<li>字符输入流Reader</li>
<li>字符输出流Writer</li>
</ol>
</li>
<li><p>字符流 = 字节流 + 字符集</p>
</li>
</ul>

        <h3 id="字符输入流"   >
          <a href="#字符输入流" class="heading-link"><i class="fas fa-link"></i></a><a href="#字符输入流" class="headerlink" title="字符输入流"></a>字符输入流</h3>
      <ul>
<li>Reader</li>
</ul>

        <h4 id="空参read方法详解"   >
          <a href="#空参read方法详解" class="heading-link"><i class="fas fa-link"></i></a><a href="#空参read方法详解" class="headerlink" title="空参read方法详解"></a>空参read方法详解</h4>
      
        <h5 id="FileReader"   >
          <a href="#FileReader" class="heading-link"><i class="fas fa-link"></i></a><a href="#FileReader" class="headerlink" title="FileReader"></a>FileReader</h5>
      <ul>
<li>步骤：<br>  1.创建字符输入流对象<br>  2.读取数据<br>  3.释放资源(关流)</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.创建对象并关联本地对象</span></span><br><span class="line">        <span class="type">FileReader</span> <span class="variable">fr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.读取数据</span></span><br><span class="line">        <span class="type">int</span> ch;</span><br><span class="line">        <span class="keyword">while</span>((ch = fr.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.print(ch);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        fr.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 输出：200132599165292277213582112290</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.创建对象并关联本地对象</span></span><br><span class="line">        <span class="type">FileReader</span> <span class="variable">fr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.读取数据</span></span><br><span class="line">        <span class="type">int</span> ch;</span><br><span class="line">        <span class="keyword">while</span>((ch = fr.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.print((<span class="type">char</span>)ch);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        fr.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 输出：中文，汉语。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="有参read方法详解"   >
          <a href="#有参read方法详解" class="heading-link"><i class="fas fa-link"></i></a><a href="#有参read方法详解" class="headerlink" title="有参read方法详解"></a>有参read方法详解</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">FileReader</span> <span class="variable">fr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.读取数据</span></span><br><span class="line">        <span class="type">char</span>[] chars = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="type">int</span> len;</span><br><span class="line">        <span class="keyword">while</span>((len = fr.read(chars)) != -<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">// 把数组中的数据变成字符串</span></span><br><span class="line">            System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(chars,<span class="number">0</span>,len));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        fr.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 输出：</span></span><br><span class="line"><span class="comment">         * 中文</span></span><br><span class="line"><span class="comment">         * ，汉</span></span><br><span class="line"><span class="comment">         * 语。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="字符输出流"   >
          <a href="#字符输出流" class="heading-link"><i class="fas fa-link"></i></a><a href="#字符输出流" class="headerlink" title="字符输出流"></a>字符输出流</h3>
      <ul>
<li><p>Writer</p>
</li>
<li><p>输入流特点：</p>
<ol>
<li>一次读一个字节</li>
<li>遇到中文时，一次读多个字节</li>
</ol>
</li>
</ul>

        <h4 id="字符输出流写出数据"   >
          <a href="#字符输出流写出数据" class="heading-link"><i class="fas fa-link"></i></a><a href="#字符输出流写出数据" class="headerlink" title="字符输出流写出数据"></a>字符输出流写出数据</h4>
      <ul>
<li>FileWriter字符输出流</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\b.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        fos.write(<span class="number">25105</span>);   <span class="comment">// 使用字节流，超出一字节则乱码</span></span><br><span class="line"></span><br><span class="line">        fos.close();</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="type">FileWriter</span> <span class="variable">fw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\b.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        fw.write(<span class="number">25105</span>);    <span class="comment">// 输出：我</span></span><br><span class="line"></span><br><span class="line">        fw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>写出字符串</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">FileWriter</span> <span class="variable">fw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\b.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        fw.write(<span class="string">&quot;今天，一月份。&quot;</span>);    <span class="comment">// 输出：今天，一月份。</span></span><br><span class="line"></span><br><span class="line">        fw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>写出字符数组</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">FileWriter</span> <span class="variable">fw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\b.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">char</span>[] chars = &#123;<span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;今&#x27;</span>,<span class="string">&#x27;天&#x27;</span>&#125;;</span><br><span class="line">        fw.write(chars);    <span class="comment">// 输出：today今天</span></span><br><span class="line"></span><br><span class="line">        fw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>续写append</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">FileWriter</span> <span class="variable">fw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\b.txt&quot;</span>,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">char</span>[] chars = &#123;<span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;今&#x27;</span>,<span class="string">&#x27;天&#x27;</span>&#125;;</span><br><span class="line">        fw.write(chars);    <span class="comment">// 输出：today今天today今天</span></span><br><span class="line"></span><br><span class="line">        fw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="综合练习"   >
          <a href="#综合练习" class="heading-link"><i class="fas fa-link"></i></a><a href="#综合练习" class="headerlink" title="综合练习"></a>综合练习</h2>
      
        <h3 id="练习一-拷贝文件夹"   >
          <a href="#练习一-拷贝文件夹" class="heading-link"><i class="fas fa-link"></i></a><a href="#练习一-拷贝文件夹" class="headerlink" title="练习一 拷贝文件夹"></a>练习一 拷贝文件夹</h3>
      <ul>
<li><p>字节流可以拷贝任意类型的文件</p>
</li>
<li><p>字符流：</p>
<ol>
<li>读取纯文本文件中的数据</li>
<li>往纯文本中写出数据</li>
</ol>
</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 拷贝一个文件夹，考虑子文件夹</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建对象表示数据源</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">src</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\src&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.创建对象表示目的地</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">desk</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\desk&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 3.调用方法，开始拷贝</span></span><br><span class="line">        copydir(src,desk);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 作用：拷贝文件夹</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">copydir</span><span class="params">(File src, File desk)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        desk.mkdirs();</span><br><span class="line">        <span class="comment">// 递归</span></span><br><span class="line">        <span class="comment">// 1.进入数据源</span></span><br><span class="line">        File[] files = src.listFiles();</span><br><span class="line">        <span class="comment">// 2.遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (File file : files) &#123;</span><br><span class="line">            <span class="keyword">if</span>(file.isFile())&#123;</span><br><span class="line">                <span class="comment">// 3.判断为文件，则拷贝</span></span><br><span class="line">                <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">                <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(desk,file.getName()));</span><br><span class="line">                <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="type">int</span> len;</span><br><span class="line">                <span class="keyword">while</span>((len = fis.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                    fos.write(bytes,<span class="number">0</span>,len);</span><br><span class="line">                &#125;</span><br><span class="line">                fos.close();</span><br><span class="line">                fis.close();</span><br><span class="line">            &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// 4.判断为文件夹，则递归</span></span><br><span class="line">                copydir(file,<span class="keyword">new</span> <span class="title class_">File</span>(desk,file.getName()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="练习二-加密和解密文件"   >
          <a href="#练习二-加密和解密文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#练习二-加密和解密文件" class="headerlink" title="练习二 加密和解密文件"></a>练习二 加密和解密文件</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.创建对象关联原始文件</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.创建对象关联加密文件</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\ency.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.加密处理</span></span><br><span class="line">        <span class="type">int</span> b;</span><br><span class="line">        <span class="keyword">while</span>((b = fis.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">            fos.write(b ^ <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.释放资源</span></span><br><span class="line">        fos.close();</span><br><span class="line">        fis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="练习三-修改文件中的数据"   >
          <a href="#练习三-修改文件中的数据" class="heading-link"><i class="fas fa-link"></i></a><a href="#练习三-修改文件中的数据" class="headerlink" title="练习三 修改文件中的数据"></a>练习三 修改文件中的数据</h3>
      <ul>
<li>写法一</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 文本文件中数据：2-1-9-4-8</span></span><br><span class="line"><span class="comment">        * 排序：1-2-4-8-9</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.读取数据</span></span><br><span class="line">        <span class="type">FileReader</span> <span class="variable">fr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>);</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">int</span> ch;</span><br><span class="line">        <span class="keyword">while</span>((ch = fr.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">            sb.append((<span class="type">char</span>)ch);</span><br><span class="line">        &#125;</span><br><span class="line">        fr.close();</span><br><span class="line">        System.out.println(sb);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.排序</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> sb.toString();</span><br><span class="line">        String[] arrStr = str.split(<span class="string">&quot;-&quot;</span>);</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String s : arrStr) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> Integer.parseInt(s);</span><br><span class="line">            list.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">        Collections.sort(list);</span><br><span class="line">        System.out.println(list);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.写出数据</span></span><br><span class="line">        <span class="type">FileWriter</span> <span class="variable">fw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i == list.size() - <span class="number">1</span>)&#123;</span><br><span class="line">                fw.write(list.get(i) + <span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                fw.write(list.get(i) + <span class="string">&quot;-&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.释放资源</span></span><br><span class="line">        fw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>写法二</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 文本文件中数据：2-1-9-4-8</span></span><br><span class="line"><span class="comment">        * 排序：1-2-4-8-9</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.读取数据</span></span><br><span class="line">        <span class="type">FileReader</span> <span class="variable">fr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>);</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">int</span> ch;</span><br><span class="line">        <span class="keyword">while</span>((ch = fr.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">            sb.append((<span class="type">char</span>)ch);</span><br><span class="line">        &#125;</span><br><span class="line">        fr.close();</span><br><span class="line">        System.out.println(sb);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.排序</span></span><br><span class="line">        Integer[] arr = Arrays.stream(sb.toString()</span><br><span class="line">                .split(<span class="string">&quot;-&quot;</span>))</span><br><span class="line">                .map(Integer::parseInt)</span><br><span class="line">                .sorted()</span><br><span class="line">                .toArray(Integer[]::<span class="keyword">new</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.写出数据</span></span><br><span class="line">        <span class="type">FileWriter</span> <span class="variable">fw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> Arrays.toString(arr).replace(<span class="string">&quot;, &quot;</span>,<span class="string">&quot;-&quot;</span>);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> s.substring(<span class="number">1</span>, s.length() - <span class="number">1</span>);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">        fw.write(result);</span><br><span class="line">        fw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="高级流"   >
          <a href="#高级流" class="heading-link"><i class="fas fa-link"></i></a><a href="#高级流" class="headerlink" title="高级流"></a>高级流</h2>
      
        <h3 id="缓冲流"   >
          <a href="#缓冲流" class="heading-link"><i class="fas fa-link"></i></a><a href="#缓冲流" class="headerlink" title="缓冲流"></a>缓冲流</h3>
      
        <h4 id="字节缓冲流"   >
          <a href="#字节缓冲流" class="heading-link"><i class="fas fa-link"></i></a><a href="#字节缓冲流" class="headerlink" title="字节缓冲流"></a>字节缓冲流</h4>
      <blockquote>
<p>原理：底层自带长度为8192的缓冲区提高性能</p>
</blockquote>
<ul>
<li>字节缓冲流拷贝文件(一次读写一个文件)</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.创建缓冲流的对象</span></span><br><span class="line">        <span class="type">BufferedInputStream</span> <span class="variable">bis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>));</span><br><span class="line">        <span class="type">BufferedOutputStream</span> <span class="variable">bos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\copy.txt&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.循环读取，并写到目的地</span></span><br><span class="line">        <span class="type">int</span> b;</span><br><span class="line">        <span class="keyword">while</span>((b = bis.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">            bos.write(b);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        bos.close();</span><br><span class="line">        bis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>字节缓冲流拷贝文件(一次读写一个字节数组)</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.创建缓冲流的对象</span></span><br><span class="line">        <span class="type">BufferedInputStream</span> <span class="variable">bis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>));</span><br><span class="line">        <span class="type">BufferedOutputStream</span> <span class="variable">bos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\copy.txt&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.拷贝</span></span><br><span class="line">        <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> len;</span><br><span class="line">        <span class="keyword">while</span>((len = bis.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">            bos.write(bytes,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        bos.close();</span><br><span class="line">        bis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="字符缓冲流"   >
          <a href="#字符缓冲流" class="heading-link"><i class="fas fa-link"></i></a><a href="#字符缓冲流" class="headerlink" title="字符缓冲流"></a>字符缓冲流</h4>
      <blockquote>
<p>原理：底层自带长度为8192的缓冲区提高性能</p>
</blockquote>

        <h5 id="字符缓冲输入流"   >
          <a href="#字符缓冲输入流" class="heading-link"><i class="fas fa-link"></i></a><a href="#字符缓冲输入流" class="headerlink" title="字符缓冲输入流"></a>字符缓冲输入流</h5>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BufferedStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.创建字符缓冲输入流的对象</span></span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.读取数据</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> br.readLine();</span><br><span class="line">        System.out.println(line);   <span class="comment">// 输出：abcd1</span></span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">line01</span> <span class="operator">=</span> br.readLine();</span><br><span class="line">        System.out.println(line01);   <span class="comment">// 输出：abcd2</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        br.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BufferedStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.创建字符缓冲输入流的对象</span></span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.读取数据</span></span><br><span class="line">        String line;</span><br><span class="line">        <span class="keyword">while</span>((line = br.readLine()) != <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(line);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        br.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">//abcd1</span></span><br><span class="line">        <span class="comment">//abcd2</span></span><br><span class="line">        <span class="comment">//abcd3</span></span><br><span class="line">        <span class="comment">//abcd4</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h5 id="字符缓冲输出流"   >
          <a href="#字符缓冲输出流" class="heading-link"><i class="fas fa-link"></i></a><a href="#字符缓冲输出流" class="headerlink" title="字符缓冲输出流"></a>字符缓冲输出流</h5>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BufferedStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.创建字符缓冲输出流的对象</span></span><br><span class="line">        <span class="type">BufferedWriter</span> <span class="variable">bw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\b.txt&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.写出数据</span></span><br><span class="line">        bw.write(<span class="string">&quot;today&quot;</span>);</span><br><span class="line">        bw.newLine();</span><br><span class="line">        bw.write(<span class="string">&quot;tonight&quot;</span>);</span><br><span class="line">        bw.newLine();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        bw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>续写</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BufferedStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.创建字符缓冲输出流的对象</span></span><br><span class="line">        <span class="type">BufferedWriter</span> <span class="variable">bw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\b.txt&quot;</span>,<span class="literal">true</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.写出数据</span></span><br><span class="line">        bw.write(<span class="string">&quot;today&quot;</span>);</span><br><span class="line">        bw.newLine();</span><br><span class="line">        bw.write(<span class="string">&quot;tonight&quot;</span>);</span><br><span class="line">        bw.newLine();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        bw.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">//today</span></span><br><span class="line">        <span class="comment">//tonight</span></span><br><span class="line">        <span class="comment">//today</span></span><br><span class="line">        <span class="comment">//tonight</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="综合练习-1"   >
          <a href="#综合练习-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#综合练习-1" class="headerlink" title="综合练习"></a>综合练习</h4>
      <ul>
<li>IO流创建原则：用时创建；不用则关流</li>
</ul>

        <h5 id="修改文本顺序"   >
          <a href="#修改文本顺序" class="heading-link"><i class="fas fa-link"></i></a><a href="#修改文本顺序" class="headerlink" title="修改文本顺序"></a>修改文本顺序</h5>
      <ul>
<li>写法一</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BufferedStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.读取数据</span></span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>));</span><br><span class="line">        String line;</span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span>((line = br.readLine()) != <span class="literal">null</span>)&#123;</span><br><span class="line">            list.add(line);</span><br><span class="line">        &#125;</span><br><span class="line">        br.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.排序</span></span><br><span class="line">        Collections.sort(list, <span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;String&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(String o1, String o2)</span> &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> Integer.parseInt(o1.split(<span class="string">&quot;\\.&quot;</span>)[<span class="number">0</span>]);</span><br><span class="line">                <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> Integer.parseInt(o2.split(<span class="string">&quot;\\.&quot;</span>)[<span class="number">0</span>]);</span><br><span class="line">                <span class="keyword">return</span> i1 - i2;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        System.out.println(list);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.写出数据</span></span><br><span class="line">        <span class="type">BufferedWriter</span> <span class="variable">bw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>));</span><br><span class="line">        <span class="keyword">for</span> (String str : list) &#123;</span><br><span class="line">            bw.write(str);</span><br><span class="line">            bw.newLine();</span><br><span class="line">        &#125;</span><br><span class="line">        bw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>写法二</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BufferedStreamTest01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.读取数据</span></span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\b.txt&quot;</span>));</span><br><span class="line">        String line;</span><br><span class="line">        TreeMap&lt;Integer, String&gt; tm = <span class="keyword">new</span> <span class="title class_">TreeMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span> ((line = br.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">            String[] arr = line.split(<span class="string">&quot;\\.&quot;</span>);</span><br><span class="line">            tm.put(Integer.parseInt(arr[<span class="number">0</span>]),line);</span><br><span class="line">        &#125;</span><br><span class="line">        br.close();</span><br><span class="line"></span><br><span class="line">        System.out.println(tm);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.写出数据</span></span><br><span class="line">        <span class="type">BufferedWriter</span> <span class="variable">bw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\b01.txt&quot;</span>));</span><br><span class="line">        Set&lt;Map.Entry&lt;Integer, String&gt;&gt; entries = tm.entrySet();</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Integer, String&gt; entry : entries) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> entry.getValue();</span><br><span class="line">            bw.write(value);</span><br><span class="line">            bw.newLine();</span><br><span class="line">        &#125;</span><br><span class="line">        bw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h5 id="控制软件运行次数"   >
          <a href="#控制软件运行次数" class="heading-link"><i class="fas fa-link"></i></a><a href="#控制软件运行次数" class="headerlink" title="控制软件运行次数"></a>控制软件运行次数</h5>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 实现一个验证程序运行次数的小程序</span></span><br><span class="line"><span class="comment">        * 控制台输出，程序演示如下：</span></span><br><span class="line"><span class="comment">        * 欢迎使用，第1次免费！</span></span><br><span class="line"><span class="comment">        * 欢迎使用，第2次免费！</span></span><br><span class="line"><span class="comment">        * 欢迎使用，第3次免费！</span></span><br><span class="line"><span class="comment">        * 本软件只能免费使用3次！</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.把文件中的数字读取到内存中</span></span><br><span class="line"></span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\count.txt&quot;</span>));</span><br><span class="line">        <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> br.readLine();</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> Integer.parseInt(line);</span><br><span class="line">        count++;    <span class="comment">// 表示当前软件又运行了一次</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.判断</span></span><br><span class="line">        <span class="keyword">if</span>(count &lt;= <span class="number">3</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;欢迎使用，第&quot;</span> + count + <span class="string">&quot;次免费！&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;本软件只能免费使用3次！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.把当前自增后的count写出到文件当中</span></span><br><span class="line">        <span class="type">BufferedWriter</span> <span class="variable">bw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\count.txt&quot;</span>));</span><br><span class="line">        bw.write(count + <span class="string">&quot;&quot;</span>);   <span class="comment">// 数字97对应a，加引号“”变为字符串</span></span><br><span class="line">        bw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="转换流"   >
          <a href="#转换流" class="heading-link"><i class="fas fa-link"></i></a><a href="#转换流" class="headerlink" title="转换流"></a>转换流</h3>
      <ul>
<li>是字符流和字节流之间的桥梁</li>
</ul>
<ol>
<li>字符转换输入流InputStreamReader</li>
<li>字符转换输出流OutPutStreamWriter</li>
</ol>
<ul>
<li><p>作用：</p>
<ul>
<li>指定字符集读写数据(JDK11之后已淘汰)</li>
<li>字节流使用字符流中的方法</li>
</ul>
</li>
</ul>

        <h4 id="转换流基本用法"   >
          <a href="#转换流基本用法" class="heading-link"><i class="fas fa-link"></i></a><a href="#转换流基本用法" class="headerlink" title="转换流基本用法"></a>转换流基本用法</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConvertStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 利用转换流按照字符编码读取数据</span></span><br><span class="line"><span class="comment">        * C:\Users\Administrator\Desktop\gbk.txt</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建对象并指定字符编码</span></span><br><span class="line">        <span class="type">InputStreamReader</span> <span class="variable">isr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\gbk.txt&quot;</span>),<span class="string">&quot;GBK&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.读取数据</span></span><br><span class="line">        <span class="type">int</span> ch;</span><br><span class="line">        <span class="keyword">while</span>((ch = isr.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.print((<span class="type">char</span>)ch);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        isr.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>替代方案</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConvertStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 利用转换流按照指定字符编码写出数据</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建转换流对象</span></span><br><span class="line">        <span class="type">OutputStreamWriter</span> <span class="variable">osw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\b.txt&quot;</span>),<span class="string">&quot;GBK&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.写出数据</span></span><br><span class="line">        osw.write(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        osw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="转换流练习"   >
          <a href="#转换流练习" class="heading-link"><i class="fas fa-link"></i></a><a href="#转换流练习" class="headerlink" title="转换流练习"></a>转换流练习</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConvertStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 利用字节流读取文件中的数据</span></span><br><span class="line"><span class="comment">        * 每次读一行</span></span><br><span class="line"><span class="comment">        * 不能出现乱码</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>)));</span><br><span class="line">        String line;</span><br><span class="line">        <span class="keyword">while</span>((line = br.readLine()) != <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(line);</span><br><span class="line">        &#125;</span><br><span class="line">        br.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">//中文，</span></span><br><span class="line">        <span class="comment">//英文，汉语。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="序列化流-对象操作输出流"   >
          <a href="#序列化流-对象操作输出流" class="heading-link"><i class="fas fa-link"></i></a><a href="#序列化流-对象操作输出流" class="headerlink" title="序列化流/对象操作输出流"></a>序列化流/对象操作输出流</h3>
      
        <h4 id="序列化流"   >
          <a href="#序列化流" class="heading-link"><i class="fas fa-link"></i></a><a href="#序列化流" class="headerlink" title="序列化流"></a>序列化流</h4>
      <ul>
<li>学生类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Serializable接口中没有抽象方法，是标记型接口</span></span><br><span class="line"><span class="comment"> * 一旦实现这个接口，表示当前的Student类可以被序列化</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.创建对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">stu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Tom&quot;</span>,<span class="number">21</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.创建序列化流的对象/对象操作输出流的对象</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.写出数据</span></span><br><span class="line">        oos.writeObject(stu);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.释放资源</span></span><br><span class="line">        oos.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="反序列化流"   >
          <a href="#反序列化流" class="heading-link"><i class="fas fa-link"></i></a><a href="#反序列化流" class="headerlink" title="反序列化流"></a>反序列化流</h4>
      <ul>
<li>学生类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Serializable接口中没有抽象方法，是标记型接口</span></span><br><span class="line"><span class="comment"> * 一旦实现这个接口，表示当前的Student类可以被序列化</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ObjectStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="comment">// 1.创建反序列化流的对象</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.读取数据</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.打印对象</span></span><br><span class="line">        System.out.println(o);  <span class="comment">// 输出：Student&#123;name=&#x27;Tom&#x27;, age=21&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.释放资源</span></span><br><span class="line">        ois.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="序列化流和反序列化流的使用细节"   >
          <a href="#序列化流和反序列化流的使用细节" class="heading-link"><i class="fas fa-link"></i></a><a href="#序列化流和反序列化流的使用细节" class="headerlink" title="序列化流和反序列化流的使用细节"></a>序列化流和反序列化流的使用细节</h4>
      <ul>
<li><p>序列号/版本号: serialVersionUID</p>
</li>
<li><p>瞬态关键字: transient(标记的成员变量不参与序列化过程)</p>
</li>
</ul>

        <h4 id="综合练习-读取多个对象"   >
          <a href="#综合练习-读取多个对象" class="heading-link"><i class="fas fa-link"></i></a><a href="#综合练习-读取多个对象" class="headerlink" title="综合练习(读取多个对象)"></a>综合练习(读取多个对象)</h4>
      <ul>
<li>学生类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">8986009981186061115L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age, String address)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAddress</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAddress</span><span class="params">(String address)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, address=&#x27;&quot;</span> + address + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>序列化流</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.序列化多个对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Tom&quot;</span>,<span class="number">21</span>,<span class="string">&quot;NanJing&quot;</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;John&quot;</span>,<span class="number">22</span>,<span class="string">&quot;HongKong&quot;</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Amy&quot;</span>,<span class="number">23</span>,<span class="string">&quot;NewYork&quot;</span>);</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Student&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        list.add(s1);</span><br><span class="line">        list.add(s2);</span><br><span class="line">        list.add(s3);</span><br><span class="line"></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>));</span><br><span class="line">        oos.writeObject(list);</span><br><span class="line"></span><br><span class="line">        oos.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>反序列化流</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="comment">// 1.创建反序列化流的对象</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.读取数据</span></span><br><span class="line">        ArrayList&lt;Student&gt; list = (ArrayList&lt;Student&gt;)ois.readObject();</span><br><span class="line">        <span class="keyword">for</span> (Student student : list) &#123;</span><br><span class="line">            System.out.println(student);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ois.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="打印流"   >
          <a href="#打印流" class="heading-link"><i class="fas fa-link"></i></a><a href="#打印流" class="headerlink" title="打印流"></a>打印流</h3>
      <ul>
<li><p>打印流只有输出流</p>
</li>
<li><p>分类：</p>
<ol>
<li>PrintStream</li>
<li>PrintWriter</li>
</ol>
</li>
<li><p>特点：</p>
<ol>
<li>只操作文件目的地，不操作数据源</li>
<li>特有的写出方法，数据原样写出</li>
<li>特有的写出方法，可以实现自动刷新，自动换行</li>
</ol>
</li>
</ul>

        <h4 id="字节打印流"   >
          <a href="#字节打印流" class="heading-link"><i class="fas fa-link"></i></a><a href="#字节打印流" class="headerlink" title="字节打印流"></a>字节打印流</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PrintStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FileNotFoundException, UnsupportedEncodingException &#123;</span><br><span class="line">        <span class="comment">// 1.创建字节打印流的对象</span></span><br><span class="line">        <span class="type">PrintStream</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrintStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>),<span class="literal">true</span>,<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.写出数据</span></span><br><span class="line">        ps.println(<span class="number">97</span>);</span><br><span class="line">        ps.print(<span class="literal">true</span>);</span><br><span class="line">        ps.println();</span><br><span class="line">        ps.printf(<span class="string">&quot;%s and &amp;s&quot;</span>,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        ps.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">//97</span></span><br><span class="line">        <span class="comment">//true</span></span><br><span class="line">        <span class="comment">//a and &amp;s</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="字符打印流"   >
          <a href="#字符打印流" class="heading-link"><i class="fas fa-link"></i></a><a href="#字符打印流" class="headerlink" title="字符打印流"></a>字符打印流</h4>
      <ul>
<li>字符打印流底层有缓冲区</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PrintStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.创建字符打印流对象</span></span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">pw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrintWriter</span>(<span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>),<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.写出数据</span></span><br><span class="line">        pw.println(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        pw.print(<span class="string">&quot;不换行&quot;</span>);</span><br><span class="line">        pw.print(<span class="string">&quot;不换行&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        pw.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">//a</span></span><br><span class="line">        <span class="comment">//不换行不换行</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="系统标准输出流"   >
          <a href="#系统标准输出流" class="heading-link"><i class="fas fa-link"></i></a><a href="#系统标准输出流" class="headerlink" title="系统标准输出流"></a>系统标准输出流</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 由虚拟机创建，默认指向控制台</span></span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PrintStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">PrintStream</span> <span class="variable">ps</span> <span class="operator">=</span> System.out;</span><br><span class="line">        <span class="comment">// 写出数据，自动换行，自动刷新</span></span><br><span class="line">        ps.println(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="压缩流"   >
          <a href="#压缩流" class="heading-link"><i class="fas fa-link"></i></a><a href="#压缩流" class="headerlink" title="压缩流"></a>压缩流</h3>
      
        <h4 id="解压缩流"   >
          <a href="#解压缩流" class="heading-link"><i class="fas fa-link"></i></a><a href="#解压缩流" class="headerlink" title="解压缩流"></a>解压缩流</h4>
      <ul>
<li>解压原理：把每一个ZipEntry按照层级拷贝到本地另一个文件夹中</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipEntry;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipInputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ZipStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.创建一个File表示要解压的压缩包</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">src</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\aaa.zip&quot;</span>);</span><br><span class="line">        <span class="comment">// 2.创建一个File表示解压的目的地</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">dest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 调用方法</span></span><br><span class="line">        unZip(src,dest);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义一个方法用于解压</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">unZip</span><span class="params">(File src, File dest)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 创建一个解压缩流</span></span><br><span class="line">        <span class="type">ZipInputStream</span> <span class="variable">zip</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ZipInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(src));</span><br><span class="line">        <span class="comment">// 获取zipEntry对象</span></span><br><span class="line">        ZipEntry entry;</span><br><span class="line">        <span class="keyword">while</span>((entry = zip.getNextEntry()) != <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(entry);</span><br><span class="line">            <span class="keyword">if</span>(entry.isDirectory())&#123;</span><br><span class="line">                <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(dest,entry.toString());</span><br><span class="line">                file.mkdirs();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(dest,entry.toString()));</span><br><span class="line">                <span class="type">int</span> b;</span><br><span class="line">                <span class="keyword">while</span>((b = zip.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="comment">// 写到目的地</span></span><br><span class="line">                    fos.write(b);</span><br><span class="line">                &#125;</span><br><span class="line">                fos.close();</span><br><span class="line">                zip.closeEntry();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        zip.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="压缩流-1"   >
          <a href="#压缩流-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#压缩流-1" class="headerlink" title="压缩流"></a>压缩流</h4>
      <ul>
<li>压缩原理：把每一个文件/文件夹看成ZipEntry对象放到压缩包中</li>
</ul>

        <h5 id="压缩单个文件"   >
          <a href="#压缩单个文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#压缩单个文件" class="headerlink" title="压缩单个文件"></a>压缩单个文件</h5>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipEntry;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ZipStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 把a.txt打包成一个压缩包</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建File对象表示要压缩的文件</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">src</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.创建File对象表示压缩包的位置</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">dest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.调用方法，用于压缩</span></span><br><span class="line">        toZip(src,dest);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 作用：压缩</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> src 表示要压缩的文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dest 表示压缩包的位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">toZip</span><span class="params">(File src,File dest)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.创建压缩流</span></span><br><span class="line">        <span class="type">ZipOutputStream</span> <span class="variable">zos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ZipOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(dest,<span class="string">&quot;a.zip&quot;</span>)));</span><br><span class="line">        <span class="comment">// 2.创建ZipEntry对象</span></span><br><span class="line">        <span class="type">ZipEntry</span> <span class="variable">entry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ZipEntry</span>(<span class="string">&quot;a.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 3.把ZipEntry对象放到压缩包中</span></span><br><span class="line">        zos.putNextEntry(entry);</span><br><span class="line">        <span class="comment">// 4.把src文件中的数据写到压缩包中</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(src);</span><br><span class="line">        <span class="type">int</span> b;</span><br><span class="line">        <span class="keyword">while</span>((b = fis.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">            zos.write(b);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        zos.closeEntry();</span><br><span class="line">        zos.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h5 id="压缩文件夹"   >
          <a href="#压缩文件夹" class="heading-link"><i class="fas fa-link"></i></a><a href="#压缩文件夹" class="headerlink" title="压缩文件夹"></a>压缩文件夹</h5>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipEntry;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ZipStreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 把aaa文件夹压缩成一个压缩包</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建File对象表示要压缩的文件夹</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">src</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\aaa&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.创建File对象表示压缩包的父级路径</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">destParent</span> <span class="operator">=</span> src.getParentFile();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.创建File对象表示压缩包的路径</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">dest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(destParent,src.getName() + <span class="string">&quot;.zip&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.创建压缩流关联压缩包</span></span><br><span class="line">        <span class="type">ZipOutputStream</span> <span class="variable">zos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ZipOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(dest));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.获取src里的每一个文件，变成ZipEntry对象，放入压缩包中</span></span><br><span class="line">        toZip(src,zos,src.getName());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6.释放资源</span></span><br><span class="line">        zos.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  作用：获取src中的每个文件，变成ZipEntry对象，放入压缩包中</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> src 数据源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> zos 压缩流</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name 压缩包内部的路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">toZip</span><span class="params">(File src,ZipOutputStream zos,String name)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.进入src文件夹</span></span><br><span class="line">        File[] files = src.listFiles();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (File file : files) &#123;</span><br><span class="line">            <span class="keyword">if</span>(file.isFile())&#123;</span><br><span class="line">                <span class="comment">// 3.判断为文件，变成ZipEntry对象，放入压缩包中</span></span><br><span class="line">                <span class="type">ZipEntry</span> <span class="variable">entry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ZipEntry</span>(name + <span class="string">&quot;\\&quot;</span> + file.getName());</span><br><span class="line">                zos.putNextEntry(entry);</span><br><span class="line">                <span class="comment">// 读取文件中的数据，写到压缩包</span></span><br><span class="line">                <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">                <span class="type">int</span> b;</span><br><span class="line">                <span class="keyword">while</span>((b = fis.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">                    zos.write(b);</span><br><span class="line">                &#125;</span><br><span class="line">                fis.close();</span><br><span class="line">                zos.closeEntry();</span><br><span class="line">            &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// 4.判断为文件夹，递归</span></span><br><span class="line">                toZip(file,zos,name + <span class="string">&quot;\\&quot;</span> + file.getName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="常用工具包"   >
          <a href="#常用工具包" class="heading-link"><i class="fas fa-link"></i></a><a href="#常用工具包" class="headerlink" title="常用工具包"></a>常用工具包</h3>
      
        <h4 id="Commons-io"   >
          <a href="#Commons-io" class="heading-link"><i class="fas fa-link"></i></a><a href="#Commons-io" class="headerlink" title="Commons-io"></a>Commons-io</h4>
      <ul>
<li>提高IO流的开发效率</li>
</ul>

        <h5 id="使用步骤"   >
          <a href="#使用步骤" class="heading-link"><i class="fas fa-link"></i></a><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h5>
      <p>Apache公司-jar包</p>
<ol>
<li>在项目中创建一个文件夹:lib(专门存放第三方jar包)</li>
<li>将jar包复制粘贴到lib文件夹</li>
<li>右键点击jar包，选择Add as Library -&gt; 点击OK</li>
<li>在类中导包使用</li>
</ol>

        <h5 id="应用示例"   >
          <a href="#应用示例" class="heading-link"><i class="fas fa-link"></i></a><a href="#应用示例" class="headerlink" title="应用示例"></a>应用示例</h5>
      <ul>
<li>复制文件CopyFile</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonIOTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">src</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\abc.txt&quot;</span>);</span><br><span class="line">        <span class="type">File</span> <span class="variable">dest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\copy.txt&quot;</span>);</span><br><span class="line">        FileUtils.copyFile(src,dest);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>删除文件夹</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonIOTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">src</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\delete&quot;</span>);</span><br><span class="line">        FileUtils.deleteDirectory(src);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>清空文件夹</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonIOTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">src</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\clean&quot;</span>);</span><br><span class="line">        FileUtils.cleanDirectory(src);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="Hutool"   >
          <a href="#Hutool" class="heading-link"><i class="fas fa-link"></i></a><a href="#Hutool" class="headerlink" title="Hutool"></a>Hutool</h4>
      <p><span class="exturl"><a class="exturl__link"   href="https://hutool.cn/" >官网</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h5 id="应用示例-1"   >
          <a href="#应用示例-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#应用示例-1" class="headerlink" title="应用示例"></a>应用示例</h5>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.hutool.core.io.FileUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HuToolTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * FileUtil类：</span></span><br><span class="line"><span class="comment">        * file-根据参数创建一个file对象</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> FileUtil.file(<span class="string">&quot;C:\\Users\\Administrator\\Desktop&quot;</span>, <span class="string">&quot;aaa&quot;</span>, <span class="string">&quot;bbb&quot;</span>, <span class="string">&quot;ab.txt&quot;</span>);</span><br><span class="line">        System.out.println(file);   <span class="comment">// 输出：C:\Users\Administrator\Desktop\aaa\bbb\ab.txt</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.hutool.core.io.FileUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HuToolTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * FileUtil类：</span></span><br><span class="line"><span class="comment">        * file-根据参数创建一个file对象</span></span><br><span class="line"><span class="comment">        * touch根据参数创建文件</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> FileUtil.file(<span class="string">&quot;C:\\Users\\Administrator\\Desktop&quot;</span>, <span class="string">&quot;aaa&quot;</span>, <span class="string">&quot;bbb&quot;</span>, <span class="string">&quot;ab.txt&quot;</span>);</span><br><span class="line">        System.out.println(file);   <span class="comment">// 输出：C:\Users\Administrator\Desktop\aaa\bbb\ab.txt</span></span><br><span class="line"></span><br><span class="line">        <span class="type">File</span> <span class="variable">touch</span> <span class="operator">=</span> FileUtil.touch(file);</span><br><span class="line">        System.out.println(touch);  <span class="comment">// 在指定路径创建文件/文件夹</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>writeLines把集合中的数据写出到文件中，覆盖模式</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.hutool.core.io.FileUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HuToolTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * FileUtil类：</span></span><br><span class="line"><span class="comment">        * file-根据参数创建一个file对象</span></span><br><span class="line"><span class="comment">        * touch根据参数创建文件</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> FileUtil.file(<span class="string">&quot;C:\\Users\\Administrator\\Desktop&quot;</span>, <span class="string">&quot;aaa&quot;</span>, <span class="string">&quot;bbb&quot;</span>, <span class="string">&quot;ab.txt&quot;</span>);</span><br><span class="line">        System.out.println(file);   <span class="comment">// 输出：C:\Users\Administrator\Desktop\aaa\bbb\ab.txt</span></span><br><span class="line"></span><br><span class="line">        <span class="type">File</span> <span class="variable">touch</span> <span class="operator">=</span> FileUtil.touch(file);</span><br><span class="line">        System.out.println(touch);  <span class="comment">// 在指定路径创建文件/文件夹</span></span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;bbb&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;ccc&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">File</span> <span class="variable">file1</span> <span class="operator">=</span> FileUtil.writeLines(list, <span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        System.out.println(file1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>appendLines把集合中的数据写出到文件中，续写模式</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.hutool.core.io.FileUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HuToolTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * FileUtil类：</span></span><br><span class="line"><span class="comment">        * file-根据参数创建一个file对象</span></span><br><span class="line"><span class="comment">        * touch根据参数创建文件</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> FileUtil.file(<span class="string">&quot;C:\\Users\\Administrator\\Desktop&quot;</span>, <span class="string">&quot;aaa&quot;</span>, <span class="string">&quot;bbb&quot;</span>, <span class="string">&quot;ab.txt&quot;</span>);</span><br><span class="line">        System.out.println(file);   <span class="comment">// 输出：C:\Users\Administrator\Desktop\aaa\bbb\ab.txt</span></span><br><span class="line"></span><br><span class="line">        <span class="type">File</span> <span class="variable">touch</span> <span class="operator">=</span> FileUtil.touch(file);</span><br><span class="line">        System.out.println(touch);  <span class="comment">// 在指定路径创建文件/文件夹</span></span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;bbb&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;ccc&quot;</span>);</span><br><span class="line">        <span class="type">File</span> <span class="variable">file1</span> <span class="operator">=</span> FileUtil.appendLines(list, <span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>readLines指定字符编码，把文件中的数据读到集合中</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.hutool.core.io.FileUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HuToolTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * FileUtil类：</span></span><br><span class="line"><span class="comment">        * file-根据参数创建一个file对象</span></span><br><span class="line"><span class="comment">        * touch根据参数创建文件</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> FileUtil.file(<span class="string">&quot;C:\\Users\\Administrator\\Desktop&quot;</span>, <span class="string">&quot;aaa&quot;</span>, <span class="string">&quot;bbb&quot;</span>, <span class="string">&quot;ab.txt&quot;</span>);</span><br><span class="line">        System.out.println(file);   <span class="comment">// 输出：C:\Users\Administrator\Desktop\aaa\bbb\ab.txt</span></span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; list = FileUtil.readLines(<span class="string">&quot;C:\\Users\\Administrator\\Desktop\\a.txt&quot;</span>, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        System.out.println(list);   <span class="comment">// 输出：[aaa, bbb, ccc, aaa, bbb, ccc]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>IO</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-JDBC</title>
    <url>/2024/10/16/Java-JDBC/</url>
    <content><![CDATA[
        <h1 id="JDBC"   >
          <a href="#JDBC" class="heading-link"><i class="fas fa-link"></i></a><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h1>
      
        <h2 id="概述"   >
          <a href="#概述" class="heading-link"><i class="fas fa-link"></i></a><a href="#概述" class="headerlink" title="概述"></a>概述</h2>
      <p>JDBC(Java DataBase Connectivity)就是使用Java语言操作关系型数据库的一套API</p>

        <h2 id="配置"   >
          <a href="#配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#配置" class="headerlink" title="配置"></a>配置</h2>
      <ol>
<li>创建工程，在idea中的External Libraries中导入mysql-connector-java-5.1.29的Jar包</li>
</ol>
<p><span class="exturl"><a class="exturl__link"   href="https://blog.csdn.net/weixin_39815286/article/details/111822209?ops_request_misc=&request_id=&biz_id=102&utm_term=idea%E4%B8%ADlibraries%E5%AF%BC%E5%85%A5jar%E5%8C%85&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-111822209.142%5Ev73%5Econtrol,201%5Ev4%5Eadd_ask,239%5Ev1%5Econtrol&spm=1018.2226.3001.4187" >IDEA导入JDBC驱动的Jar包</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
<p><span class="exturl"><a class="exturl__link"   href="https://www.bilibili.com/video/BV1Qf4y1T7Hx?p=30" >视频</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
<ol start="2">
<li>代码实现</li>
</ol>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JDBCDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 1.注册驱动</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="comment">// 2.获取连接对象</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/db1?useSSL=false&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;******&quot;</span>; <span class="comment">// 自定义密码</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url,username,password);</span><br><span class="line">        <span class="comment">// 3.定义SQL</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update stu set username = &#x27;Amy&#x27; where id = 1&quot;</span>;</span><br><span class="line">        <span class="comment">// 4.获取执行SQL的对象</span></span><br><span class="line">        <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line">        <span class="comment">// 5.执行SQL</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> stmt.executeUpdate(sql);</span><br><span class="line">        <span class="comment">// 6.处理结果</span></span><br><span class="line">        <span class="comment">// System.out.println(count);</span></span><br><span class="line">        <span class="comment">// 7.释放资源</span></span><br><span class="line">        stmt.close();</span><br><span class="line">        conn.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="JDBC-API"   >
          <a href="#JDBC-API" class="heading-link"><i class="fas fa-link"></i></a><a href="#JDBC-API" class="headerlink" title="JDBC-API"></a>JDBC-API</h2>
      
        <h3 id="DriverManager"   >
          <a href="#DriverManager" class="heading-link"><i class="fas fa-link"></i></a><a href="#DriverManager" class="headerlink" title="DriverManager"></a>DriverManager</h3>
      <ul>
<li>DriverManager驱动管理类</li>
</ul>

        <h4 id="作用："   >
          <a href="#作用：" class="heading-link"><i class="fas fa-link"></i></a><a href="#作用：" class="headerlink" title="作用："></a>作用：</h4>
      
        <h5 id="注册驱动"   >
          <a href="#注册驱动" class="heading-link"><i class="fas fa-link"></i></a><a href="#注册驱动" class="headerlink" title="注册驱动"></a>注册驱动</h5>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1.注册驱动</span></span><br><span class="line">Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br></pre></td></tr></table></div></figure>


        <h5 id="获取数据库连接"   >
          <a href="#获取数据库连接" class="heading-link"><i class="fas fa-link"></i></a><a href="#获取数据库连接" class="headerlink" title="获取数据库连接"></a>获取数据库连接</h5>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> Connection <span class="title function_">getConnection</span><span class="params">(String url, String user, String password)</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="Connection"   >
          <a href="#Connection" class="heading-link"><i class="fas fa-link"></i></a><a href="#Connection" class="headerlink" title="Connection"></a>Connection</h3>
      <ul>
<li>Connection数据库连接对象</li>
</ul>

        <h4 id="作用"   >
          <a href="#作用" class="heading-link"><i class="fas fa-link"></i></a><a href="#作用" class="headerlink" title="作用"></a>作用</h4>
      
        <h5 id="获取执行SQL的对象"   >
          <a href="#获取执行SQL的对象" class="heading-link"><i class="fas fa-link"></i></a><a href="#获取执行SQL的对象" class="headerlink" title="获取执行SQL的对象"></a>获取执行SQL的对象</h5>
      
        <h5 id="管理事务"   >
          <a href="#管理事务" class="heading-link"><i class="fas fa-link"></i></a><a href="#管理事务" class="headerlink" title="管理事务"></a>管理事务</h5>
      <ol>
<li>开启事务</li>
<li>提交事务</li>
<li>回滚事务</li>
</ol>

        <h3 id="Statement"   >
          <a href="#Statement" class="heading-link"><i class="fas fa-link"></i></a><a href="#Statement" class="headerlink" title="Statement"></a>Statement</h3>
      
        <h4 id="作用-1"   >
          <a href="#作用-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#作用-1" class="headerlink" title="作用"></a>作用</h4>
      <ol>
<li>执行SQL语句</li>
</ol>
<ul>
<li>executeUpdate(sql):执行DML、DDL语句</li>
<li>executeQuery(sql)：执行DQL语句</li>
</ul>

        <h4 id="示例一-executeUpdate执行DML语句"   >
          <a href="#示例一-executeUpdate执行DML语句" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一-executeUpdate执行DML语句" class="headerlink" title="示例一 executeUpdate执行DML语句"></a>示例一 executeUpdate执行DML语句</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * JDBC-API详解：Statement</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JDBCDemo</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 执行DML语句</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDML</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 1.注册驱动</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="comment">// 2.获取连接对象</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/db1?useSSL=false&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;******&quot;</span>;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url,username,password);</span><br><span class="line">        <span class="comment">// 3.定义SQL</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update stu set username = &#x27;Amy&#x27; where id = 1&quot;</span>;</span><br><span class="line">        <span class="comment">// 4.获取执行SQL的对象</span></span><br><span class="line">        <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line">        <span class="comment">// 5.执行SQL</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> stmt.executeUpdate(sql);    <span class="comment">// 执行完DML语句后，受影响的行数</span></span><br><span class="line">        <span class="comment">// 6.处理结果</span></span><br><span class="line">         <span class="keyword">if</span>(count &gt; <span class="number">0</span>)&#123;</span><br><span class="line">             System.out.println(<span class="string">&quot;修改成功~&quot;</span>);   <span class="comment">// 输出：修改成功~</span></span><br><span class="line">         &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             System.out.println(<span class="string">&quot;修改失败~&quot;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">        <span class="comment">// 7.释放资源</span></span><br><span class="line">        stmt.close();</span><br><span class="line">        conn.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="示例二-executeUpdate执行DDL语句"   >
          <a href="#示例二-executeUpdate执行DDL语句" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例二-executeUpdate执行DDL语句" class="headerlink" title="示例二 executeUpdate执行DDL语句"></a>示例二 executeUpdate执行DDL语句</h4>
      <ol>
<li>创建数据库db2</li>
</ol>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * JDBC-API详解：Statement</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JDBCDemo</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 执行DDL语句</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDML</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 1.注册驱动</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="comment">// 2.获取连接对象</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/db1?useSSL=false&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;******&quot;</span>;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url,username,password);</span><br><span class="line">        <span class="comment">// 3.定义SQL</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;create database db2&quot;</span>;</span><br><span class="line">        <span class="comment">// 4.获取执行SQL的对象</span></span><br><span class="line">        <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line">        <span class="comment">// 5.执行SQL</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> stmt.executeUpdate(sql);</span><br><span class="line">        <span class="comment">// 6.处理结果</span></span><br><span class="line">         <span class="keyword">if</span>(count &gt; <span class="number">0</span>)&#123;</span><br><span class="line">             System.out.println(<span class="string">&quot;修改成功~&quot;</span>);   <span class="comment">// 输出：修改成功~</span></span><br><span class="line">         &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             System.out.println(<span class="string">&quot;修改失败~&quot;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">        <span class="comment">// 7.释放资源</span></span><br><span class="line">        stmt.close();</span><br><span class="line">        conn.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ol start="2">
<li>删除数据库db2(执行成功，但受影响行数显示0)</li>
</ol>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * JDBC-API详解：Statement</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JDBCDemo</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 执行DDL语句</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDML</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 1.注册驱动</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="comment">// 2.获取连接对象</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/db1?useSSL=false&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;******&quot;</span>;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url,username,password);</span><br><span class="line">        <span class="comment">// 3.定义SQL</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;drop database db2&quot;</span>;</span><br><span class="line">        <span class="comment">// 4.获取执行SQL的对象</span></span><br><span class="line">        <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line">        <span class="comment">// 5.执行SQL</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> stmt.executeUpdate(sql);</span><br><span class="line">        <span class="comment">// 6.处理结果</span></span><br><span class="line">        System.out.println(count);  <span class="comment">// 输出：0</span></span><br><span class="line">        <span class="comment">// 7.释放资源</span></span><br><span class="line">        stmt.close();</span><br><span class="line">        conn.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="ResultSet"   >
          <a href="#ResultSet" class="heading-link"><i class="fas fa-link"></i></a><a href="#ResultSet" class="headerlink" title="ResultSet"></a>ResultSet</h3>
      <p>ResultSet(结果集对象)</p>

        <h4 id="作用：-1"   >
          <a href="#作用：-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#作用：-1" class="headerlink" title="作用："></a>作用：</h4>
      <ul>
<li>封装了DQL查询语句的结果</li>
<li>获取查询结果</li>
</ul>
<div class="table-container"><table>
<thead>
<tr>
<th align="center">Syntax</th>
<th align="center">Description</th>
</tr>
</thead>
<tbody><tr>
<td align="center">boolean next()</td>
<td align="center">(1)将光标向下移动一行；(2)判断当前行是否为有效行</td>
</tr>
<tr>
<td align="center">getXXX()获取数据</td>
<td align="center">xxx 数据类型；列的编号从1开始</td>
</tr>
</tbody></table></div>

        <h4 id="示例一"   >
          <a href="#示例一" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一" class="headerlink" title="示例一"></a>示例一</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * JDBC-API详解：ResultSet</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JDBCDemo</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 执行DQL语句</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testResultSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 1.注册驱动</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="comment">// 2.获取连接对象</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/db1?useSSL=false&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;******&quot;</span>;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url,username,password);</span><br><span class="line">        <span class="comment">// 3.定义sql</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from stu&quot;</span>;</span><br><span class="line">        <span class="comment">// 4.获取statement对象</span></span><br><span class="line">        <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line">        <span class="comment">// 5.执行sql</span></span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> stmt.executeQuery(sql);</span><br><span class="line">        <span class="comment">// 6.处理结果，遍历rs中的所有数据</span></span><br><span class="line">        <span class="comment">// 6.1光标向下移动一行，并判断当前行是否有数据</span></span><br><span class="line">        <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">            <span class="comment">// 6.2获取数据</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> rs.getInt(<span class="number">1</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> rs.getString(<span class="number">2</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">pw</span> <span class="operator">=</span> rs.getString(<span class="number">3</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">g</span> <span class="operator">=</span> rs.getString(<span class="number">4</span>);</span><br><span class="line">            System.out.println(id);</span><br><span class="line">            System.out.println(name);</span><br><span class="line">            System.out.println(pw);</span><br><span class="line">            System.out.println(g);</span><br><span class="line">            System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 7.释放资源</span></span><br><span class="line">        rs.close();</span><br><span class="line">        stmt.close();</span><br><span class="line">        conn.close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 输出：</span></span><br><span class="line">    <span class="comment">//1</span></span><br><span class="line">    <span class="comment">//Amy</span></span><br><span class="line">    <span class="comment">//null</span></span><br><span class="line">    <span class="comment">//female</span></span><br><span class="line">    <span class="comment">//---------------</span></span><br><span class="line">    <span class="comment">//2</span></span><br><span class="line">    <span class="comment">//John</span></span><br><span class="line">    <span class="comment">//230204</span></span><br><span class="line">    <span class="comment">//female</span></span><br><span class="line">    <span class="comment">//---------------</span></span><br><span class="line">    <span class="comment">//3</span></span><br><span class="line">    <span class="comment">//Tony</span></span><br><span class="line">    <span class="comment">//230205</span></span><br><span class="line">    <span class="comment">//female</span></span><br><span class="line">    <span class="comment">//---------------</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="示例二-方法重载-将列编号改为列名称"   >
          <a href="#示例二-方法重载-将列编号改为列名称" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例二-方法重载-将列编号改为列名称" class="headerlink" title="示例二 方法重载(将列编号改为列名称)"></a>示例二 方法重载(将列编号改为列名称)</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * JDBC-API详解：ResultSet</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JDBCDemo</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 执行DQL语句</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testResultSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 1.注册驱动</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="comment">// 2.获取连接对象</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/db1?useSSL=false&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;******&quot;</span>;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url,username,password);</span><br><span class="line">        <span class="comment">// 3.定义sql</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from stu&quot;</span>;</span><br><span class="line">        <span class="comment">// 4.获取statement对象</span></span><br><span class="line">        <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line">        <span class="comment">// 5.执行sql</span></span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> stmt.executeQuery(sql);</span><br><span class="line">        <span class="comment">// 6.处理结果，遍历rs中的所有数据</span></span><br><span class="line">        <span class="comment">// 6.1光标向下移动一行，并判断当前行是否有数据</span></span><br><span class="line">        <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">            <span class="comment">// 6.2获取数据</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> rs.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">n</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">pw</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">g</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;gender&quot;</span>);</span><br><span class="line">            System.out.println(id);</span><br><span class="line">            System.out.println(n);</span><br><span class="line">            System.out.println(pw);</span><br><span class="line">            System.out.println(g);</span><br><span class="line">            System.out.println(<span class="string">&quot;-----------&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 7.释放资源</span></span><br><span class="line">        rs.close();</span><br><span class="line">        stmt.close();</span><br><span class="line">        conn.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出：</span></span><br><span class="line">    <span class="comment">//1</span></span><br><span class="line">    <span class="comment">//Amy</span></span><br><span class="line">    <span class="comment">//null</span></span><br><span class="line">    <span class="comment">//female</span></span><br><span class="line">    <span class="comment">//-----------</span></span><br><span class="line">    <span class="comment">//2</span></span><br><span class="line">    <span class="comment">//John</span></span><br><span class="line">    <span class="comment">//230204</span></span><br><span class="line">    <span class="comment">//female</span></span><br><span class="line">    <span class="comment">//-----------</span></span><br><span class="line">    <span class="comment">//3</span></span><br><span class="line">    <span class="comment">//Tony</span></span><br><span class="line">    <span class="comment">//230205</span></span><br><span class="line">    <span class="comment">//female</span></span><br><span class="line">    <span class="comment">//-----------</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="示例三-案例-将查询到的数据封装，存储到ArrayList集合中"   >
          <a href="#示例三-案例-将查询到的数据封装，存储到ArrayList集合中" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例三-案例-将查询到的数据封装，存储到ArrayList集合中" class="headerlink" title="示例三 (案例)将查询到的数据封装，存储到ArrayList集合中"></a>示例三 (案例)将查询到的数据封装，存储到ArrayList集合中</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * JDBC-API详解：ResultSet</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JDBCDemo</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 将查询到的数据封装，存储到ArrayList集合中</span></span><br><span class="line"><span class="comment">    * 1.定义一个实体类Info</span></span><br><span class="line"><span class="comment">    * 2.查询数据，封装到Info对象中</span></span><br><span class="line"><span class="comment">    * 3.将Info对象存入ArrayList集合中</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testResultSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 1.注册驱动</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="comment">// 2.获取连接对象</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/db1?useSSL=false&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;******&quot;</span>;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url,username,password);</span><br><span class="line">        <span class="comment">// 3.定义sql</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from stu&quot;</span>;</span><br><span class="line">        <span class="comment">// 4.获取statement对象</span></span><br><span class="line">        <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line">        <span class="comment">// 5.执行sql</span></span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> stmt.executeQuery(sql);</span><br><span class="line">        <span class="comment">// 创建集合</span></span><br><span class="line">        List&lt;Info&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Info&gt;();</span><br><span class="line">        <span class="comment">// 6.处理结果，遍历rs中的所有数据</span></span><br><span class="line">        <span class="comment">// 6.1光标向下移动一行，并判断当前行是否有数据</span></span><br><span class="line">        <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">            <span class="type">Info</span> <span class="variable">info</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Info</span>(); <span class="comment">// 创建Info对象</span></span><br><span class="line">            <span class="comment">// 6.2获取数据</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> rs.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">n</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">pw</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">g</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;gender&quot;</span>);</span><br><span class="line">            <span class="comment">// 赋值到Info对象</span></span><br><span class="line">            info.setId(id);</span><br><span class="line">            info.setUsername(n);</span><br><span class="line">            info.setPassword(pw);</span><br><span class="line">            info.setGender(g);</span><br><span class="line">            <span class="comment">// 存入集合</span></span><br><span class="line">            list.add(info);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 遍历集合，控制台输出</span></span><br><span class="line">        <span class="keyword">for</span>(Info i : list)&#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 7.释放资源</span></span><br><span class="line">        rs.close();</span><br><span class="line">        stmt.close();</span><br><span class="line">        conn.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 输出：</span></span><br><span class="line">    <span class="comment">//Info&#123;id=1, username=&#x27;Amy&#x27;, password=&#x27;null&#x27;, gender=&#x27;female&#x27;&#125;</span></span><br><span class="line">    <span class="comment">//Info&#123;id=2, username=&#x27;John&#x27;, password=&#x27;230204&#x27;, gender=&#x27;female&#x27;&#125;</span></span><br><span class="line">    <span class="comment">//Info&#123;id=3, username=&#x27;Tony&#x27;, password=&#x27;230205&#x27;, gender=&#x27;female&#x27;&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="PreparedStatement"   >
          <a href="#PreparedStatement" class="heading-link"><i class="fas fa-link"></i></a><a href="#PreparedStatement" class="headerlink" title="PreparedStatement"></a>PreparedStatement</h3>
      ]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JDBC</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-Stream流</title>
    <url>/2024/10/16/Java-Stream%E6%B5%81/</url>
    <content><![CDATA[
        <h1 id="Stream流"   >
          <a href="#Stream流" class="heading-link"><i class="fas fa-link"></i></a><a href="#Stream流" class="headerlink" title="Stream流"></a>Stream流</h1>
      
        <h2 id="导入"   >
          <a href="#导入" class="heading-link"><i class="fas fa-link"></i></a><a href="#导入" class="headerlink" title="导入"></a>导入</h2>
      <ul>
<li>原写法</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;String&gt; list1 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        list1.add(<span class="string">&quot;张22&quot;</span>);</span><br><span class="line">        list1.add(<span class="string">&quot;张1&quot;</span>);</span><br><span class="line">        list1.add(<span class="string">&quot;张333&quot;</span>);</span><br><span class="line">        list1.add(<span class="string">&quot;李1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; list2 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(String name : list1)&#123;</span><br><span class="line">            <span class="keyword">if</span>(name.startsWith(<span class="string">&quot;张&quot;</span>))&#123;</span><br><span class="line">                list2.add(name);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(list2);</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; list3 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(String name : list2)&#123;</span><br><span class="line">            <span class="keyword">if</span>(name.length() == <span class="number">3</span>)&#123;</span><br><span class="line">                list3.add(name);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(String name : list3)&#123;</span><br><span class="line">            System.out.println(name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>新写法</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;String&gt; list1 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        list1.add(<span class="string">&quot;张22&quot;</span>);</span><br><span class="line">        list1.add(<span class="string">&quot;张1&quot;</span>);</span><br><span class="line">        list1.add(<span class="string">&quot;张333&quot;</span>);</span><br><span class="line">        list1.add(<span class="string">&quot;李1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        list1.stream().filter(name-&gt;name.startsWith(<span class="string">&quot;张&quot;</span>)).filter(name-&gt;name.length() == <span class="number">3</span>).forEach(name-&gt; System.out.println(name));</span><br><span class="line">        <span class="comment">// 输出: 张22</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="获取Stream流"   >
          <a href="#获取Stream流" class="heading-link"><i class="fas fa-link"></i></a><a href="#获取Stream流" class="headerlink" title="获取Stream流"></a>获取Stream流</h2>
      
        <h3 id="单列集合获取Stream流"   >
          <a href="#单列集合获取Stream流" class="heading-link"><i class="fas fa-link"></i></a><a href="#单列集合获取Stream流" class="headerlink" title="单列集合获取Stream流"></a>单列集合获取Stream流</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.单列集合获取Stream流</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="string">&quot;d&quot;</span>);</span><br><span class="line">        list.stream().forEach(s -&gt; System.out.println(s));</span><br><span class="line">        <span class="comment">// 输出: </span></span><br><span class="line">        <span class="comment">//a</span></span><br><span class="line">        <span class="comment">//b</span></span><br><span class="line">        <span class="comment">//c</span></span><br><span class="line">        <span class="comment">//d</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="双列集合获取Stream流"   >
          <a href="#双列集合获取Stream流" class="heading-link"><i class="fas fa-link"></i></a><a href="#双列集合获取Stream流" class="headerlink" title="双列集合获取Stream流"></a>双列集合获取Stream流</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.双列集合获取Stream流</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.创建双列集合</span></span><br><span class="line">        HashMap&lt;String,Integer&gt; hm = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 2.添加数据</span></span><br><span class="line">        hm.put(<span class="string">&quot;aaa&quot;</span>,<span class="number">111</span>);</span><br><span class="line">        hm.put(<span class="string">&quot;bbb&quot;</span>,<span class="number">222</span>);</span><br><span class="line">        hm.put(<span class="string">&quot;ccc&quot;</span>,<span class="number">333</span>);</span><br><span class="line">        <span class="comment">// 3.获取Stream流(方法一)</span></span><br><span class="line">        hm.keySet().stream().forEach(s -&gt; System.out.println(s));</span><br><span class="line">        <span class="comment">// 输出:</span></span><br><span class="line">        <span class="comment">//aaa</span></span><br><span class="line">        <span class="comment">//ccc</span></span><br><span class="line">        <span class="comment">//bbb</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.获取Stream流(方法二)</span></span><br><span class="line">        hm.entrySet().stream().forEach(s -&gt; System.out.println(s));</span><br><span class="line">        <span class="comment">// 输出:</span></span><br><span class="line">        <span class="comment">//aaa=111</span></span><br><span class="line">        <span class="comment">//ccc=333</span></span><br><span class="line">        <span class="comment">//bbb=222</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="数组获取Stream流"   >
          <a href="#数组获取Stream流" class="heading-link"><i class="fas fa-link"></i></a><a href="#数组获取Stream流" class="headerlink" title="数组获取Stream流"></a>数组获取Stream流</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.数组获取Stream流</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.创建数组</span></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.获取Stream流</span></span><br><span class="line">        Arrays.stream(arr).forEach(s -&gt; System.out.println(s));</span><br><span class="line">        <span class="comment">// 输出:</span></span><br><span class="line">        <span class="comment">//1</span></span><br><span class="line">        <span class="comment">//2</span></span><br><span class="line">        <span class="comment">//3</span></span><br><span class="line">        <span class="comment">//4</span></span><br><span class="line">        <span class="comment">//5</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.数组获取Stream流</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.创建数组</span></span><br><span class="line">        <span class="type">int</span>[] arr1 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">        String[] arr2 = &#123;<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">        Arrays.stream(arr1).forEach(s -&gt; System.out.println(s));</span><br><span class="line">        System.out.println(<span class="string">&quot;============&quot;</span>);</span><br><span class="line">        Arrays.stream(arr2).forEach(s -&gt; System.out.println(s));</span><br><span class="line">        <span class="comment">// 输出:</span></span><br><span class="line">        <span class="comment">//a</span></span><br><span class="line">        <span class="comment">//b</span></span><br><span class="line">        <span class="comment">//c</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="零散数据"   >
          <a href="#零散数据" class="heading-link"><i class="fas fa-link"></i></a><a href="#零散数据" class="headerlink" title="零散数据"></a>零散数据</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.stream.Stream;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.零散数据</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Stream.of(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>).forEach(s -&gt; System.out.println(s));</span><br><span class="line">        <span class="comment">// 输出:</span></span><br><span class="line">        <span class="comment">//1</span></span><br><span class="line">        <span class="comment">//2</span></span><br><span class="line">        <span class="comment">//3</span></span><br><span class="line"></span><br><span class="line">        Stream.of(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>).forEach(s -&gt; System.out.println(s));</span><br><span class="line">        <span class="comment">// 输出:</span></span><br><span class="line">        <span class="comment">//a</span></span><br><span class="line">        <span class="comment">//b</span></span><br><span class="line">        <span class="comment">//c</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="Stream接口静态方法of的细节"   >
          <a href="#Stream接口静态方法of的细节" class="heading-link"><i class="fas fa-link"></i></a><a href="#Stream接口静态方法of的细节" class="headerlink" title="Stream接口静态方法of的细节"></a>Stream接口静态方法of的细节</h3>
      <ul>
<li>传递的数组必须是引用数据类型</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.stream.Stream;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stream接口静态方法of的细节</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr1 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"></span><br><span class="line">        String[] arr2 = &#123;<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">        Stream.of(arr1).forEach(s -&gt; System.out.println(s));    <span class="comment">// 输出: [I@2d98a335</span></span><br><span class="line">        Stream.of(arr2).forEach(s -&gt; System.out.println(s));</span><br><span class="line">        <span class="comment">// 输出:</span></span><br><span class="line">        <span class="comment">//a</span></span><br><span class="line">        <span class="comment">//b</span></span><br><span class="line">        <span class="comment">//c</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="Stream流的中间方法"   >
          <a href="#Stream流的中间方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#Stream流的中间方法" class="headerlink" title="Stream流的中间方法"></a>Stream流的中间方法</h2>
      
        <h3 id="filter过滤"   >
          <a href="#filter过滤" class="heading-link"><i class="fas fa-link"></i></a><a href="#filter过滤" class="headerlink" title="filter过滤"></a>filter过滤</h3>
      <ul>
<li>写法一</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;Tom&quot;</span>,<span class="string">&quot;John&quot;</span>,<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 过滤</span></span><br><span class="line">        list.stream().filter(s -&gt; s.startsWith(<span class="string">&quot;T&quot;</span>)).forEach(s -&gt; System.out.println(s));   <span class="comment">// 输出: Tom</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>写法二</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Stream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;Tom&quot;</span>,<span class="string">&quot;John&quot;</span>,<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 过滤</span></span><br><span class="line">        Stream&lt;String&gt; stream1 = list.stream().filter(s -&gt; s.startsWith(<span class="string">&quot;T&quot;</span>));</span><br><span class="line"></span><br><span class="line">        Stream&lt;String&gt; stream2 = stream1.filter(s -&gt; s.length() == <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        stream2.forEach(s -&gt; System.out.println(s));    <span class="comment">// 输出: Tom</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="limit获取前几个元素"   >
          <a href="#limit获取前几个元素" class="heading-link"><i class="fas fa-link"></i></a><a href="#limit获取前几个元素" class="headerlink" title="limit获取前几个元素"></a>limit获取前几个元素</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;Tom&quot;</span>,<span class="string">&quot;John&quot;</span>,<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取前几个元素</span></span><br><span class="line">        list.stream().limit(<span class="number">2</span>)</span><br><span class="line">                .forEach(s -&gt; System.out.print(s)); <span class="comment">// 输出: TomJohn</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="skip跳过前几个元素"   >
          <a href="#skip跳过前几个元素" class="heading-link"><i class="fas fa-link"></i></a><a href="#skip跳过前几个元素" class="headerlink" title="skip跳过前几个元素"></a>skip跳过前几个元素</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;Tom&quot;</span>,<span class="string">&quot;John&quot;</span>,<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 跳过前几个元素</span></span><br><span class="line">        list.stream().skip(<span class="number">2</span>)</span><br><span class="line">                .forEach(s -&gt; System.out.print(s)); <span class="comment">// 输出: Simon</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="disticnt元素去重"   >
          <a href="#disticnt元素去重" class="heading-link"><i class="fas fa-link"></i></a><a href="#disticnt元素去重" class="headerlink" title="disticnt元素去重"></a>disticnt元素去重</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;String&gt; list1 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list1,<span class="string">&quot;Tom&quot;</span>,<span class="string">&quot;Tom&quot;</span>,<span class="string">&quot;John&quot;</span>,<span class="string">&quot;Simon&quot;</span>,<span class="string">&quot;Tony&quot;</span>);</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; list2 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list2,<span class="string">&quot;Amy&quot;</span>,<span class="string">&quot;Jack&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// distinct元素去重</span></span><br><span class="line">        list1.stream().distinct().forEach(s -&gt; System.out.print(s));    <span class="comment">// 输出: TomJohnSimonTony</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="concat元素合并"   >
          <a href="#concat元素合并" class="heading-link"><i class="fas fa-link"></i></a><a href="#concat元素合并" class="headerlink" title="concat元素合并"></a>concat元素合并</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.stream.Stream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建一个Stream流</span></span><br><span class="line">        Stream&lt;String&gt; stream1 = Stream.of(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取一个Stream流</span></span><br><span class="line">        String[] arr = &#123;<span class="string">&quot;Tom&quot;</span>,<span class="string">&quot;Simon&quot;</span>,<span class="string">&quot;Amy&quot;</span>&#125;;</span><br><span class="line">        Stream&lt;String&gt; stream2 = Stream.of(arr);</span><br><span class="line">        <span class="comment">// concat合并</span></span><br><span class="line">        Stream&lt;String&gt; concat = Stream.concat(stream1,stream2);</span><br><span class="line">        <span class="comment">// 遍历concat流</span></span><br><span class="line">        concat.forEach(name -&gt; System.out.print(name)); <span class="comment">// 输出：abcTomSimonAmy</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="map转换流中的数据类型"   >
          <a href="#map转换流中的数据类型" class="heading-link"><i class="fas fa-link"></i></a><a href="#map转换流中的数据类型" class="headerlink" title="map转换流中的数据类型"></a>map转换流中的数据类型</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;Tom-20&quot;</span>,<span class="string">&quot;John-21&quot;</span>,<span class="string">&quot;Simon-22&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// map转换流中的数据类型</span></span><br><span class="line">        list.stream()</span><br><span class="line">                .map(s -&gt; Integer.parseInt(s.split(<span class="string">&quot;-&quot;</span>)[<span class="number">1</span>]))</span><br><span class="line">                .forEach(s -&gt; System.out.print(s)); <span class="comment">// 输出: 202122</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="Stream流的终结方法"   >
          <a href="#Stream流的终结方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#Stream流的终结方法" class="headerlink" title="Stream流的终结方法"></a>Stream流的终结方法</h2>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;Tom&quot;</span>,<span class="string">&quot;Simon&quot;</span>,<span class="string">&quot;John&quot;</span>,<span class="string">&quot;Tony&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历</span></span><br><span class="line">        list.stream().forEach(s -&gt; System.out.print(s));    <span class="comment">// 输出: TomSimonJohnTony</span></span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 统计</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">count</span> <span class="operator">=</span> list.stream().count();</span><br><span class="line">        System.out.print(count);    <span class="comment">// 输出: 4</span></span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// toArray()收集流中的数据，放到数组中</span></span><br><span class="line">        Object[] arr1 = list.stream().toArray();</span><br><span class="line">        System.out.print(Arrays.toString(arr1));    <span class="comment">// 输出: [Tom, Simon, John, Tony]</span></span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        String[] arr2 = list.stream().toArray(value -&gt; <span class="keyword">new</span> <span class="title class_">String</span>[value]);</span><br><span class="line">        System.out.print(Arrays.toString(arr2));    <span class="comment">// 输出: [Tom, Simon, John, Tony]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="收集方法Collect"   >
          <a href="#收集方法Collect" class="heading-link"><i class="fas fa-link"></i></a><a href="#收集方法Collect" class="headerlink" title="收集方法Collect"></a>收集方法Collect</h2>
      
        <h3 id="list集合，set集合"   >
          <a href="#list集合，set集合" class="heading-link"><i class="fas fa-link"></i></a><a href="#list集合，set集合" class="headerlink" title="list集合，set集合"></a>list集合，set集合</h3>
      <ul>
<li>list不去重，set去重</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamCollectTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;Tom-male-20&quot;</span>,<span class="string">&quot;Tom-male-20&quot;</span>,<span class="string">&quot;Amy-female-21&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 打印list集合中所有男性</span></span><br><span class="line">        list.stream()</span><br><span class="line">                .filter(s -&gt; <span class="string">&quot;male&quot;</span>.equals(s.split(<span class="string">&quot;-&quot;</span>)[<span class="number">1</span>]))</span><br><span class="line">                .forEach(s -&gt; System.out.print(s)); <span class="comment">// 输出: Tom-male-20Tom-male-20</span></span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 收集list集合中所有男性</span></span><br><span class="line">        List&lt;String&gt; newList = list.stream()</span><br><span class="line">                .filter(s -&gt; <span class="string">&quot;male&quot;</span>.equals(s.split(<span class="string">&quot;-&quot;</span>)[<span class="number">1</span>]))</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line">        System.out.print(newList);  <span class="comment">// 输出: [Tom-male-20, Tom-male-20]</span></span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 收集set集合中所有男性</span></span><br><span class="line">        Set&lt;String&gt; newList01 = list.stream()</span><br><span class="line">                .filter(s -&gt; <span class="string">&quot;male&quot;</span>.equals(s.split(<span class="string">&quot;-&quot;</span>)[<span class="number">1</span>]))</span><br><span class="line">                .collect(Collectors.toSet());</span><br><span class="line">        System.out.println(newList01);  <span class="comment">// 输出: [Tom-male-20]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="map集合"   >
          <a href="#map集合" class="heading-link"><i class="fas fa-link"></i></a><a href="#map集合" class="headerlink" title="map集合"></a>map集合</h3>
      <ul>
<li>map集合中键不能重复</li>
</ul>
<ol>
<li>写法一</li>
</ol>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Function;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamCollectTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;Tom-male-20&quot;</span>,<span class="string">&quot;Amy-female-21&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 收集map集合中所有男性</span></span><br><span class="line">        <span class="comment">// 键: 姓名 值: 年龄</span></span><br><span class="line">        Map&lt;String, Integer&gt; map = list.stream()</span><br><span class="line">                .filter(s -&gt; <span class="string">&quot;male&quot;</span>.equals(s.split(<span class="string">&quot;-&quot;</span>)[<span class="number">1</span>]))</span><br><span class="line">                .collect(Collectors.toMap(<span class="keyword">new</span> <span class="title class_">Function</span>&lt;String, String&gt;() &#123;</span><br><span class="line">                                              <span class="meta">@Override</span></span><br><span class="line">                                              <span class="keyword">public</span> String <span class="title function_">apply</span><span class="params">(String s)</span> &#123;</span><br><span class="line">                                                  <span class="keyword">return</span> s.split(<span class="string">&quot;-&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">                                              &#125;</span><br><span class="line">                                          &#125;,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Function</span>&lt;String, Integer&gt;() &#123;</span><br><span class="line">                            <span class="meta">@Override</span></span><br><span class="line">                            <span class="keyword">public</span> Integer <span class="title function_">apply</span><span class="params">(String s)</span> &#123;</span><br><span class="line">                                <span class="keyword">return</span> Integer.parseInt(s.split(<span class="string">&quot;-&quot;</span>)[<span class="number">2</span>]);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;));</span><br><span class="line">        System.out.print(map);  <span class="comment">// 输出: &#123;Tom=20&#125;</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure>

<ol start="2">
<li>写法二</li>
</ol>
<ul>
<li>lambda表达式</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamCollectTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;Tom-male-20&quot;</span>,<span class="string">&quot;Amy-female-21&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 收集map集合中所有男性</span></span><br><span class="line">        <span class="comment">// 键: 姓名 值: 年龄</span></span><br><span class="line">        Map&lt;String, Integer&gt; map = list.stream()</span><br><span class="line">                .filter(s -&gt; <span class="string">&quot;male&quot;</span>.equals(s.split(<span class="string">&quot;-&quot;</span>)[<span class="number">1</span>]))</span><br><span class="line">                .collect(Collectors.toMap(</span><br><span class="line">                        s -&gt; s.split(<span class="string">&quot;-&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">                        ,</span><br><span class="line">                        s -&gt; Integer.parseInt(s.split(<span class="string">&quot;-&quot;</span>)[<span class="number">2</span>])));</span><br><span class="line">        System.out.print(map);  <span class="comment">// 输出: &#123;Tom=20&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="练习一-数字过滤"   >
          <a href="#练习一-数字过滤" class="heading-link"><i class="fas fa-link"></i></a><a href="#练习一-数字过滤" class="headerlink" title="练习一 数字过滤"></a>练习一 数字过滤</h2>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        数据过滤</span></span><br><span class="line"><span class="comment">        定义一个集合，添加一些整数1，2，3，4，5</span></span><br><span class="line"><span class="comment">        过滤奇数，只留下偶数</span></span><br><span class="line"><span class="comment">        并将结果保存下来</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">        System.out.print(list); <span class="comment">// 输出: [1, 2, 3, 4, 5]</span></span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        List&lt;Integer&gt; newList = list.stream()</span><br><span class="line">                .filter(n -&gt; n % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line">        System.out.println(newList);    <span class="comment">// 输出: [2, 4]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="练习二-数据操作"   >
          <a href="#练习二-数据操作" class="heading-link"><i class="fas fa-link"></i></a><a href="#练习二-数据操作" class="headerlink" title="练习二 数据操作"></a>练习二 数据操作</h2>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        创建一个ArrayList集合，并添加字符串，&quot;姓名，年龄&quot;:</span></span><br><span class="line"><span class="comment">        &quot;ZhangSan,23&quot;</span></span><br><span class="line"><span class="comment">        &quot;LiSi,24&quot;</span></span><br><span class="line"><span class="comment">        &quot;WangWu,25&quot;</span></span><br><span class="line"><span class="comment">        保留年龄大于等于24岁的人</span></span><br><span class="line"><span class="comment">        并将结果收集到Map集合中</span></span><br><span class="line"><span class="comment">        姓名为键，年龄为值</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        list.add(<span class="string">&quot;ZhangSan,23&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;LiSi,24&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;WangWu,25&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(list);   <span class="comment">// 输出: [ZhangSan,23, LiSi,24, WangWu,25]</span></span><br><span class="line"></span><br><span class="line">        Map&lt;String, Integer&gt; map = list.stream()</span><br><span class="line">                .filter(s -&gt; Integer.parseInt(s.split(<span class="string">&quot;,&quot;</span>)[<span class="number">1</span>]) &gt;= <span class="number">24</span>)</span><br><span class="line">                .collect(Collectors.toMap(</span><br><span class="line">                        s -&gt; s.split(<span class="string">&quot;,&quot;</span>)[<span class="number">0</span>],</span><br><span class="line">                        s -&gt; Integer.parseInt(s.split(<span class="string">&quot;,&quot;</span>)[<span class="number">1</span>])));</span><br><span class="line">        System.out.println(map);    <span class="comment">// 输出: &#123;WangWu=25, LiSi=24&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="练习三-自定义对象过滤并收集"   >
          <a href="#练习三-自定义对象过滤并收集" class="heading-link"><i class="fas fa-link"></i></a><a href="#练习三-自定义对象过滤并收集" class="headerlink" title="练习三 自定义对象过滤并收集"></a>练习三 自定义对象过滤并收集</h2>
      <ul>
<li>演员类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Actor</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Actor</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Actor</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Actor&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ol>
<li>方法一</li>
</ol>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Function;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Stream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        数据操作:</span></span><br><span class="line"><span class="comment">        现有两个ArrayList集合</span></span><br><span class="line"><span class="comment">        第一个集合中，存储6名男演员的名字和年龄</span></span><br><span class="line"><span class="comment">        第二个集合中，存储6名女演员的名字和年龄</span></span><br><span class="line"><span class="comment">        如: 张三，23</span></span><br><span class="line"><span class="comment">        要求:</span></span><br><span class="line"><span class="comment">        1.男演员只要名字为3个字的前2人</span></span><br><span class="line"><span class="comment">        2.女演员只要姓杨的，并且不要第1个</span></span><br><span class="line"><span class="comment">        3.把过滤后的男演员姓名和女演员姓名合并在一起</span></span><br><span class="line"><span class="comment">        4.将上一步的演员信息封装成Actor对象</span></span><br><span class="line"><span class="comment">        5.将所有演员对象都保存到List集合中</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        ArrayList&lt;String&gt; maleList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        ArrayList&lt;String&gt; femaleList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        Collections.addAll(maleList,<span class="string">&quot;张一,20&quot;</span>,<span class="string">&quot;张二,21&quot;</span>,<span class="string">&quot;张三,22&quot;</span>,<span class="string">&quot;李一一,20&quot;</span>,<span class="string">&quot;李二二,21&quot;</span>,<span class="string">&quot;李三三,22&quot;</span>);</span><br><span class="line">        Collections.addAll(femaleList,<span class="string">&quot;杨一,20&quot;</span>,<span class="string">&quot;杨二,21&quot;</span>,<span class="string">&quot;杨三,22&quot;</span>,<span class="string">&quot;王一,20&quot;</span>,<span class="string">&quot;王二,21&quot;</span>,<span class="string">&quot;王三,22&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Stream&lt;String&gt; stream1 = maleList.stream()</span><br><span class="line">                .filter(s -&gt; s.split(<span class="string">&quot;,&quot;</span>)[<span class="number">0</span>].length() == <span class="number">3</span>)</span><br><span class="line">                .limit(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        Stream&lt;String&gt; stream2 = femaleList.stream()</span><br><span class="line">                .filter(s -&gt; s.split(<span class="string">&quot;,&quot;</span>)[<span class="number">0</span>].startsWith(<span class="string">&quot;杨&quot;</span>))</span><br><span class="line">                .skip(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        Stream.concat(stream1,stream2).map(<span class="keyword">new</span> <span class="title class_">Function</span>&lt;String, Actor&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> Actor <span class="title function_">apply</span><span class="params">(String s)</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> s.split(<span class="string">&quot;,&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">                <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> Integer.parseInt(s.split(<span class="string">&quot;,&quot;</span>)[<span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Actor</span>(name,age);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).forEach(s -&gt; System.out.println(s));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ol start="2">
<li>方法二(lambda表达式)</li>
</ol>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Stream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        数据操作:</span></span><br><span class="line"><span class="comment">        现有两个ArrayList集合</span></span><br><span class="line"><span class="comment">        第一个集合中，存储6名男演员的名字和年龄</span></span><br><span class="line"><span class="comment">        第二个集合中，存储6名女演员的名字和年龄</span></span><br><span class="line"><span class="comment">        如: 张三，23</span></span><br><span class="line"><span class="comment">        要求:</span></span><br><span class="line"><span class="comment">        1.男演员只要名字为3个字的前2人</span></span><br><span class="line"><span class="comment">        2.女演员只要姓杨的，并且不要第1个</span></span><br><span class="line"><span class="comment">        3.把过滤后的男演员姓名和女演员姓名合并在一起</span></span><br><span class="line"><span class="comment">        4.将上一步的演员信息封装成Actor对象</span></span><br><span class="line"><span class="comment">        5.将所有演员对象都保存到List集合中</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        ArrayList&lt;String&gt; maleList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        ArrayList&lt;String&gt; femaleList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        Collections.addAll(maleList,<span class="string">&quot;张一,20&quot;</span>,<span class="string">&quot;张二,21&quot;</span>,<span class="string">&quot;张三,22&quot;</span>,<span class="string">&quot;李一一,20&quot;</span>,<span class="string">&quot;李二二,21&quot;</span>,<span class="string">&quot;李三三,22&quot;</span>);</span><br><span class="line">        Collections.addAll(femaleList,<span class="string">&quot;杨一,20&quot;</span>,<span class="string">&quot;杨二,21&quot;</span>,<span class="string">&quot;杨三,22&quot;</span>,<span class="string">&quot;王一,20&quot;</span>,<span class="string">&quot;王二,21&quot;</span>,<span class="string">&quot;王三,22&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Stream&lt;String&gt; stream1 = maleList.stream()</span><br><span class="line">                .filter(s -&gt; s.split(<span class="string">&quot;,&quot;</span>)[<span class="number">0</span>].length() == <span class="number">3</span>)</span><br><span class="line">                .limit(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        Stream&lt;String&gt; stream2 = femaleList.stream()</span><br><span class="line">                .filter(s -&gt; s.split(<span class="string">&quot;,&quot;</span>)[<span class="number">0</span>].startsWith(<span class="string">&quot;杨&quot;</span>))</span><br><span class="line">                .skip(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;Actor&gt; list = Stream.concat(stream1, stream2)</span><br><span class="line">                .map(s -&gt; <span class="keyword">new</span> <span class="title class_">Actor</span>(s.split(<span class="string">&quot;,&quot;</span>)[<span class="number">0</span>], Integer.parseInt(s.split(<span class="string">&quot;,&quot;</span>)[<span class="number">1</span>])))</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        System.out.println(list);</span><br><span class="line">        <span class="comment">// 输出: [Actor&#123;name=&#x27;李一一&#x27;, age=20&#125;, Actor&#123;name=&#x27;李二二&#x27;, age=21&#125;, Actor&#123;name=&#x27;杨二&#x27;, age=21&#125;, Actor&#123;name=&#x27;杨三&#x27;, age=22&#125;]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Stream</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-反射</title>
    <url>/2024/10/16/Java-%E5%8F%8D%E5%B0%84/</url>
    <content><![CDATA[
        <h1 id="反射"   >
          <a href="#反射" class="heading-link"><i class="fas fa-link"></i></a><a href="#反射" class="headerlink" title="反射"></a>反射</h1>
      
        <h2 id="概述"   >
          <a href="#概述" class="heading-link"><i class="fas fa-link"></i></a><a href="#概述" class="headerlink" title="概述"></a>概述</h2>
      <ul>
<li>反射允许对成员变量(字段)、成员方法和构造方法的信息进行编程访问</li>
</ul>
<p>应用示例：IDEA利用反射获取成员变量、成员方法并展示；IDEA获取方法形参并展示</p>

        <h2 id="获取class对象的三种方式"   >
          <a href="#获取class对象的三种方式" class="heading-link"><i class="fas fa-link"></i></a><a href="#获取class对象的三种方式" class="headerlink" title="获取class对象的三种方式"></a>获取class对象的三种方式</h2>
      <ul>
<li>第二种类名.class适用于同步代码块</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyReflect</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line">        <span class="comment">// 1.Class.forName(&quot;全类名&quot;)</span></span><br><span class="line">        Class&lt;?&gt; clazz1 = Class.forName(<span class="string">&quot;Test.Student&quot;</span>);</span><br><span class="line">        System.out.println(clazz1);  <span class="comment">// 输出：class Test.Student</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.类名.class</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">clazz2</span> <span class="operator">=</span> Student.class;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.对象.getClass()</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="type">Class</span> <span class="variable">clazz3</span> <span class="operator">=</span> s.getClass();</span><br><span class="line"></span><br><span class="line">        System.out.println(clazz1 == clazz2);   <span class="comment">// 输出：true</span></span><br><span class="line">        System.out.println(clazz2 == clazz3);   <span class="comment">// 输出：true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="反射获取构造方法"   >
          <a href="#反射获取构造方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#反射获取构造方法" class="headerlink" title="反射获取构造方法"></a>反射获取构造方法</h2>
      
        <h3 id="getConstructors"   >
          <a href="#getConstructors" class="heading-link"><i class="fas fa-link"></i></a><a href="#getConstructors" class="headerlink" title="getConstructors()"></a>getConstructors()</h3>
      <ul>
<li>Student类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="title function_">Student</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyReflect</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line">        <span class="comment">// 1.获取class字节码文件对象</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;Test.Student&quot;</span>);</span><br><span class="line">        <span class="comment">// 2.获取构造方法</span></span><br><span class="line">        Constructor[] cons = clazz.getConstructors();</span><br><span class="line">        <span class="keyword">for</span> (Constructor con : cons) &#123;</span><br><span class="line">            System.out.println(con);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">//public Test.Student(java.lang.String)</span></span><br><span class="line">        <span class="comment">//public Test.Student()</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="getDeclaredConstructors"   >
          <a href="#getDeclaredConstructors" class="heading-link"><i class="fas fa-link"></i></a><a href="#getDeclaredConstructors" class="headerlink" title="getDeclaredConstructors()"></a>getDeclaredConstructors()</h3>
      <ul>
<li>学生类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="title function_">Student</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyReflect</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line">        <span class="comment">// 1.获取class字节码文件对象</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;Test.Student&quot;</span>);</span><br><span class="line">        <span class="comment">// 2.获取构造方法</span></span><br><span class="line">        Constructor[] cons2 = clazz.getDeclaredConstructors();</span><br><span class="line">        <span class="keyword">for</span> (Constructor con : cons2) &#123;</span><br><span class="line">            System.out.println(con);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">//private Test.Student(java.lang.String,int)</span></span><br><span class="line">        <span class="comment">//protected Test.Student(int)</span></span><br><span class="line">        <span class="comment">//public Test.Student(java.lang.String)</span></span><br><span class="line">        <span class="comment">//public Test.Student()</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="getDeclaredConstructor"   >
          <a href="#getDeclaredConstructor" class="heading-link"><i class="fas fa-link"></i></a><a href="#getDeclaredConstructor" class="headerlink" title="getDeclaredConstructor()"></a>getDeclaredConstructor()</h3>
      <ul>
<li>学生类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="title function_">Student</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyReflect</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException &#123;</span><br><span class="line">        <span class="comment">// 1.获取class字节码文件对象</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;Test.Student&quot;</span>);</span><br><span class="line">        <span class="comment">// 2.获取构造方法</span></span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">con1</span> <span class="operator">=</span> clazz.getDeclaredConstructor();</span><br><span class="line">        System.out.println(con1);   <span class="comment">//输出：public Test.Student()</span></span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">con2</span> <span class="operator">=</span> clazz.getDeclaredConstructor(String.class);</span><br><span class="line">        System.out.println(con2);   <span class="comment">//输出：public Test.Student(java.lang.String)</span></span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">con3</span> <span class="operator">=</span> clazz.getDeclaredConstructor(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(con3);   <span class="comment">//输出：protected Test.Student(int)</span></span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">con4</span> <span class="operator">=</span> clazz.getDeclaredConstructor(String.class,<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(con4);   <span class="comment">//输出：private Test.Student(java.lang.String,int)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取构造方法的权限修饰符</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">m1</span> <span class="operator">=</span> con1.getModifiers();</span><br><span class="line">        System.out.println(m1); <span class="comment">// 输出：1</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">m2</span> <span class="operator">=</span> con2.getModifiers();</span><br><span class="line">        System.out.println(m2); <span class="comment">// 输出：1</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">m3</span> <span class="operator">=</span> con3.getModifiers();</span><br><span class="line">        System.out.println(m3); <span class="comment">// 输出：4</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">m4</span> <span class="operator">=</span> con4.getModifiers();</span><br><span class="line">        System.out.println(m4); <span class="comment">// 输出：2</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 临时取消权限校验</span></span><br><span class="line">        con4.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">stu</span> <span class="operator">=</span> (Student)con4.newInstance(<span class="string">&quot;Tom&quot;</span>, <span class="number">21</span>);</span><br><span class="line">        System.out.println(stu);    <span class="comment">// 输出：Student&#123;name=&#x27;Tom&#x27;, age=21&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="反射获取成员变量"   >
          <a href="#反射获取成员变量" class="heading-link"><i class="fas fa-link"></i></a><a href="#反射获取成员变量" class="headerlink" title="反射获取成员变量"></a>反射获取成员变量</h2>
      
        <h3 id="getFields-返回所有公共成员变量对象的数组"   >
          <a href="#getFields-返回所有公共成员变量对象的数组" class="heading-link"><i class="fas fa-link"></i></a><a href="#getFields-返回所有公共成员变量对象的数组" class="headerlink" title="getFields()返回所有公共成员变量对象的数组"></a>getFields()返回所有公共成员变量对象的数组</h3>
      <ul>
<li>学生类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> String gender;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age, String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, gender=&#x27;&quot;</span> + gender + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyReflect</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line">        <span class="comment">// 1.获取Class字节码文件对象</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;Test.Student&quot;</span>);</span><br><span class="line">        <span class="comment">// 2.获取成员变量</span></span><br><span class="line">        Field[] fields = clazz.getFields();</span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            System.out.println(field);  <span class="comment">// 输出：public java.lang.String Test.Student.gender</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="getField-返回单个公共成员变量对象"   >
          <a href="#getField-返回单个公共成员变量对象" class="heading-link"><i class="fas fa-link"></i></a><a href="#getField-返回单个公共成员变量对象" class="headerlink" title="getField()返回单个公共成员变量对象"></a>getField()返回单个公共成员变量对象</h3>
      <ul>
<li>学生类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> String gender;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age, String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, gender=&#x27;&quot;</span> + gender + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyReflect</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchFieldException &#123;</span><br><span class="line">        <span class="comment">// 1.获取Class字节码文件对象</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;Test.Student&quot;</span>);</span><br><span class="line">        <span class="comment">// 2.获取单个公共成员变量</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">gender</span> <span class="operator">=</span> clazz.getField(<span class="string">&quot;gender&quot;</span>);</span><br><span class="line">        System.out.println(gender); <span class="comment">// 输出：public java.lang.String Test.Student.gender</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="getDeclaredField-返回单个成员变量对象"   >
          <a href="#getDeclaredField-返回单个成员变量对象" class="heading-link"><i class="fas fa-link"></i></a><a href="#getDeclaredField-返回单个成员变量对象" class="headerlink" title="getDeclaredField()返回单个成员变量对象"></a>getDeclaredField()返回单个成员变量对象</h3>
      <ul>
<li>学生类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> String gender;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age, String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, gender=&#x27;&quot;</span> + gender + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyReflect</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchFieldException &#123;</span><br><span class="line">        <span class="comment">// 1.获取Class字节码文件对象</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;Test.Student&quot;</span>);</span><br><span class="line">        <span class="comment">// 2.获取单个成员变量</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> clazz.getDeclaredField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        System.out.println(name); <span class="comment">// 输出：private java.lang.String Test.Student.name</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取权限修饰符</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">modifiers</span> <span class="operator">=</span> name.getModifiers();</span><br><span class="line">        System.out.println(modifiers);  <span class="comment">// 输出：2</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取成员变量名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">n</span> <span class="operator">=</span> name.getName();</span><br><span class="line">        System.out.println(n);  <span class="comment">// 输出：name</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取数据类型</span></span><br><span class="line">        Class&lt;?&gt; type = name.getType();</span><br><span class="line">        System.out.println(type);   <span class="comment">// 输出：class java.lang.String</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取成员变量记录的值</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Tom&quot;</span>,<span class="number">21</span>,<span class="string">&quot;Male&quot;</span>);</span><br><span class="line">        <span class="comment">// 临时取消访问权限</span></span><br><span class="line">        name.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> (String)name.get(s);</span><br><span class="line">        System.out.println(value);  <span class="comment">// 输出：Tom</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 修改对象里面记录的值</span></span><br><span class="line">        name.set(s,<span class="string">&quot;John&quot;</span>);</span><br><span class="line">        System.out.println(s);  <span class="comment">// 输出：Student&#123;name=&#x27;John&#x27;, age=21, gender=&#x27;Male&#x27;&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="反射获取成员方法"   >
          <a href="#反射获取成员方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#反射获取成员方法" class="headerlink" title="反射获取成员方法"></a>反射获取成员方法</h2>
      <ul>
<li>学生类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sleep</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;睡觉&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">(String something)</span> <span class="keyword">throws</span> IOException,NullPointerException&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;在吃&quot;</span> + something);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Parameter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyReflect</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, InvocationTargetException, IllegalAccessException &#123;</span><br><span class="line">        <span class="comment">// 1.获取class字节码文件的对象</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;Test.Student&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.获取所有的方法对象(包含父类中所有的公共方法)</span></span><br><span class="line">        Method[] methods = clazz.getMethods();</span><br><span class="line">        <span class="keyword">for</span> (Method method : methods) &#123;</span><br><span class="line">            System.out.println(method);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.获取所有的方法对象(不获取父类，但可以获取本类中私有的方法)</span></span><br><span class="line">        Method[] dMethods = clazz.getDeclaredMethods();</span><br><span class="line">        <span class="keyword">for</span> (Method dMethod : dMethods) &#123;</span><br><span class="line">            System.out.println(dMethod);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取指定的单一方法</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">eat</span> <span class="operator">=</span> clazz.getDeclaredMethod(<span class="string">&quot;eat&quot;</span>, String.class);</span><br><span class="line">        System.out.println(eat);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取方法的修饰符</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">modifiers</span> <span class="operator">=</span> eat.getModifiers();</span><br><span class="line">        System.out.println(modifiers);  <span class="comment">// 输出：2</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取方法的名字</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> eat.getName();</span><br><span class="line">        System.out.println(name);   <span class="comment">// 输出：eat</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取方法的形参</span></span><br><span class="line">        Parameter[] parameters = eat.getParameters();</span><br><span class="line">        <span class="keyword">for</span> (Parameter parameter : parameters) &#123;</span><br><span class="line">            System.out.println(parameter);  <span class="comment">// 输出：java.lang.String arg0</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取方法抛出的异常</span></span><br><span class="line">        Class[] exceptionTypes = eat.getExceptionTypes();</span><br><span class="line">        <span class="keyword">for</span> (Class exceptionType : exceptionTypes) &#123;</span><br><span class="line">            System.out.println(exceptionType);</span><br><span class="line">            <span class="comment">// 输出：</span></span><br><span class="line">            <span class="comment">//class java.io.IOException</span></span><br><span class="line">            <span class="comment">//class java.lang.NullPointerException</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 方法运行</span></span><br><span class="line"><span class="comment">         * 参数一s：表示方法的调用者</span></span><br><span class="line"><span class="comment">         * 参数二&quot;cookie&quot;：表示方法调用时传递的实际参数</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        eat.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        eat.invoke(s,<span class="string">&quot;cookie&quot;</span>); <span class="comment">// 输出：在吃cookie</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>反射</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-多线程</title>
    <url>/2024/10/16/Java-%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
    <content><![CDATA[
        <h1 id="多线程"   >
          <a href="#多线程" class="heading-link"><i class="fas fa-link"></i></a><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h1>
      
        <h2 id="线程"   >
          <a href="#线程" class="heading-link"><i class="fas fa-link"></i></a><a href="#线程" class="headerlink" title="线程"></a>线程</h2>
      
        <h3 id="线程-1"   >
          <a href="#线程-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#线程-1" class="headerlink" title="线程"></a>线程</h3>
      <ul>
<li>被包含在进程中</li>
<li>作用：跳过效率</li>
</ul>

        <h3 id="进程"   >
          <a href="#进程" class="heading-link"><i class="fas fa-link"></i></a><a href="#进程" class="headerlink" title="进程"></a>进程</h3>
      <p>略</p>

        <h2 id="并发和并行"   >
          <a href="#并发和并行" class="heading-link"><i class="fas fa-link"></i></a><a href="#并发和并行" class="headerlink" title="并发和并行"></a>并发和并行</h2>
      
        <h3 id="并发"   >
          <a href="#并发" class="heading-link"><i class="fas fa-link"></i></a><a href="#并发" class="headerlink" title="并发"></a>并发</h3>
      <ul>
<li>在同一时刻，有多个指令在单个CPU上<strong>交替</strong>执行</li>
</ul>

        <h3 id="并行"   >
          <a href="#并行" class="heading-link"><i class="fas fa-link"></i></a><a href="#并行" class="headerlink" title="并行"></a>并行</h3>
      <ul>
<li>在同一时刻，有多个指令在多个CPU上<strong>同时</strong>执行</li>
</ul>

        <h2 id="多线程的实现方式"   >
          <a href="#多线程的实现方式" class="heading-link"><i class="fas fa-link"></i></a><a href="#多线程的实现方式" class="headerlink" title="多线程的实现方式"></a>多线程的实现方式</h2>
      
        <h3 id="继承Thread类-方式一"   >
          <a href="#继承Thread类-方式一" class="heading-link"><i class="fas fa-link"></i></a><a href="#继承Thread类-方式一" class="headerlink" title="继承Thread类(方式一)"></a>继承Thread类(方式一)</h3>
      <ol>
<li>写法一</li>
</ol>
<ul>
<li>子类MyThread</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 书写线程要执行的代码</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 多线程的第一种启动方式</span></span><br><span class="line"><span class="comment">        * 1. 自定义一个类继承Thread</span></span><br><span class="line"><span class="comment">        * 2. 重写run方法</span></span><br><span class="line"><span class="comment">        * 3. 创建子类的对象，并启动线程</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        <span class="comment">// 开启线程</span></span><br><span class="line">        t1.start();</span><br><span class="line">        <span class="comment">// 输出：Hello World!Hello World!Hello World!</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ol start="2">
<li>写法二</li>
</ol>
<ul>
<li>子类MyThread</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 书写线程要执行的代码</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">            System.out.print(getName() + <span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 多线程的第一种启动方式</span></span><br><span class="line"><span class="comment">        * 1. 自定义一个类继承Thread</span></span><br><span class="line"><span class="comment">        * 2. 重写run方法</span></span><br><span class="line"><span class="comment">        * 3. 创建子类的对象，并启动线程</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line"></span><br><span class="line">        t1.setName(<span class="string">&quot;线程1&quot;</span>);</span><br><span class="line">        t2.setName(<span class="string">&quot;线程2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启线程</span></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出：线程1Hello World!线程1Hello World!线程2Hello World!线程2Hello World!</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="实现Runnable接口-方式二"   >
          <a href="#实现Runnable接口-方式二" class="heading-link"><i class="fas fa-link"></i></a><a href="#实现Runnable接口-方式二" class="headerlink" title="实现Runnable接口(方式二)"></a>实现Runnable接口(方式二)</h3>
      <ol>
<li>写法一</li>
</ol>
<ul>
<li>子类MyRun</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRun</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 书写线程要执行的代码</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 多线程的第二种启动方式</span></span><br><span class="line"><span class="comment">        * 1. 自定义一个类实现Runnable接口</span></span><br><span class="line"><span class="comment">        * 2. 重写run方法</span></span><br><span class="line"><span class="comment">        * 3. 创建自己的类的对象</span></span><br><span class="line"><span class="comment">        * 4. 创建一个Thread类的对象，并开启线程</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建MyRun对象</span></span><br><span class="line">        <span class="type">MyRun</span> <span class="variable">mr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyRun</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建线程对象</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(mr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启线程</span></span><br><span class="line">        t1.start(); <span class="comment">// 输出：Hello World!Hello World!</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ol start="2">
<li>写法二</li>
</ol>
<ul>
<li>子类MyRun</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRun</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 书写线程要执行的代码</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">            <span class="comment">// 获取当前线程对象</span></span><br><span class="line"><span class="comment">//            Thread t = Thread.currentThread();</span></span><br><span class="line">            System.out.print(Thread.currentThread().getName() + <span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 多线程的第二种启动方式</span></span><br><span class="line"><span class="comment">        * 1. 自定义一个类实现Runnable接口</span></span><br><span class="line"><span class="comment">        * 2. 重写run方法</span></span><br><span class="line"><span class="comment">        * 3. 创建自己的类的对象</span></span><br><span class="line"><span class="comment">        * 4. 创建一个Thread类的对象，并开启线程</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建MyRun对象</span></span><br><span class="line">        <span class="type">MyRun</span> <span class="variable">mr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyRun</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建线程对象</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(mr);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(mr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置线程名称</span></span><br><span class="line">        t1.setName(<span class="string">&quot;线程1&quot;</span>);</span><br><span class="line">        t2.setName(<span class="string">&quot;线程2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启线程</span></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出：线程1Hello World!线程1Hello World!线程2Hello World!线程2Hello World!</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="利用Callable接口和Future接口-方式三"   >
          <a href="#利用Callable接口和Future接口-方式三" class="heading-link"><i class="fas fa-link"></i></a><a href="#利用Callable接口和Future接口-方式三" class="headerlink" title="利用Callable接口和Future接口(方式三)"></a>利用Callable接口和Future接口(方式三)</h3>
      <ul>
<li>MyCallable类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyCallable</span> <span class="keyword">implements</span> <span class="title class_">Callable</span>&lt;Integer&gt; &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 求1-5的和</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutionException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.FutureTask;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 多线程的第三种实现方式</span></span><br><span class="line"><span class="comment">        * 特点：可以获取到多线程运行的结果</span></span><br><span class="line"><span class="comment">        * 1. 创建一个类MyCallable实现Callable接口</span></span><br><span class="line"><span class="comment">        * 2. 重写抽象方法Call()，Call有返回值，表示多线程运行的结果</span></span><br><span class="line"><span class="comment">        * 3. 测试类中，创建MyCallable对象(表示多线程要执行的任务)</span></span><br><span class="line"><span class="comment">        * 4. 创建FutureTask对象(管理多线程运行的结果)</span></span><br><span class="line"><span class="comment">        * 5. 创建Thread类的对象，并启动(表示线程)</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建MyCallable对象</span></span><br><span class="line">        <span class="type">MyCallable</span> <span class="variable">mc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyCallable</span>();</span><br><span class="line">        <span class="comment">// 创建FutureTask对象</span></span><br><span class="line">        FutureTask&lt;Integer&gt; ft = <span class="keyword">new</span> <span class="title class_">FutureTask</span>&lt;Integer&gt;(mc);</span><br><span class="line">        <span class="comment">// 创建线程的对象</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(ft);</span><br><span class="line">        <span class="comment">// 启动线程</span></span><br><span class="line">        t1.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取多线程运行结果</span></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">result</span> <span class="operator">=</span> ft.get();</span><br><span class="line">        System.out.println(result); <span class="comment">// 输出：5050</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="多线程中常见的成员方法"   >
          <a href="#多线程中常见的成员方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#多线程中常见的成员方法" class="headerlink" title="多线程中常见的成员方法"></a>多线程中常见的成员方法</h2>
      
        <h3 id="getName和setName方法实现"   >
          <a href="#getName和setName方法实现" class="heading-link"><i class="fas fa-link"></i></a><a href="#getName和setName方法实现" class="headerlink" title="getName和setName方法实现"></a>getName和setName方法实现</h3>
      <ol>
<li>写法一</li>
</ol>
<ul>
<li>MyThread类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">            System.out.println(getName() + <span class="string">&quot;@&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 返回线程名称String getName()</span></span><br><span class="line"><span class="comment">        * 设置线程名称void setName(String name)</span></span><br><span class="line"><span class="comment">        * 细节：</span></span><br><span class="line"><span class="comment">        * 未设置名字的线程，存在默认名字，格式为Thread-X(X为序号，从0开始)</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1. 创建线程的对象</span></span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 开启线程</span></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">//Thread-0@0</span></span><br><span class="line">        <span class="comment">//Thread-0@1</span></span><br><span class="line">        <span class="comment">//Thread-1@0</span></span><br><span class="line">        <span class="comment">//Thread-1@1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ol start="2">
<li>写法二</li>
</ol>
<blockquote>
<p>父类的构造方法不能继承</p>
</blockquote>
<ul>
<li>MyThread类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyThread</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyThread</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">            System.out.println(getName() + <span class="string">&quot;@&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 返回线程名称String getName()</span></span><br><span class="line"><span class="comment">        * 设置线程名称void setName(String name)</span></span><br><span class="line"><span class="comment">        * 细节：</span></span><br><span class="line"><span class="comment">        * 未设置名字的线程，存在默认名字，格式为Thread-X(X为序号，从0开始)</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1. 创建线程的对象</span></span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>(<span class="string">&quot;线程1&quot;</span>);</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>(<span class="string">&quot;线程2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 开启线程</span></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">//线程1@0</span></span><br><span class="line">        <span class="comment">//线程1@1</span></span><br><span class="line">        <span class="comment">//线程2@0</span></span><br><span class="line">        <span class="comment">//线程2@1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="currentThread方法实现"   >
          <a href="#currentThread方法实现" class="heading-link"><i class="fas fa-link"></i></a><a href="#currentThread方法实现" class="headerlink" title="currentThread方法实现"></a>currentThread方法实现</h3>
      <ul>
<li>MyThread类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyThread</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyThread</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">            System.out.println(getName() + <span class="string">&quot;@&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 获取当前线程对象static Thread currentThread()</span></span><br><span class="line"><span class="comment">        * 细节：</span></span><br><span class="line"><span class="comment">        * JVM虚拟机启动后，会自动启动多条线程</span></span><br><span class="line"><span class="comment">        * 其中有一条线程就是main线程</span></span><br><span class="line"><span class="comment">        * -------------------</span></span><br><span class="line"><span class="comment">        * 让线程按指定的时间休眠，单位为毫秒static void sleep(long millis)</span></span><br><span class="line"><span class="comment">        * 细节：</span></span><br><span class="line"><span class="comment">        * 那条线程执行此方法，就提留对应时间</span></span><br><span class="line"><span class="comment">        * 方法的参数表示睡眠的时间，单位毫秒</span></span><br><span class="line"><span class="comment">        * 时间到了之后，线程会自动恢复，执行之后的其它代码</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1. 创建线程的对象</span></span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>(<span class="string">&quot;线程1&quot;</span>);</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>(<span class="string">&quot;线程2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t</span> <span class="operator">=</span> Thread.currentThread();</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> t.getName();</span><br><span class="line">        System.out.println(name);   <span class="comment">// 输出：main</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;-------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;111&quot;</span>);</span><br><span class="line">        Thread.sleep(<span class="number">5000</span>); <span class="comment">// 停留了5秒钟</span></span><br><span class="line">        System.out.println(<span class="string">&quot;222&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="线程的优先级"   >
          <a href="#线程的优先级" class="heading-link"><i class="fas fa-link"></i></a><a href="#线程的优先级" class="headerlink" title="线程的优先级"></a>线程的优先级</h3>
      
        <h4 id="线程的调度"   >
          <a href="#线程的调度" class="heading-link"><i class="fas fa-link"></i></a><a href="#线程的调度" class="headerlink" title="线程的调度"></a>线程的调度</h4>
      <ol>
<li>抢占式调度：<strong>随机性</strong></li>
<li>非抢占式调度</li>
</ol>

        <h4 id="示例"   >
          <a href="#示例" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例" class="headerlink" title="示例"></a>示例</h4>
      
        <h5 id="默认优先级：5"   >
          <a href="#默认优先级：5" class="heading-link"><i class="fas fa-link"></i></a><a href="#默认优先级：5" class="headerlink" title="默认优先级：5"></a>默认优先级：5</h5>
      <ul>
<li>MyRunnable类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRunnable</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;-&gt;&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * void setPriority(int newPriority)设置线程的优先级</span></span><br><span class="line"><span class="comment">        * int getPriority()返回线程的优先级</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建线程要执行的参数对象</span></span><br><span class="line">        <span class="type">MyRunnable</span> <span class="variable">mr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyRunnable</span>();</span><br><span class="line">        <span class="comment">// 创建线程对象</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="string">&quot;线程1&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="string">&quot;线程2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 默认优先级：5</span></span><br><span class="line">        System.out.println(t1.getPriority());   <span class="comment">// 输出：5</span></span><br><span class="line">        System.out.println(t2.getPriority());   <span class="comment">// 输出：5</span></span><br><span class="line">        <span class="comment">// main线程默认优先级：5</span></span><br><span class="line">        System.out.println(Thread.currentThread().getPriority());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="守护线程"   >
          <a href="#守护线程" class="heading-link"><i class="fas fa-link"></i></a><a href="#守护线程" class="headerlink" title="守护线程"></a>守护线程</h3>
      <ol>
<li>应用场景</li>
</ol>
<ul>
<li><p>QQ聊天窗口结束，传输文件界面随之结束</p>
</li>
<li><p>原理：线程结束，守护线程随之结束</p>
</li>
</ul>
<ol start="2">
<li>示例</li>
</ol>
<ul>
<li>MyThread类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">            System.out.println(getName() + <span class="string">&quot;@&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>MyThread02类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread02</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">            System.out.println(getName() + <span class="string">&quot;@&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * void setDaemon(boolean on)设置为守护线程</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        <span class="type">MyThread02</span> <span class="variable">t02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread02</span>();</span><br><span class="line">        t.setName(<span class="string">&quot;线程1&quot;</span>);</span><br><span class="line">        t02.setName(<span class="string">&quot;线程2&quot;</span>);</span><br><span class="line">        t02.setDaemon(<span class="literal">true</span>);</span><br><span class="line">        t.start();</span><br><span class="line">        t02.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="出让线程-礼让线程"   >
          <a href="#出让线程-礼让线程" class="heading-link"><i class="fas fa-link"></i></a><a href="#出让线程-礼让线程" class="headerlink" title="出让线程/礼让线程"></a>出让线程/礼让线程</h3>
      <ul>
<li>MyThread类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">100</span> ; i++) &#123;</span><br><span class="line">            System.out.println(getName() + <span class="string">&quot;@&quot;</span> + i);</span><br><span class="line">            <span class="comment">// 出让当前CPU的执行权</span></span><br><span class="line">            Thread.yield();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * static void yield()出让线程</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        t1.setName(<span class="string">&quot;线程1&quot;</span>);</span><br><span class="line">        t2.setName(<span class="string">&quot;线程2&quot;</span>);</span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="插入线程-插队线程"   >
          <a href="#插入线程-插队线程" class="heading-link"><i class="fas fa-link"></i></a><a href="#插入线程-插队线程" class="headerlink" title="插入线程/插队线程"></a>插入线程/插队线程</h3>
      <ul>
<li>MyThread类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">100</span> ; i++) &#123;</span><br><span class="line">            System.out.println(getName() + <span class="string">&quot;@&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * void join() 插入线程</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        t.setName(<span class="string">&quot;线程1&quot;</span>);</span><br><span class="line">        t.start();</span><br><span class="line"></span><br><span class="line">        t.join();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 执行在main线程中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;main线程&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="线程的生命周期"   >
          <a href="#线程的生命周期" class="heading-link"><i class="fas fa-link"></i></a><a href="#线程的生命周期" class="headerlink" title="线程的生命周期"></a>线程的生命周期</h2>
      <p>略</p>

        <h2 id="线程安全的问题"   >
          <a href="#线程安全的问题" class="heading-link"><i class="fas fa-link"></i></a><a href="#线程安全的问题" class="headerlink" title="线程安全的问题"></a>线程安全的问题</h2>
      <blockquote>
<p>问题1：相同的票出现多次<br>原因1：线程在执行时，有随机性<br>问题2：出现了超出范围的票<br>原因2：线程在执行时，有随机性</p>
</blockquote>
<ul>
<li>MyThread类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">ticket</span> <span class="operator">=</span> <span class="number">0</span>;  <span class="comment">// 表示这个类所有的对象，都共享ticket数据</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(ticket &lt; <span class="number">100</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">100</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">                ticket++;</span><br><span class="line">                System.out.println(getName() + <span class="string">&quot;正在卖第&quot;</span> + ticket + <span class="string">&quot;张票！&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 共100张电影票，在3个窗口进行售卖</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建线程对象</span></span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// setName</span></span><br><span class="line">        t1.setName(<span class="string">&quot;Win01&quot;</span>);</span><br><span class="line">        t2.setName(<span class="string">&quot;Win02&quot;</span>);</span><br><span class="line">        t3.setName(<span class="string">&quot;Win03&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启线程</span></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="同步代码块"   >
          <a href="#同步代码块" class="heading-link"><i class="fas fa-link"></i></a><a href="#同步代码块" class="headerlink" title="同步代码块"></a>同步代码块</h2>
      <blockquote>
<p>把操作共享数据的代码锁上<br>特点1：锁默认打开，有一个线程时，锁自动关闭<br>特点2：当中所有代码执行完毕，线程退出，锁自动打开</p>
</blockquote>
<ul>
<li>MyThread类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">ticket</span> <span class="operator">=</span> <span class="number">0</span>;  <span class="comment">// 表示这个类所有的对象，都共享ticket数据</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 锁对象必须唯一</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="comment">// 同步代码块</span></span><br><span class="line">            <span class="keyword">synchronized</span> (obj)&#123;</span><br><span class="line">                <span class="keyword">if</span>(ticket &lt; <span class="number">100</span>)&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Thread.sleep(<span class="number">10</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    ticket++;</span><br><span class="line">                    System.out.println(getName() + <span class="string">&quot;正在卖第&quot;</span> + ticket + <span class="string">&quot;张票！&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 共100张电影票，在3个窗口进行售卖</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建线程对象</span></span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// setName</span></span><br><span class="line">        t1.setName(<span class="string">&quot;Win01&quot;</span>);</span><br><span class="line">        t2.setName(<span class="string">&quot;Win02&quot;</span>);</span><br><span class="line">        t3.setName(<span class="string">&quot;Win03&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启线程</span></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<blockquote>
<p>同步代码块的锁对象必须唯一</p>
</blockquote>
<ul>
<li>MyThread类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">ticket</span> <span class="operator">=</span> <span class="number">0</span>;  <span class="comment">// 表示这个类所有的对象，都共享ticket数据</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="comment">// 同步代码块</span></span><br><span class="line">            <span class="keyword">synchronized</span> (MyThread.class)&#123;  <span class="comment">// 锁对象必须唯一</span></span><br><span class="line">                <span class="keyword">if</span>(ticket &lt; <span class="number">100</span>)&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Thread.sleep(<span class="number">10</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    ticket++;</span><br><span class="line">                    System.out.println(getName() + <span class="string">&quot;正在卖第&quot;</span> + ticket + <span class="string">&quot;张票！&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 共100张电影票，在3个窗口进行售卖</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建线程对象</span></span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// setName</span></span><br><span class="line">        t1.setName(<span class="string">&quot;Win01&quot;</span>);</span><br><span class="line">        t2.setName(<span class="string">&quot;Win02&quot;</span>);</span><br><span class="line">        t3.setName(<span class="string">&quot;Win03&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启线程</span></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="同步方法"   >
          <a href="#同步方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#同步方法" class="headerlink" title="同步方法"></a>同步方法</h2>
      <blockquote>
<p>把synchronized关键字加到方法上</p>
</blockquote>
<ul>
<li>MyRunnable类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRunnable</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">ticket</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1.循环</span></span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="comment">// 2.同步代码块(同步方法)</span></span><br><span class="line">                <span class="keyword">if</span> (method()) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">synchronized</span> <span class="type">boolean</span> <span class="title function_">method</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 3.判断共享数据是否到了末尾</span></span><br><span class="line">        <span class="keyword">if</span>(ticket == <span class="number">100</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 4.如果共享数据没有到达末尾</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">10</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            ticket++;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;在卖第&quot;</span> + ticket + <span class="string">&quot;张票！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 共100张电影票，在3个窗口进行售卖</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="type">MyRunnable</span> <span class="variable">mr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyRunnable</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(mr);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(mr);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(mr);</span><br><span class="line"></span><br><span class="line">        t1.setName(<span class="string">&quot;Win01&quot;</span>);</span><br><span class="line">        t2.setName(<span class="string">&quot;Win02&quot;</span>);</span><br><span class="line">        t3.setName(<span class="string">&quot;Win03&quot;</span>);</span><br><span class="line"></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="Lock锁"   >
          <a href="#Lock锁" class="heading-link"><i class="fas fa-link"></i></a><a href="#Lock锁" class="headerlink" title="Lock锁"></a>Lock锁</h2>
      <ul>
<li>MyThread类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Lock;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">ticket</span> <span class="operator">=</span> <span class="number">0</span>;  <span class="comment">// 表示这个类所有的对象，都共享ticket数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">Lock</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReentrantLock</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="comment">// 同步代码块</span></span><br><span class="line">            lock.lock();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(ticket &lt; <span class="number">100</span>)&#123;</span><br><span class="line">                        Thread.sleep(<span class="number">10</span>);</span><br><span class="line">                    ticket++;</span><br><span class="line">                    System.out.println(getName() + <span class="string">&quot;正在卖第&quot;</span> + ticket + <span class="string">&quot;张票！&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                lock.unlock();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 共100张电影票，在3个窗口进行售卖</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="type">MyRunnable</span> <span class="variable">mr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyRunnable</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(mr);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(mr);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(mr);</span><br><span class="line"></span><br><span class="line">        t1.setName(<span class="string">&quot;Win01&quot;</span>);</span><br><span class="line">        t2.setName(<span class="string">&quot;Win02&quot;</span>);</span><br><span class="line">        t3.setName(<span class="string">&quot;Win03&quot;</span>);</span><br><span class="line"></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="等待唤醒机制-生产者和消费者"   >
          <a href="#等待唤醒机制-生产者和消费者" class="heading-link"><i class="fas fa-link"></i></a><a href="#等待唤醒机制-生产者和消费者" class="headerlink" title="等待唤醒机制(生产者和消费者)"></a>等待唤醒机制(生产者和消费者)</h2>
      <ul>
<li>Cook类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Cook</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (Desk.lock)&#123;</span><br><span class="line">                <span class="keyword">if</span>(Desk.count == <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(Desk.foodFlag == <span class="number">1</span>)&#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            Desk.lock.wait();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;Cook!&quot;</span>);</span><br><span class="line">                        Desk.foodFlag = <span class="number">1</span>;</span><br><span class="line">                        Desk.lock.notifyAll();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>Foodie类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Foodie</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">synchronized</span>(Desk.lock)&#123;</span><br><span class="line">                <span class="keyword">if</span>(Desk.count == <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(Desk.foodFlag == <span class="number">0</span>)&#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            Desk.lock.wait();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        Desk.count--;</span><br><span class="line">                        System.out.println(<span class="string">&quot;还剩&quot;</span> + Desk.count + <span class="string">&quot;！&quot;</span>);</span><br><span class="line">                        Desk.lock.notifyAll();</span><br><span class="line">                        Desk.foodFlag = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>Desk类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Desk</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">foodFlag</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 总个数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="comment">// 锁对象</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">Object</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建线程对象</span></span><br><span class="line">        <span class="type">Cook</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cook</span>();</span><br><span class="line">        <span class="type">Foodie</span> <span class="variable">f</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Foodie</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置名字</span></span><br><span class="line">        c.setName(<span class="string">&quot;Cook&quot;</span>);</span><br><span class="line">        f.setName(<span class="string">&quot;Foodie&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启线程</span></span><br><span class="line">        c.start();</span><br><span class="line">        f.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="阻塞队列实现等待唤醒机制"   >
          <a href="#阻塞队列实现等待唤醒机制" class="heading-link"><i class="fas fa-link"></i></a><a href="#阻塞队列实现等待唤醒机制" class="headerlink" title="阻塞队列实现等待唤醒机制"></a>阻塞队列实现等待唤醒机制</h2>
      
        <h3 id="接口"   >
          <a href="#接口" class="heading-link"><i class="fas fa-link"></i></a><a href="#接口" class="headerlink" title="接口"></a>接口</h3>
      <ol>
<li>Iterable</li>
<li>Collection</li>
<li>Queue</li>
<li>BlockingQueue</li>
</ol>

        <h3 id="实现类"   >
          <a href="#实现类" class="heading-link"><i class="fas fa-link"></i></a><a href="#实现类" class="headerlink" title="实现类"></a>实现类</h3>
      
        <h4 id="ArrayBlockingQueue"   >
          <a href="#ArrayBlockingQueue" class="heading-link"><i class="fas fa-link"></i></a><a href="#ArrayBlockingQueue" class="headerlink" title="ArrayBlockingQueue"></a>ArrayBlockingQueue</h4>
      <ul>
<li>底层是数组，有界</li>
</ul>

        <h4 id="LinkedBlockingQueue"   >
          <a href="#LinkedBlockingQueue" class="heading-link"><i class="fas fa-link"></i></a><a href="#LinkedBlockingQueue" class="headerlink" title="LinkedBlockingQueue"></a>LinkedBlockingQueue</h4>
      <ul>
<li>底层是链表，最大为int的最大值</li>
</ul>

        <h3 id="应用示例"   >
          <a href="#应用示例" class="heading-link"><i class="fas fa-link"></i></a><a href="#应用示例" class="headerlink" title="应用示例"></a>应用示例</h3>
      <ul>
<li>Cook类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.ArrayBlockingQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Cook</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    ArrayBlockingQueue queue;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Cook</span><span class="params">(ArrayBlockingQueue queue)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.queue = queue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                queue.put(<span class="string">&quot;Food!&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;Cooking!&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>Foodie类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.ArrayBlockingQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Foodie</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    ArrayBlockingQueue queue;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Foodie</span><span class="params">(ArrayBlockingQueue queue)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.queue = queue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">Object</span> <span class="variable">food</span> <span class="operator">=</span> queue.take();</span><br><span class="line">                System.out.println(food);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.ArrayBlockingQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 利用阻塞队列完成等待唤醒机制</span></span><br><span class="line"><span class="comment">        * 细节：生产者和消费者必须使用同一个阻塞队列</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建阻塞队列的对象</span></span><br><span class="line">        ArrayBlockingQueue&lt;String&gt; queue = <span class="keyword">new</span> <span class="title class_">ArrayBlockingQueue</span>&lt;&gt;(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 2.创建线程的对象，并传递阻塞队列</span></span><br><span class="line">        <span class="type">Cook</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cook</span>(queue);</span><br><span class="line">        <span class="type">Foodie</span> <span class="variable">f</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Foodie</span>(queue);</span><br><span class="line">        <span class="comment">// 3.开启线程</span></span><br><span class="line">        c.start();</span><br><span class="line">        f.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="线程池"   >
          <a href="#线程池" class="heading-link"><i class="fas fa-link"></i></a><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h2>
      
        <h3 id="newCachedThreadPool"   >
          <a href="#newCachedThreadPool" class="heading-link"><i class="fas fa-link"></i></a><a href="#newCachedThreadPool" class="headerlink" title="newCachedThreadPool()"></a>newCachedThreadPool()</h3>
      <ul>
<li>MyRunnable类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRunnable</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;-&gt;&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThreadPool</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.获取线程池对象</span></span><br><span class="line">        <span class="type">ExecutorService</span> <span class="variable">pool1</span> <span class="operator">=</span> Executors.newCachedThreadPool();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.提交任务</span></span><br><span class="line">        pool1.submit(<span class="keyword">new</span> <span class="title class_">MyRunnable</span>());</span><br><span class="line">        pool1.submit(<span class="keyword">new</span> <span class="title class_">MyRunnable</span>());</span><br><span class="line">        pool1.submit(<span class="keyword">new</span> <span class="title class_">MyRunnable</span>());</span><br><span class="line">        pool1.submit(<span class="keyword">new</span> <span class="title class_">MyRunnable</span>());</span><br><span class="line">        pool1.submit(<span class="keyword">new</span> <span class="title class_">MyRunnable</span>());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.销毁线程池</span></span><br><span class="line">        pool1.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="最大并行数"   >
          <a href="#最大并行数" class="heading-link"><i class="fas fa-link"></i></a><a href="#最大并行数" class="headerlink" title="最大并行数"></a>最大并行数</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThreadPool</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 向Java虚拟机返回可用处理器的数目</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> Runtime.getRuntime().availableProcessors();</span><br><span class="line">        System.out.println(count);  <span class="comment">// 输出：4</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>多线程</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-异常</title>
    <url>/2024/10/16/Java-%E5%BC%82%E5%B8%B8/</url>
    <content><![CDATA[
        <h1 id="异常"   >
          <a href="#异常" class="heading-link"><i class="fas fa-link"></i></a><a href="#异常" class="headerlink" title="异常"></a>异常</h1>
      
        <h2 id="异常体系介绍"   >
          <a href="#异常体系介绍" class="heading-link"><i class="fas fa-link"></i></a><a href="#异常体系介绍" class="headerlink" title="异常体系介绍"></a>异常体系介绍</h2>
      <ul>
<li>Exception异常就是代表程序出现的问题</li>
</ul>

        <h2 id="编译时异常和运行时异常"   >
          <a href="#编译时异常和运行时异常" class="heading-link"><i class="fas fa-link"></i></a><a href="#编译时异常和运行时异常" class="headerlink" title="编译时异常和运行时异常"></a>编译时异常和运行时异常</h2>
      
        <h3 id="编译时异常"   >
          <a href="#编译时异常" class="heading-link"><i class="fas fa-link"></i></a><a href="#编译时异常" class="headerlink" title="编译时异常"></a>编译时异常</h3>
      <ul>
<li><p>编译时异常直接继承于Exception,编译阶段有错误提示</p>
</li>
<li><p>在编译阶段，必须手动处理，否则代码报错</p>
</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExceptionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ParseException &#123;</span><br><span class="line">        <span class="comment">// 编译时异常</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">time</span> <span class="operator">=</span> <span class="string">&quot;2023年1月30日&quot;</span>;</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy年mm月dd日&quot;</span>);</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> sdf.parse(time);</span><br><span class="line">        System.out.println(date);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="运行时异常"   >
          <a href="#运行时异常" class="heading-link"><i class="fas fa-link"></i></a><a href="#运行时异常" class="headerlink" title="运行时异常"></a>运行时异常</h3>
      <ul>
<li>运行时异常是RuntimeException本身和子类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExceptionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 运行时异常</span></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        System.out.println(arr[<span class="number">5</span>]); <span class="comment">// 数组越界异常ArrayIndexOutOfBoundsException</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="try…catch捕获异常"   >
          <a href="#try…catch捕获异常" class="heading-link"><i class="fas fa-link"></i></a><a href="#try…catch捕获异常" class="headerlink" title="try…catch捕获异常"></a>try…catch捕获异常</h2>
      <ul>
<li>优点: 可以让程序继续往下运行</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExceptionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            System.out.println(arr[<span class="number">5</span>]);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(ArrayIndexOutOfBoundsException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;索引越界&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;end&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 输出:</span></span><br><span class="line">        <span class="comment">//索引越界</span></span><br><span class="line">        <span class="comment">//end</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExceptionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">//            System.out.println(arr[5]);</span></span><br><span class="line">            System.out.println(<span class="number">2</span>/<span class="number">0</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            System.out.println(s.equals(<span class="string">&quot;abc&quot;</span>));</span><br><span class="line">        &#125;<span class="keyword">catch</span>(ArrayIndexOutOfBoundsException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;索引越界&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(ArithmeticException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;除数不能为0&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(NullPointerException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;空指针异常&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;end&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出:</span></span><br><span class="line">        <span class="comment">//除数不能为0</span></span><br><span class="line">        <span class="comment">//end</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>父类写在下面</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExceptionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">//            System.out.println(arr[5]);</span></span><br><span class="line">            System.out.println(<span class="number">2</span>/<span class="number">0</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            System.out.println(s.equals(<span class="string">&quot;abc&quot;</span>));</span><br><span class="line">        &#125;<span class="keyword">catch</span>(ArrayIndexOutOfBoundsException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;索引越界&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(ArithmeticException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;除数不能为0&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(NullPointerException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;空指针异常&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Exception&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;end&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出:</span></span><br><span class="line">        <span class="comment">//除数不能为0</span></span><br><span class="line">        <span class="comment">//end</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExceptionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        如果try中的问题没有被捕获，最终仍交给虚拟机进行处理</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            System.out.println(arr[<span class="number">10</span>]);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(NullPointerException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;空指针异常&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;end&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="异常中常见方法"   >
          <a href="#异常中常见方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#异常中常见方法" class="headerlink" title="异常中常见方法"></a>异常中常见方法</h2>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 返回此throwable的详细消息字符串</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExceptionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(arr[<span class="number">10</span>]);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ArrayIndexOutOfBoundsException e) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> e.getMessage();</span><br><span class="line">            System.out.println(message);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;end&quot;</span>);</span><br><span class="line">        <span class="comment">// 输出:</span></span><br><span class="line">        <span class="comment">//10</span></span><br><span class="line">        <span class="comment">//end</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 返回此可抛出的简短描述</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExceptionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(arr[<span class="number">10</span>]);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ArrayIndexOutOfBoundsException e) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> e.toString();</span><br><span class="line">            System.out.println(str);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;end&quot;</span>);</span><br><span class="line">        <span class="comment">// 输出:</span></span><br><span class="line">        <span class="comment">//java.lang.ArrayIndexOutOfBoundsException: 10</span></span><br><span class="line">        <span class="comment">//end</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 把异常的错误信息输出在控制台(只打印信息，不终止程序运行)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExceptionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(arr[<span class="number">10</span>]);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ArrayIndexOutOfBoundsException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;end&quot;</span>);</span><br><span class="line">        <span class="comment">// 输出:</span></span><br><span class="line">        <span class="comment">//java.lang.ArrayIndexOutOfBoundsException: 10</span></span><br><span class="line">        <span class="comment">//	at Test.ExceptionTest.main(ExceptionTest.java:9)</span></span><br><span class="line">        <span class="comment">//end</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="抛出处理"   >
          <a href="#抛出处理" class="heading-link"><i class="fas fa-link"></i></a><a href="#抛出处理" class="headerlink" title="抛出处理"></a>抛出处理</h2>
      
        <h3 id="throws"   >
          <a href="#throws" class="heading-link"><i class="fas fa-link"></i></a><a href="#throws" class="headerlink" title="throws"></a>throws</h3>
      <ul>
<li>写在方法定义处，表示声明一个异常</li>
</ul>

        <h3 id="throw"   >
          <a href="#throw" class="heading-link"><i class="fas fa-link"></i></a><a href="#throw" class="headerlink" title="throw"></a>throw</h3>
      <ul>
<li>写在方法内，表示结束异常</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExceptionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            max = getMax(arr);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NullPointerException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;空指针异常&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ArrayIndexOutOfBoundsException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;索引越界异常&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(max);    <span class="comment">// 输出: 5</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getMax</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(arr == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="comment">// 手动创建一个异常对象</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NullPointerException</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(arr.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">// 手动创建一个异常对象</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ArrayIndexOutOfBoundsException</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i] &gt; max)&#123;</span><br><span class="line">                max = arr[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="综合练习"   >
          <a href="#综合练习" class="heading-link"><i class="fas fa-link"></i></a><a href="#综合练习" class="headerlink" title="综合练习"></a>综合练习</h2>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> name.length();</span><br><span class="line">        <span class="keyword">if</span>(len &lt; <span class="number">3</span> || len &gt; <span class="number">10</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(age &lt; <span class="number">18</span> || age &gt; <span class="number">40</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExceptionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        键盘录入学生姓名和年龄</span></span><br><span class="line"><span class="comment">        姓名长度在3-10之间</span></span><br><span class="line"><span class="comment">        年龄范围在18-40岁之间</span></span><br><span class="line"><span class="comment">        超出这个范围是异常数据不能赋值，需要重新录入直到正确为止</span></span><br><span class="line"><span class="comment">        提示:</span></span><br><span class="line"><span class="comment">        需要考虑用户在键盘录入时的所有情况</span></span><br><span class="line"><span class="comment">        比如：录入年龄时超出范围，录入年龄时录入； abc等情况</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建键盘录入对象</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.创建学生对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">stu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 3.接收学生姓名</span></span><br><span class="line">                System.out.println(<span class="string">&quot;请输入学生姓名:&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">                stu.setName(name);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 4.接收学生年龄</span></span><br><span class="line">                System.out.println(<span class="string">&quot;请输入学生年龄:&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">ageStr</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">                <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> Integer.parseInt(ageStr);</span><br><span class="line">                stu.setAge(age);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 如果所有的数据都是正确的，则跳出循环</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;年龄的格式有误，请输入数字！&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;   <span class="comment">// 可省略</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (RuntimeException e) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;姓名的长度或者年龄的范围有误!&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;   <span class="comment">// 可省略</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.打印</span></span><br><span class="line">        System.out.println(stu);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="自定义异常"   >
          <a href="#自定义异常" class="heading-link"><i class="fas fa-link"></i></a><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h2>
      
        <h3 id="步骤"   >
          <a href="#步骤" class="heading-link"><i class="fas fa-link"></i></a><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3>
      <ol>
<li>定义异常类</li>
<li>写继承关系</li>
<li>空参构造</li>
<li>带参构造</li>
</ol>

        <h3 id="学生类练习"   >
          <a href="#学生类练习" class="heading-link"><i class="fas fa-link"></i></a><a href="#学生类练习" class="headerlink" title="学生类练习"></a>学生类练习</h3>
      <ul>
<li>学生类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> name.length();</span><br><span class="line">        <span class="keyword">if</span>(len &lt; <span class="number">3</span> || len &gt; <span class="number">10</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NameFormatException</span>(name + <span class="string">&quot;格式有误，长度应该为：3-10！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(age &lt; <span class="number">18</span> || age &gt; <span class="number">40</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AgeOutOfBoundsException</span>(age + <span class="string">&quot;超出了范围！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>姓名格式异常</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NameFormatException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">NameFormatException</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">NameFormatException</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>年龄格式异常</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AgeOutOfBoundsException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">AgeOutOfBoundsException</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">AgeOutOfBoundsException</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>实现类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExceptionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        键盘录入学生姓名和年龄</span></span><br><span class="line"><span class="comment">        姓名长度在3-10之间</span></span><br><span class="line"><span class="comment">        年龄范围在18-40岁之间</span></span><br><span class="line"><span class="comment">        超出这个范围是异常数据不能赋值，需要重新录入直到正确为止</span></span><br><span class="line"><span class="comment">        提示:</span></span><br><span class="line"><span class="comment">        需要考虑用户在键盘录入时的所有情况</span></span><br><span class="line"><span class="comment">        比如：录入年龄时超出范围，录入年龄时录入； abc等情况</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建键盘录入对象</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.创建学生对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">stu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 3.接收学生姓名</span></span><br><span class="line">                System.out.println(<span class="string">&quot;请输入学生姓名:&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">                stu.setName(name);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 4.接收学生年龄</span></span><br><span class="line">                System.out.println(<span class="string">&quot;请输入学生年龄:&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">ageStr</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">                <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> Integer.parseInt(ageStr);</span><br><span class="line">                stu.setAge(age);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 如果所有的数据都是正确的，则跳出循环</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                <span class="keyword">continue</span>;   <span class="comment">// 可省略</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (NameFormatException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                <span class="keyword">continue</span>;   <span class="comment">// 可省略</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (AgeOutOfBoundsException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                <span class="keyword">continue</span>;   <span class="comment">// 可省略</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.打印</span></span><br><span class="line">        System.out.println(stu);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Exception</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-方法引用</title>
    <url>/2024/10/16/Java-%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8/</url>
    <content><![CDATA[
        <h1 id="Java-方法引用"   >
          <a href="#Java-方法引用" class="heading-link"><i class="fas fa-link"></i></a><a href="#Java-方法引用" class="headerlink" title="Java-方法引用"></a>Java-方法引用</h1>
      
        <h2 id="方法引用概述"   >
          <a href="#方法引用概述" class="heading-link"><i class="fas fa-link"></i></a><a href="#方法引用概述" class="headerlink" title="方法引用概述"></a>方法引用概述</h2>
      
        <h3 id="匿名内部类"   >
          <a href="#匿名内部类" class="heading-link"><i class="fas fa-link"></i></a><a href="#匿名内部类" class="headerlink" title="匿名内部类"></a>匿名内部类</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] arr = &#123;<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//  匿名内部类</span></span><br><span class="line">        Arrays.sort(arr, <span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;Integer&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Integer o1, Integer o2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> o2 - o1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        System.out.println(Arrays.toString(arr));   <span class="comment">// 输出: [6, 5, 4, 3, 2, 1]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="lamda表达式"   >
          <a href="#lamda表达式" class="heading-link"><i class="fas fa-link"></i></a><a href="#lamda表达式" class="headerlink" title="lamda表达式"></a>lamda表达式</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] arr = &#123;<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// lambda表达式</span></span><br><span class="line">        Arrays.sort(arr,(Integer o1, Integer o2) -&gt; &#123;</span><br><span class="line">            <span class="keyword">return</span> o2 - o1;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        System.out.println(Arrays.toString(arr));   <span class="comment">// 输出: [6, 5, 4, 3, 2, 1]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="lamda表达式简化格式"   >
          <a href="#lamda表达式简化格式" class="heading-link"><i class="fas fa-link"></i></a><a href="#lamda表达式简化格式" class="headerlink" title="lamda表达式简化格式"></a>lamda表达式简化格式</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] arr = &#123;<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// lambda表达式简化格式</span></span><br><span class="line">        Arrays.sort(arr,(o1, o2) -&gt; o2 - o1);</span><br><span class="line"></span><br><span class="line">        System.out.println(Arrays.toString(arr));   <span class="comment">// 输出: [6, 5, 4, 3, 2, 1]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="方法引用"   >
          <a href="#方法引用" class="heading-link"><i class="fas fa-link"></i></a><a href="#方法引用" class="headerlink" title="方法引用"></a>方法引用</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] arr = &#123;<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 方法引用</span></span><br><span class="line">        Arrays.sort(arr,FunctionTest::subtraction);</span><br><span class="line"></span><br><span class="line">        System.out.println(Arrays.toString(arr));   <span class="comment">// 输出: [6, 5, 4, 3, 2, 1]</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">subtraction</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> num2 - num1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="方法引用分类"   >
          <a href="#方法引用分类" class="heading-link"><i class="fas fa-link"></i></a><a href="#方法引用分类" class="headerlink" title="方法引用分类"></a>方法引用分类</h2>
      
        <h3 id="引用静态方法"   >
          <a href="#引用静态方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#引用静态方法" class="headerlink" title="引用静态方法"></a>引用静态方法</h3>
      <ul>
<li>匿名内部类写法</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Function;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        需求: 把集合中的“1”，“2”，“3”都变成int类型</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>);</span><br><span class="line"></span><br><span class="line">        list.stream().map(<span class="keyword">new</span> <span class="title class_">Function</span>&lt;String, Integer&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> Integer <span class="title function_">apply</span><span class="params">(String s)</span> &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> Integer.parseInt(s);</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).forEach(s -&gt; System.out.print(s));   <span class="comment">// 输出: 123</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>方法引用写法</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        需求: 把集合中的“1”，“2”，“3”都变成int类型</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>);</span><br><span class="line"></span><br><span class="line">        list.stream()</span><br><span class="line">                .map(Integer::parseInt)</span><br><span class="line">                .forEach(s -&gt; System.out.print(s)); <span class="comment">// 输出: 123</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="引用成员方法"   >
          <a href="#引用成员方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#引用成员方法" class="headerlink" title="引用成员方法"></a>引用成员方法</h3>
      <blockquote>
<p>本类或父类的引用处不能是静态方法</p>
</blockquote>

        <h4 id="引用其它类的成员方法"   >
          <a href="#引用其它类的成员方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#引用其它类的成员方法" class="headerlink" title="引用其它类的成员方法"></a>引用其它类的成员方法</h4>
      <ul>
<li>写法一</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        需求:</span></span><br><span class="line"><span class="comment">        集合中的名字进行过滤数据操作</span></span><br><span class="line"><span class="comment">        以“张”开头，并且名字是3个字的</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;张一&quot;</span>,<span class="string">&quot;张二二&quot;</span>,<span class="string">&quot;张三三三&quot;</span>);</span><br><span class="line">        list.stream()</span><br><span class="line">                .filter(s -&gt; s.startsWith(<span class="string">&quot;张&quot;</span>))</span><br><span class="line">                .filter(s -&gt; s.length() == <span class="number">3</span>)</span><br><span class="line">                .forEach(s -&gt; System.out.print(s)); <span class="comment">// 输出: 张二二</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>写法二(匿名内部类)</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Predicate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        需求:</span></span><br><span class="line"><span class="comment">        集合中的名字进行过滤数据操作</span></span><br><span class="line"><span class="comment">        以“张”开头，并且名字是3个字的</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;张一&quot;</span>,<span class="string">&quot;张二二&quot;</span>,<span class="string">&quot;张三三三&quot;</span>);</span><br><span class="line"></span><br><span class="line">        list.stream().filter(<span class="keyword">new</span> <span class="title class_">Predicate</span>&lt;String&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">test</span><span class="params">(String s)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> s.startsWith(<span class="string">&quot;张&quot;</span>) &amp;&amp; s.length() == <span class="number">3</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).forEach(s -&gt; System.out.print(s));   <span class="comment">// 输出: 张二二</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>写法三(引用其它类的成员方法)</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringOperation</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">stringJudge</span><span class="params">(String s)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> s.startsWith(<span class="string">&quot;张&quot;</span>) &amp;&amp; s.length() == <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        需求:</span></span><br><span class="line"><span class="comment">        集合中的名字进行过滤数据操作</span></span><br><span class="line"><span class="comment">        以“张”开头，并且名字是3个字的</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;张一&quot;</span>,<span class="string">&quot;张二二&quot;</span>,<span class="string">&quot;张三三三&quot;</span>);</span><br><span class="line"></span><br><span class="line">        list.stream()</span><br><span class="line">                .filter(<span class="keyword">new</span> <span class="title class_">StringOperation</span>()::stringJudge)</span><br><span class="line">                .forEach(s -&gt; System.out.print(s)); <span class="comment">// 输出: 张二二</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="引用本类的成员方法"   >
          <a href="#引用本类的成员方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#引用本类的成员方法" class="headerlink" title="引用本类的成员方法"></a>引用本类的成员方法</h4>
      
        <h4 id="引用父类的成员方法"   >
          <a href="#引用父类的成员方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#引用父类的成员方法" class="headerlink" title="引用父类的成员方法"></a>引用父类的成员方法</h4>
      
        <h3 id="引用构造方法"   >
          <a href="#引用构造方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#引用构造方法" class="headerlink" title="引用构造方法"></a>引用构造方法</h3>
      
        <h3 id="其它调用方式"   >
          <a href="#其它调用方式" class="heading-link"><i class="fas fa-link"></i></a><a href="#其它调用方式" class="headerlink" title="其它调用方式"></a>其它调用方式</h3>
      
        <h4 id="类名引用成员方法"   >
          <a href="#类名引用成员方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#类名引用成员方法" class="headerlink" title="类名引用成员方法"></a>类名引用成员方法</h4>
      <ul>
<li>匿名内部类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Function;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        将集合中的字符串变成大写后输出</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 匿名内部类</span></span><br><span class="line">        list.stream().map(<span class="keyword">new</span> <span class="title class_">Function</span>&lt;String, String&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> String <span class="title function_">apply</span><span class="params">(String s)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> s.toUpperCase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).forEach(s -&gt; System.out.print(s));   <span class="comment">// 输出: ABC</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>方法引用</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        将集合中的字符串变成大写后输出</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 方法引用</span></span><br><span class="line">        list.stream()</span><br><span class="line">                .map(String::toUpperCase)</span><br><span class="line">                .forEach(s -&gt; System.out.print(s)); <span class="comment">// 输出: ABC</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="引用数组的构造方法"   >
          <a href="#引用数组的构造方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#引用数组的构造方法" class="headerlink" title="引用数组的构造方法"></a>引用数组的构造方法</h4>
      <ul>
<li>匿名内部类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.function.IntFunction;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        集合中存储一些整数，收集到数组中</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 匿名内部类</span></span><br><span class="line">        Integer[] arr = list.stream().toArray(<span class="keyword">new</span> <span class="title class_">IntFunction</span>&lt;Integer[]&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> Integer[] apply(<span class="type">int</span> value) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Integer</span>[value];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        System.out.println(Arrays.toString(arr));   <span class="comment">// 输出: [1, 2, 3, 4, 5]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>方法引用</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        集合中存储一些整数，收集到数组中</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 方法引用</span></span><br><span class="line">        Integer[] arr = list.stream().toArray(Integer[]::<span class="keyword">new</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(Arrays.toString(arr));   <span class="comment">// 输出: [1, 2, 3, 4, 5]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="方法引用练习"   >
          <a href="#方法引用练习" class="heading-link"><i class="fas fa-link"></i></a><a href="#方法引用练习" class="headerlink" title="方法引用练习"></a>方法引用练习</h2>
      
        <h3 id="转成自定义对象并收集到数组"   >
          <a href="#转成自定义对象并收集到数组" class="heading-link"><i class="fas fa-link"></i></a><a href="#转成自定义对象并收集到数组" class="headerlink" title="转成自定义对象并收集到数组"></a>转成自定义对象并收集到数组</h3>
      <ul>
<li>Student类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String str)</span>&#123;</span><br><span class="line">        String[] arr = str.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.name = arr[<span class="number">0</span>];</span><br><span class="line">        <span class="built_in">this</span>.age = Integer.parseInt(arr[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        集合中存储一些字符串的数据，比如: 张三，21</span></span><br><span class="line"><span class="comment">        收集到Student类型的数组当中(使用方法引用)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(list,<span class="string">&quot;张三,21&quot;</span>,<span class="string">&quot;李四,22&quot;</span>,<span class="string">&quot;王五,23&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Student[] arr = list.stream()</span><br><span class="line">                .map(Student::<span class="keyword">new</span>)</span><br><span class="line">                .toArray(Student[]::<span class="keyword">new</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">        <span class="comment">// 输出: [Student&#123;name=&#x27;张三&#x27;, age=21&#125;, Student&#123;name=&#x27;李四&#x27;, age=22&#125;, Student&#123;name=&#x27;王五&#x27;, age=23&#125;]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="获取部分属性并收集到数组"   >
          <a href="#获取部分属性并收集到数组" class="heading-link"><i class="fas fa-link"></i></a><a href="#获取部分属性并收集到数组" class="headerlink" title="获取部分属性并收集到数组"></a>获取部分属性并收集到数组</h3>
      <ul>
<li>匿名内部类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Function;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        创建集合添加学生对象</span></span><br><span class="line"><span class="comment">        学生对象属性: name,age</span></span><br><span class="line"><span class="comment">        获取姓名并放到数组中，使用方法引用完成</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Student&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Tom&quot;</span>,<span class="number">21</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;John&quot;</span>,<span class="number">22</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Simon&quot;</span>,<span class="number">23</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 匿名内部类</span></span><br><span class="line">        String[] arr = list.stream().map(<span class="keyword">new</span> <span class="title class_">Function</span>&lt;Student, String&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> String <span class="title function_">apply</span><span class="params">(Student student)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> student.getName();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).toArray(String[]::<span class="keyword">new</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(Arrays.toString(arr));   <span class="comment">// 输出: [Tom, John, Simon]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>方法引用</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        创建集合添加学生对象</span></span><br><span class="line"><span class="comment">        学生对象属性: name,age</span></span><br><span class="line"><span class="comment">        获取姓名并放到数组中，使用方法引用完成</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Student&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Tom&quot;</span>,<span class="number">21</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;John&quot;</span>,<span class="number">22</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Simon&quot;</span>,<span class="number">23</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 方法引用</span></span><br><span class="line">        String[] arr = list.stream().map(Student::getName).toArray(String[]::<span class="keyword">new</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(Arrays.toString(arr));   <span class="comment">// 输出: [Tom, John, Simon]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>方法引用</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-集合框架</title>
    <url>/2024/10/16/Java-%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[
        <h1 id="集合框架"   >
          <a href="#集合框架" class="heading-link"><i class="fas fa-link"></i></a><a href="#集合框架" class="headerlink" title="集合框架"></a>集合框架</h1>
      <p>Java中提供了很多集合类、接口和算法类，作为一个整体称为集合框架。</p>
<p>集合框架中有两个顶层接口，所有的集合类都是这两个接口的实现类型；</p>
<ul>
<li>Collection：存储元素</li>
<li>Map：key-value</li>
</ul>
<p>集合中存储的是对象的引用</p>

        <h2 id="Collection接口"   >
          <a href="#Collection接口" class="heading-link"><i class="fas fa-link"></i></a><a href="#Collection接口" class="headerlink" title="Collection接口"></a>Collection接口</h2>
      
        <h3 id="概述"   >
          <a href="#概述" class="heading-link"><i class="fas fa-link"></i></a><a href="#概述" class="headerlink" title="概述"></a>概述</h3>
      <ol>
<li>Collection集合是一个管理一组对象的单一对象，在集合内的对象称之为元素(element)。</li>
<li>Collection接口是List，Set，Queue接口的父接口</li>
</ol>
<ul>
<li>List：<strong>元素有序、可重复</strong></li>
<li>Set：<strong>元素无序、不可重复</strong></li>
<li>Queue：元素先进先出</li>
</ul>

        <h2 id="List接口"   >
          <a href="#List接口" class="heading-link"><i class="fas fa-link"></i></a><a href="#List接口" class="headerlink" title="List接口"></a>List接口</h2>
      
        <h3 id="概述-1"   >
          <a href="#概述-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3>
      <p>List代表一个<strong>元素有序、且可重复</strong>的集合，每个元素都有其顺序索引。</p>

        <h3 id="示例一"   >
          <a href="#示例一" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一" class="headerlink" title="示例一"></a>示例一</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        <span class="comment">// 添加元素</span></span><br><span class="line">        list.add(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;John&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取位置i上的元素</span></span><br><span class="line">        System.out.println(list.get(<span class="number">1</span>));    <span class="comment">// 输出：Simon</span></span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="comment">// 插入元素</span></span><br><span class="line">        list.add(<span class="number">0</span>,<span class="string">&quot;Amy&quot;</span>);</span><br><span class="line">        System.out.println(list);   <span class="comment">// 输出：[Amy, Tom, Simon, John]</span></span><br><span class="line">        <span class="comment">// 是否含有某个元素</span></span><br><span class="line">        System.out.println(list.contains(<span class="string">&quot;Tom&quot;</span>));   <span class="comment">// 输出：true</span></span><br><span class="line">        System.out.println(list.contains(<span class="string">&quot;Jack&quot;</span>));   <span class="comment">// 输出：false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="ArrayList接口"   >
          <a href="#ArrayList接口" class="heading-link"><i class="fas fa-link"></i></a><a href="#ArrayList接口" class="headerlink" title="ArrayList接口"></a>ArrayList接口</h2>
      <p>动态数组</p>

        <h3 id="示例一-1"   >
          <a href="#示例一-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一-1" class="headerlink" title="示例一"></a>示例一</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">List</span> <span class="variable">list01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        <span class="type">List</span> <span class="variable">list02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        list01.add(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        list01.add(<span class="string">&quot;Jack&quot;</span>);</span><br><span class="line">        list01.add(<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line">        System.out.println(list01); <span class="comment">// 输出：[Tom, Jack, Simon]</span></span><br><span class="line">        list02.add(<span class="string">&quot;HongKong&quot;</span>);</span><br><span class="line">        list02.add(<span class="string">&quot;Singapore&quot;</span>);</span><br><span class="line">        System.out.println(list02); <span class="comment">// 输出：[HongKong, Singapore]</span></span><br><span class="line">        list02.addAll(<span class="number">0</span>,list01);</span><br><span class="line">        System.out.println(list02); <span class="comment">// 输出：[Tom, Jack, Simon, HongKong, Singapore]</span></span><br><span class="line">        System.out.println(list01.size());  <span class="comment">// 输出：3</span></span><br><span class="line">        System.out.println(list02.size());  <span class="comment">// 输出：5</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="示例二"   >
          <a href="#示例二" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例二" class="headerlink" title="示例二"></a>示例二</h3>
      <ul>
<li>Person类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;Person&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Person&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Tom&quot;</span>,<span class="number">20</span>));</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Simon&quot;</span>,<span class="number">21</span>);</span><br><span class="line">        list.add(p);</span><br><span class="line">        System.out.println(list);   <span class="comment">// 输出：[Person&#123;name=Tom,age=20&#125;, Person&#123;name=Simon,age=21&#125;]</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Person</span> <span class="variable">p1</span> <span class="operator">=</span> (Person)list.get(<span class="number">0</span>);</span><br><span class="line">        System.out.println(p1.getName() + <span class="string">&quot;,&quot;</span> + p1.getAge());   <span class="comment">// 输出：Tom,20</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断数组中是否包含某个元素(方法一)</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(Object obj : list)&#123;</span><br><span class="line">            <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> (Person)obj;</span><br><span class="line">            <span class="keyword">if</span>(person.getName().equals(<span class="string">&quot;Tom&quot;</span>))&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;True: &quot;</span> + person.getName() + <span class="string">&quot;,&quot;</span> + person.getAge() + <span class="string">&quot;!&quot;</span>);</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;False!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 输出：True: Tom,20!</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断数组中是否包含某个元素(方法二)</span></span><br><span class="line">        <span class="keyword">if</span>(list.contains(p))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;True: &quot;</span> + p.getName() + <span class="string">&quot;,&quot;</span> + p.getAge() + <span class="string">&quot;!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 输出：True: Simon,21!</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="集合中的泛型"   >
          <a href="#集合中的泛型" class="heading-link"><i class="fas fa-link"></i></a><a href="#集合中的泛型" class="headerlink" title="集合中的泛型"></a>集合中的泛型</h2>
      <p>泛型指的是数据类型的参数化</p>
<p>作用：</p>
<ul>
<li>类型安全</li>
<li>消除强制类型转换</li>
</ul>

        <h2 id="Collections算法类"   >
          <a href="#Collections算法类" class="heading-link"><i class="fas fa-link"></i></a><a href="#Collections算法类" class="headerlink" title="Collections算法类"></a>Collections算法类</h2>
      <p>两个主要的算法类：</p>
<ul>
<li>Collections-用于处理集合的算法类</li>
<li>Arrays-用于处理数组的算法类</li>
</ul>

        <h3 id="示例一-2"   >
          <a href="#示例一-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一-2" class="headerlink" title="示例一"></a>示例一</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        list.add(<span class="number">2</span>);</span><br><span class="line">        list.add(<span class="number">31</span>);</span><br><span class="line">        list.add(<span class="number">51</span>);</span><br><span class="line">        list.add(<span class="number">11</span>);</span><br><span class="line">        System.out.println(list);   <span class="comment">// 输出：[2, 31, 51, 11]</span></span><br><span class="line">        <span class="comment">// 排序</span></span><br><span class="line">        Collections.sort(list);</span><br><span class="line">        System.out.println(list);   <span class="comment">// 输出：[2, 11, 31, 51]</span></span><br><span class="line">        <span class="comment">// 翻转</span></span><br><span class="line">        Collections.reverse(list);</span><br><span class="line">        System.out.println(list);   <span class="comment">// 输出：[51, 31, 11, 2]</span></span><br><span class="line">        <span class="comment">// 乱序</span></span><br><span class="line">        Collections.shuffle(list);</span><br><span class="line">        System.out.println(list);   <span class="comment">// 输出：[11, 51, 2, 31]</span></span><br><span class="line">        <span class="comment">// 获取最大值元素</span></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">max</span> <span class="operator">=</span> Collections.max(list);</span><br><span class="line">        System.out.println(max);    <span class="comment">// 输出：51</span></span><br><span class="line">        <span class="comment">// 获取最小值元素</span></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">min</span> <span class="operator">=</span> Collections.min(list);</span><br><span class="line">        System.out.println(min);    <span class="comment">// 输出：2</span></span><br><span class="line">        <span class="comment">// 清空</span></span><br><span class="line">        list.clear();</span><br><span class="line">        System.out.println(list);   <span class="comment">// 输出：[]</span></span><br><span class="line">        Collections.addAll(list,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line">        System.out.println(list);   <span class="comment">// 输出：[1, 2, 3, 4]</span></span><br><span class="line">        <span class="comment">// 二分查找</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> Collections.binarySearch(list, <span class="number">1</span>);</span><br><span class="line">        System.out.println(i);  <span class="comment">// 输出：0</span></span><br><span class="line">        <span class="comment">// 复制(要求：原数组的长度小于目标数组)</span></span><br><span class="line">        List&lt;Integer&gt; list2 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line">        list2.add(<span class="number">100</span>);</span><br><span class="line">        list2.add(<span class="number">99</span>);</span><br><span class="line">        System.out.println(list2);  <span class="comment">// 输出：[100, 99]</span></span><br><span class="line">        System.out.println(list);   <span class="comment">// 输出：[1, 2, 3, 4]</span></span><br><span class="line">        Collections.copy(list,list2);</span><br><span class="line">        System.out.println(list);   <span class="comment">// 输出：[100, 99, 3, 4]</span></span><br><span class="line">        <span class="comment">// disjoint没有相同的元素，则返回true</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">d</span> <span class="operator">=</span> Collections.disjoint(list, list2);</span><br><span class="line">        System.out.println(d);  <span class="comment">// 输出：false</span></span><br><span class="line">        <span class="comment">// fill使用指定元素替换指定列表中的所有元素</span></span><br><span class="line">        Collections.fill(list,<span class="number">10</span>);</span><br><span class="line">        System.out.println(list);   <span class="comment">// 输出：[10, 10, 10, 10]</span></span><br><span class="line">        <span class="comment">// swap交换</span></span><br><span class="line">        Collections.swap(list2,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">        System.out.println(list2);  <span class="comment">// 输出：[99, 100]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="Arrays算法类"   >
          <a href="#Arrays算法类" class="heading-link"><i class="fas fa-link"></i></a><a href="#Arrays算法类" class="headerlink" title="Arrays算法类"></a>Arrays算法类</h2>
      
        <h3 id="示例一-3"   >
          <a href="#示例一-3" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一-3" class="headerlink" title="示例一"></a>示例一</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;String&gt; names = Arrays.asList(<span class="string">&quot;Tom&quot;</span>,<span class="string">&quot;Jack&quot;</span>,<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line">        System.out.println(names);  <span class="comment">// 输出：[Tom, Jack, Simon]</span></span><br><span class="line">        <span class="type">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>&#125;;</span><br><span class="line">        <span class="comment">// copyOf复制指定的数组</span></span><br><span class="line">        <span class="type">int</span>[] newArray = Arrays.copyOf(array,<span class="number">3</span>);</span><br><span class="line">        System.out.println(Arrays.toString(array)); <span class="comment">// 输出：[1, 4, 5, 7, 8]</span></span><br><span class="line">        System.out.println(Arrays.toString(newArray));  <span class="comment">// 输出：[1, 4, 5]</span></span><br><span class="line">        <span class="comment">// copyOfRange指定范围复制</span></span><br><span class="line">        <span class="type">int</span>[] array01 = Arrays.copyOfRange(array,<span class="number">3</span>,<span class="number">5</span>);</span><br><span class="line">        System.out.println(Arrays.toString(array01));   <span class="comment">// 输出：[7, 8]</span></span><br><span class="line">        <span class="comment">// 排序</span></span><br><span class="line">        Arrays.sort(array);</span><br><span class="line">        System.out.println(Arrays.toString(array));   <span class="comment">// 输出：[1, 4, 5, 7, 8]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="Comparable接口"   >
          <a href="#Comparable接口" class="heading-link"><i class="fas fa-link"></i></a><a href="#Comparable接口" class="headerlink" title="Comparable接口"></a>Comparable接口</h2>
      <p>Comparable是自然排序的接口</p>

        <h3 id="示例一-按学生成绩排序，只看成绩"   >
          <a href="#示例一-按学生成绩排序，只看成绩" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一-按学生成绩排序，只看成绩" class="headerlink" title="示例一 按学生成绩排序，只看成绩"></a>示例一 按学生成绩排序，只看成绩</h3>
      <ul>
<li>Student类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">implements</span> <span class="title class_">Comparable</span>&lt;Student&gt;&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">int</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getScore</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setScore</span><span class="params">(<span class="type">int</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, score=&quot;</span> + score +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(Student o)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.score - o.score;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;Student&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Student&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Jack&quot;</span>,<span class="number">20</span>,<span class="number">90</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Simon&quot;</span>,<span class="number">21</span>,<span class="number">91</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Tony&quot;</span>,<span class="number">22</span>,<span class="number">92</span>));</span><br><span class="line">        System.out.println(list);   <span class="comment">// 输出：[Student&#123;name=&#x27;Jack&#x27;, age=20, score=90&#125;, Student&#123;name=&#x27;Simon&#x27;, age=21, score=91&#125;, Student&#123;name=&#x27;Tony&#x27;, age=22, score=92&#125;]</span></span><br><span class="line">        <span class="comment">// 排序(升序)</span></span><br><span class="line">        Collections.sort(list);</span><br><span class="line">        <span class="keyword">for</span>(Student s : list)&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">//Student&#123;name=&#x27;Jack&#x27;, age=20, score=90&#125;</span></span><br><span class="line">        <span class="comment">//Student&#123;name=&#x27;Simon&#x27;, age=21, score=91&#125;</span></span><br><span class="line">        <span class="comment">//Student&#123;name=&#x27;Tony&#x27;, age=22, score=92&#125;</span></span><br><span class="line">        <span class="comment">// 排序(降序)</span></span><br><span class="line">        Collections.reverse(list);</span><br><span class="line">        <span class="keyword">for</span>(Student s : list)&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 输出 ：</span></span><br><span class="line">        <span class="comment">//Student&#123;name=&#x27;Tony&#x27;, age=22, score=92&#125;</span></span><br><span class="line">        <span class="comment">//Student&#123;name=&#x27;Simon&#x27;, age=21, score=91&#125;</span></span><br><span class="line">        <span class="comment">//Student&#123;name=&#x27;Jack&#x27;, age=20, score=90&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="示例二-成绩相同，年龄升序"   >
          <a href="#示例二-成绩相同，年龄升序" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例二-成绩相同，年龄升序" class="headerlink" title="示例二 成绩相同，年龄升序"></a>示例二 成绩相同，年龄升序</h3>
      <ul>
<li>Student类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">implements</span> <span class="title class_">Comparable</span>&lt;Student&gt;&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">int</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getScore</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setScore</span><span class="params">(<span class="type">int</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, score=&quot;</span> + score +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(Student o)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.score == o.score)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.age - o.age;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.score - o.score;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;Student&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Student&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Jack&quot;</span>,<span class="number">20</span>,<span class="number">90</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Simon&quot;</span>,<span class="number">21</span>,<span class="number">91</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Tony&quot;</span>,<span class="number">22</span>,<span class="number">90</span>));</span><br><span class="line">        System.out.println(list);   <span class="comment">// 输出：[Student&#123;name=&#x27;Jack&#x27;, age=20, score=90&#125;, Student&#123;name=&#x27;Simon&#x27;, age=21, score=91&#125;, Student&#123;name=&#x27;Tony&#x27;, age=22, score=92&#125;]</span></span><br><span class="line">        <span class="comment">// 排序(升序)</span></span><br><span class="line">        Collections.sort(list);</span><br><span class="line">        <span class="keyword">for</span>(Student s : list)&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">//Student&#123;name=&#x27;Jack&#x27;, age=20, score=90&#125;</span></span><br><span class="line">        <span class="comment">//Student&#123;name=&#x27;Tony&#x27;, age=22, score=90&#125;</span></span><br><span class="line">        <span class="comment">//Student&#123;name=&#x27;Simon&#x27;, age=21, score=91&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="Comparator接口"   >
          <a href="#Comparator接口" class="heading-link"><i class="fas fa-link"></i></a><a href="#Comparator接口" class="headerlink" title="Comparator接口"></a>Comparator接口</h2>
      
        <h3 id="示例一-按学生成绩从小到大-升序-排序，只看成绩"   >
          <a href="#示例一-按学生成绩从小到大-升序-排序，只看成绩" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一-按学生成绩从小到大-升序-排序，只看成绩" class="headerlink" title="示例一 按学生成绩从小到大(升序)排序，只看成绩"></a>示例一 按学生成绩从小到大(升序)排序，只看成绩</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(Student o)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.score - o.score;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>学生类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">implements</span> <span class="title class_">Comparable</span>&lt;Student&gt;&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">int</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getScore</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setScore</span><span class="params">(<span class="type">int</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, score=&quot;</span> + score +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(Student o)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.score - o.score;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StuTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 按学生成绩从小到大(升序)排序</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        List&lt;Student&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Student&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Tom&quot;</span>,<span class="number">20</span>,<span class="number">90</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Amy&quot;</span>,<span class="number">21</span>,<span class="number">91</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;John&quot;</span>,<span class="number">22</span>,<span class="number">92</span>));</span><br><span class="line"></span><br><span class="line">        Collections.sort(list);</span><br><span class="line">        <span class="keyword">for</span> (Student s : list) &#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">// Student&#123;name=&#x27;Tom&#x27;, age=20, score=90&#125;</span></span><br><span class="line">        <span class="comment">//Student&#123;name=&#x27;Amy&#x27;, age=21, score=91&#125;</span></span><br><span class="line">        <span class="comment">//Student&#123;name=&#x27;John&#x27;, age=22, score=92&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="示例二-按学生成绩从大到小-降序-排序，只看成绩"   >
          <a href="#示例二-按学生成绩从大到小-降序-排序，只看成绩" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例二-按学生成绩从大到小-降序-排序，只看成绩" class="headerlink" title="示例二 按学生成绩从大到小(降序)排序，只看成绩"></a>示例二 按学生成绩从大到小(降序)排序，只看成绩</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(Student o)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> o.score - <span class="built_in">this</span>.score;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>学生类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">implements</span> <span class="title class_">Comparable</span>&lt;Student&gt;&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">int</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getScore</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setScore</span><span class="params">(<span class="type">int</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, score=&quot;</span> + score +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(Student o)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> o.score - <span class="built_in">this</span>.score;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StuTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 按学生成绩从小到大(升序)排序</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        List&lt;Student&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Student&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Tom&quot;</span>,<span class="number">20</span>,<span class="number">90</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Amy&quot;</span>,<span class="number">21</span>,<span class="number">91</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;John&quot;</span>,<span class="number">22</span>,<span class="number">92</span>));</span><br><span class="line"></span><br><span class="line">        Collections.sort(list);</span><br><span class="line">        <span class="keyword">for</span> (Student s : list) &#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">//Student&#123;name=&#x27;John&#x27;, age=22, score=92&#125;</span></span><br><span class="line">        <span class="comment">//Student&#123;name=&#x27;Amy&#x27;, age=21, score=91&#125;</span></span><br><span class="line">        <span class="comment">//Student&#123;name=&#x27;Tom&#x27;, age=20, score=90&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="示例三-成绩相同，年龄升序"   >
          <a href="#示例三-成绩相同，年龄升序" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例三-成绩相同，年龄升序" class="headerlink" title="示例三 成绩相同，年龄升序"></a>示例三 成绩相同，年龄升序</h3>
      <ul>
<li>学生类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">implements</span> <span class="title class_">Comparable</span>&lt;Student&gt;&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">int</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getScore</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setScore</span><span class="params">(<span class="type">int</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, score=&quot;</span> + score +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(Student o)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.score == o.score)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.age - o.age;    <span class="comment">// 成绩相同，年龄升序</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.score - o.score;    <span class="comment">// 成绩升序</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StuTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;Student&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Student&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Tom&quot;</span>,<span class="number">20</span>,<span class="number">90</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;John&quot;</span>,<span class="number">21</span>,<span class="number">90</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Amy&quot;</span>,<span class="number">22</span>,<span class="number">92</span>));</span><br><span class="line"></span><br><span class="line">        Collections.sort(list);</span><br><span class="line">        <span class="keyword">for</span>(Student s : list)&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">//Student&#123;name=&#x27;Amy&#x27;, age=22, score=92&#125;</span></span><br><span class="line">        <span class="comment">//Student&#123;name=&#x27;Tom&#x27;, age=20, score=90&#125;</span></span><br><span class="line">        <span class="comment">//Student&#123;name=&#x27;John&#x27;, age=21, score=90&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="链表"   >
          <a href="#链表" class="heading-link"><i class="fas fa-link"></i></a><a href="#链表" class="headerlink" title="链表"></a>链表</h2>
      <p>LinkedList类是List接口的实现类<br>特点：</p>
<ul>
<li>非线程安全</li>
<li>允许元素为null，允许元素重复</li>
<li>插入删效率高，查找效率低</li>
<li>基于链表实现，不存在容量不足的问题，没有扩容方法</li>
</ul>

        <h3 id="示例一-数组插入元素所需时间"   >
          <a href="#示例一-数组插入元素所需时间" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一-数组插入元素所需时间" class="headerlink" title="示例一 数组插入元素所需时间"></a>示例一 数组插入元素所需时间</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkedListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 数组插入元素所需时间</span></span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;(<span class="number">100000</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++)&#123;</span><br><span class="line">            list.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();<span class="comment">// 获取当前时间毫秒值</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++)&#123;</span><br><span class="line">            list.add(<span class="number">0</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> System.currentTimeMillis();<span class="comment">// 获取当前时间毫秒值</span></span><br><span class="line">        System.out.println(end - start);    <span class="comment">// 输出：9</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="示例二-链表插入元素所需时间"   >
          <a href="#示例二-链表插入元素所需时间" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例二-链表插入元素所需时间" class="headerlink" title="示例二 链表插入元素所需时间"></a>示例二 链表插入元素所需时间</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkedListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 链表插入元素所需时间</span></span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)&#123;</span><br><span class="line">            list.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();<span class="comment">// 获取当前时间毫秒值</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++)&#123;</span><br><span class="line">            list.add(<span class="number">0</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> System.currentTimeMillis();<span class="comment">// 获取当前时间毫秒值</span></span><br><span class="line">        System.out.println(end - start);    <span class="comment">// 输出：3</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="Vector和Stack"   >
          <a href="#Vector和Stack" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vector和Stack" class="headerlink" title="Vector和Stack"></a>Vector和Stack</h2>
      
        <h3 id="Vector"   >
          <a href="#Vector" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vector" class="headerlink" title="Vector"></a>Vector</h3>
      <p>Array和Vector是List接口的两个典型实现</p>
<ul>
<li>Vector是过期的集合类，线程安全</li>
<li>ArrayList线程不安全</li>
</ul>

        <h3 id="Stack"   >
          <a href="#Stack" class="heading-link"><i class="fas fa-link"></i></a><a href="#Stack" class="headerlink" title="Stack"></a>Stack</h3>
      <p>作用：</p>
<ul>
<li>完成悔棋功能</li>
<li>Ps，Word的撤销功能</li>
</ul>

        <h4 id="示例一-4"   >
          <a href="#示例一-4" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一-4" class="headerlink" title="示例一"></a>示例一</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StackTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Stack&lt;String&gt; s = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;String&gt;();</span><br><span class="line">        s.push(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        s.push(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">        s.push(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">        System.out.println(s.peek());    <span class="comment">// 输出：c</span></span><br><span class="line">        System.out.println(s.pop());    <span class="comment">// 输出：c</span></span><br><span class="line">        System.out.println(s.pop());    <span class="comment">// 输出：b</span></span><br><span class="line">        System.out.println(s.pop());    <span class="comment">// 输出：a</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="Set"   >
          <a href="#Set" class="heading-link"><i class="fas fa-link"></i></a><a href="#Set" class="headerlink" title="Set"></a>Set</h2>
      <p>Set是Collection接口的子接口，是一个<strong>元素不重复</strong>的Collection，此类有3个重要的实现类：</p>
<ul>
<li>HashSet-hash</li>
<li>LinkedHashSet-有顺序</li>
<li>TreeSet-排序，内部是树</li>
</ul>

        <h3 id="HashSet"   >
          <a href="#HashSet" class="heading-link"><i class="fas fa-link"></i></a><a href="#HashSet" class="headerlink" title="HashSet"></a>HashSet</h3>
      <p>按Hash算法来存储集合中的元素，具有很好的存取和查找性能</p>
<p>特点：</p>
<ul>
<li>不能保证元素的排列顺序</li>
<li>HashSet不是线程安全的</li>
<li>集合元素可以是null</li>
</ul>

        <h4 id="示例一-32以内数字取5个"   >
          <a href="#示例一-32以内数字取5个" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一-32以内数字取5个" class="headerlink" title="示例一 32以内数字取5个"></a>示例一 32以内数字取5个</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HashSetTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 向set中存5个不重复的数(&lt;=32)</span></span><br><span class="line">        Set&lt;Integer&gt; set = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;Integer&gt;();</span><br><span class="line">        <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="keyword">while</span>(set.size() &lt; <span class="number">5</span>)&#123;</span><br><span class="line">            set.add(r.nextInt(<span class="number">32</span>) + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(set);    <span class="comment">// 输出：[4, 20, 21, 23, 9]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="示例二-不能添加重复元素"   >
          <a href="#示例二-不能添加重复元素" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例二-不能添加重复元素" class="headerlink" title="示例二 不能添加重复元素"></a>示例二 不能添加重复元素</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HashSetTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 不能添加重复元素</span></span><br><span class="line">        Set&lt;Integer&gt; set = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;Integer&gt;();</span><br><span class="line">        System.out.println(set.add(<span class="number">0</span>)); <span class="comment">// 输出：true</span></span><br><span class="line">        System.out.println(set.add(<span class="number">0</span>)); <span class="comment">// 输出：false</span></span><br><span class="line">        System.out.println(set.add(<span class="number">1</span>)); <span class="comment">// 输出：true</span></span><br><span class="line">        System.out.println(set.add(<span class="number">2</span>)); <span class="comment">// 输出：true</span></span><br><span class="line">        System.out.println(set);    <span class="comment">// 输出：[0, 1, 2]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="示例三-排列顺序无序"   >
          <a href="#示例三-排列顺序无序" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例三-排列顺序无序" class="headerlink" title="示例三 排列顺序无序"></a>示例三 排列顺序无序</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HashSetTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 排列顺序无序</span></span><br><span class="line">        Set&lt;Integer&gt; set = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;Integer&gt;();</span><br><span class="line">        Collections.addAll(set,<span class="number">1</span>,<span class="number">99</span>,<span class="number">2</span>,<span class="number">32</span>,<span class="number">28</span>);</span><br><span class="line">        System.out.println(set);    <span class="comment">// 输出：[32, 1, 2, 99, 28]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="迭代器"   >
          <a href="#迭代器" class="heading-link"><i class="fas fa-link"></i></a><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h2>
      <p>Iterator接口主要用于遍历Collection集合中的元素，Iterator也被称为迭代器</p>
<p>Iterator仅用于遍历集合</p>

        <h3 id="示例一-5"   >
          <a href="#示例一-5" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一-5" class="headerlink" title="示例一"></a>示例一</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 元素无序不重复</span></span><br><span class="line">        Set&lt;String&gt; set = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;String&gt;();</span><br><span class="line">        set.add(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;John&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取当前集合的迭代器</span></span><br><span class="line">        Iterator&lt;String&gt; it = set.iterator();</span><br><span class="line">        <span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> it.next();</span><br><span class="line">            System.out.print(s + <span class="string">&quot;,&quot;</span>);  <span class="comment">// 输出：Tom,Simon,John,</span></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="keyword">for</span>(String s : set)&#123;</span><br><span class="line">            System.out.print(s + <span class="string">&quot;,&quot;</span>);  <span class="comment">// 输出：Tom,Simon,John,</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="示例二-1"   >
          <a href="#示例二-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例二-1" class="headerlink" title="示例二"></a>示例二</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 元素无序不重复</span></span><br><span class="line">        Set&lt;String&gt; set = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;String&gt;();</span><br><span class="line">        set.add(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;John&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line">        System.out.println(set);    <span class="comment">// 输出：[Tom, Simon, John]</span></span><br><span class="line">        <span class="comment">// 获取当前集合的迭代器</span></span><br><span class="line">        Iterator&lt;String&gt; it = set.iterator();</span><br><span class="line">        <span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> it.next();</span><br><span class="line">            <span class="keyword">if</span>(s.startsWith(<span class="string">&quot;John&quot;</span>))&#123;</span><br><span class="line">                it.remove();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(set);    <span class="comment">// 输出：[Tom, Simon]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="LinkedHashSet"   >
          <a href="#LinkedHashSet" class="heading-link"><i class="fas fa-link"></i></a><a href="#LinkedHashSet" class="headerlink" title="LinkedHashSet"></a>LinkedHashSet</h2>
      <p>LinkedHashSet是HashSet的子类</p>
<p>LinkedHashSet根据元素的hashCode值来决定元素的存储位置</p>
<p>LinkedHashSet不允许集合元素重复，按存入的顺序进行排序</p>

        <h3 id="示例一-6"   >
          <a href="#示例一-6" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一-6" class="headerlink" title="示例一"></a>示例一</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.LinkedHashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Set&lt;String&gt; set = <span class="keyword">new</span> <span class="title class_">LinkedHashSet</span>&lt;String&gt;();</span><br><span class="line">        set.add(<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;John&quot;</span>);</span><br><span class="line">        System.out.println(set);    <span class="comment">// 输出：[Simon, Tom, John]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="TreeSet"   >
          <a href="#TreeSet" class="heading-link"><i class="fas fa-link"></i></a><a href="#TreeSet" class="headerlink" title="TreeSet"></a>TreeSet</h2>
      
        <h3 id="概述-2"   >
          <a href="#概述-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#概述-2" class="headerlink" title="概述"></a>概述</h3>
      <p>SortedSet是Set的子接口，具备排序的能力。</p>
<p>TreeSet是SortedSet的实现类，内部是树结构</p>

        <h3 id="示例一-具有排序功能"   >
          <a href="#示例一-具有排序功能" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一-具有排序功能" class="headerlink" title="示例一 具有排序功能"></a>示例一 具有排序功能</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.TreeSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Set&lt;String&gt; set = <span class="keyword">new</span> <span class="title class_">TreeSet</span>&lt;String&gt;();</span><br><span class="line">        set.add(<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;Amy&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;Tony&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        System.out.println(set);    <span class="comment">// 输出：[Amy, Simon, Tom, Tony]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="HashMap"   >
          <a href="#HashMap" class="heading-link"><i class="fas fa-link"></i></a><a href="#HashMap" class="headerlink" title="HashMap"></a>HashMap</h2>
      
        <h3 id="概述-3"   >
          <a href="#概述-3" class="heading-link"><i class="fas fa-link"></i></a><a href="#概述-3" class="headerlink" title="概述"></a>概述</h3>
      <p>Map用于保存具有映射关系的数据，Map集合中保存着两组值，一组值用于保存Map中的key，一组值用于保存Value</p>
<p>Map中的key和value可以是任意引用类型的数据</p>
<p>Map中的key<strong>不允许重复</strong></p>
<p>Key和value之间存在单向一对一关系</p>

        <h3 id="示例一-7"   >
          <a href="#示例一-7" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一-7" class="headerlink" title="示例一"></a>示例一</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Map&lt;Integer,String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer,String&gt;();</span><br><span class="line">        <span class="comment">// 添加数据</span></span><br><span class="line">        map.put(<span class="number">1</span>,<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        map.put(<span class="number">2</span>,<span class="string">&quot;Jack&quot;</span>);</span><br><span class="line">        map.put(<span class="number">3</span>,<span class="string">&quot;John&quot;</span>);</span><br><span class="line">        map.put(<span class="number">4</span>,<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        map.put(<span class="number">4</span>,<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        <span class="comment">// 统计元素个数</span></span><br><span class="line">        System.out.println(map.size()); <span class="comment">// 输出：4</span></span><br><span class="line">        System.out.println(map);    <span class="comment">// 输出：&#123;1=Tom, 2=Jack, 3=John, 4=Tom&#125;</span></span><br><span class="line">        <span class="comment">// 获取某个位置的元素</span></span><br><span class="line">        System.out.println(map.get(<span class="number">3</span>)); <span class="comment">// 输出：John</span></span><br><span class="line">        map.remove(<span class="number">1</span>);</span><br><span class="line">        System.out.println(map);    <span class="comment">// 输出：&#123;2=Jack, 3=John, 4=Tom&#125;</span></span><br><span class="line">        <span class="comment">// 指定键的映射boolean containsKey(Object key)</span></span><br><span class="line">        System.out.println(map.containsKey(<span class="number">4</span>)); <span class="comment">// 输出：true</span></span><br><span class="line">        System.out.println(map.containsKey(<span class="number">1</span>)); <span class="comment">// 输出：false</span></span><br><span class="line">        <span class="comment">// 清空</span></span><br><span class="line">        map.clear();</span><br><span class="line">        System.out.println(map);    <span class="comment">// 输出：&#123;&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="示例二-2"   >
          <a href="#示例二-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例二-2" class="headerlink" title="示例二"></a>示例二</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Map&lt;Integer,String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer,String&gt;();</span><br><span class="line">        map.put(<span class="number">1966</span>,<span class="string">&quot;英格兰&quot;</span>);</span><br><span class="line">        map.put(<span class="number">2002</span>,<span class="string">&quot;巴西&quot;</span>);</span><br><span class="line">        map.put(<span class="number">1998</span>,<span class="string">&quot;法国&quot;</span>);</span><br><span class="line">        map.put(<span class="number">1990</span>,<span class="string">&quot;德国&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">year</span> <span class="operator">=</span> <span class="number">1990</span>;</span><br><span class="line">        <span class="keyword">if</span>(!map.containsKey(year))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;没有举办世界杯&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;冠军是-&gt;&quot;</span> + map.get(year)); <span class="comment">// 输出：冠军是-&gt;德国</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="示例三"   >
          <a href="#示例三" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例三" class="headerlink" title="示例三"></a>示例三</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Map&lt;String,Integer[]&gt; worldCup = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String,Integer[]&gt;();</span><br><span class="line">        worldCup.put(<span class="string">&quot;巴西&quot;</span>,<span class="keyword">new</span> <span class="title class_">Integer</span>[]&#123;<span class="number">1934</span>,<span class="number">1994</span>,<span class="number">2002</span>&#125;);</span><br><span class="line">        worldCup.put(<span class="string">&quot;英格兰&quot;</span>,<span class="keyword">new</span> <span class="title class_">Integer</span>[]&#123;<span class="number">1966</span>&#125;);</span><br><span class="line">        worldCup.put(<span class="string">&quot;西班牙&quot;</span>,<span class="keyword">new</span> <span class="title class_">Integer</span>[]&#123;<span class="number">2010</span>&#125;);</span><br><span class="line">        <span class="comment">// 法国</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">c</span> <span class="operator">=</span> <span class="string">&quot;法国&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(worldCup.containsKey(c))&#123;</span><br><span class="line">            System.out.println(Arrays.toString(worldCup.get(c)));</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;null&quot;</span>);</span><br><span class="line">        &#125;   <span class="comment">// 输出：null</span></span><br><span class="line">        <span class="comment">// 巴西</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">z</span> <span class="operator">=</span> <span class="string">&quot;巴西&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(worldCup.containsKey(z))&#123;</span><br><span class="line">            System.out.println(Arrays.toString(worldCup.get(z)));</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;null&quot;</span>);</span><br><span class="line">        &#125;   <span class="comment">// 输出：[1934, 1994, 2002]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="示例四-遍历集合"   >
          <a href="#示例四-遍历集合" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例四-遍历集合" class="headerlink" title="示例四 遍历集合"></a>示例四 遍历集合</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Map&lt;Integer,String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer,String&gt;();</span><br><span class="line">        <span class="comment">// 添加元素</span></span><br><span class="line">        map.put(<span class="number">1</span>,<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        map.put(<span class="number">2</span>,<span class="string">&quot;Tony&quot;</span>);</span><br><span class="line">        map.put(<span class="number">3</span>,<span class="string">&quot;John&quot;</span>);</span><br><span class="line">        <span class="comment">// 如何遍历集合(1)KeySet</span></span><br><span class="line">        Set&lt;Integer&gt; set = map.keySet();</span><br><span class="line">        System.out.println(set);    <span class="comment">// 输出：[1, 2, 3]</span></span><br><span class="line">        <span class="keyword">for</span>(Integer k : set)&#123;</span><br><span class="line">            System.out.println(k + <span class="string">&quot;:&quot;</span> + map.get(k));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">//1:Tom</span></span><br><span class="line">        <span class="comment">//2:Tony</span></span><br><span class="line">        <span class="comment">//3:John</span></span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="comment">// 如何遍历集合(2)values</span></span><br><span class="line">        Collection&lt;String&gt; coll = map.values();</span><br><span class="line">        <span class="keyword">for</span>(String s : coll)&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">//Tom</span></span><br><span class="line">        <span class="comment">//Tony</span></span><br><span class="line">        <span class="comment">//John</span></span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="comment">// 如何遍历集合(3)key-value</span></span><br><span class="line">        Set&lt;Map.Entry&lt;Integer, String&gt;&gt; entries = map.entrySet();</span><br><span class="line">        System.out.println(entries);    <span class="comment">// 输出：[1=Tom, 2=Tony, 3=John]</span></span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;Integer,String&gt; e : entries)&#123;</span><br><span class="line">            System.out.println(e.getKey() + <span class="string">&quot;:&quot;</span> + e.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">//1:Tom</span></span><br><span class="line">        <span class="comment">//2:Tony</span></span><br><span class="line">        <span class="comment">//3:John</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="TreeMap"   >
          <a href="#TreeMap" class="heading-link"><i class="fas fa-link"></i></a><a href="#TreeMap" class="headerlink" title="TreeMap"></a>TreeMap</h2>
      
        <h3 id="概述-4"   >
          <a href="#概述-4" class="heading-link"><i class="fas fa-link"></i></a><a href="#概述-4" class="headerlink" title="概述"></a>概述</h3>
      <p>SortedMap接口：<br>按照key的值进行全排序的Map接口，可以使用元素的自然排序或比较器进行排序</p>
<p>TreeMap内部采用红黑树实现</p>

        <h3 id="示例一-8"   >
          <a href="#示例一-8" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例一-8" class="headerlink" title="示例一"></a>示例一</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        TreeMap&lt;Integer,String&gt; tm = <span class="keyword">new</span> <span class="title class_">TreeMap</span>&lt;Integer,String&gt;();</span><br><span class="line">        <span class="comment">// 添加元素</span></span><br><span class="line">        tm.put(<span class="number">1</span>,<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        tm.put(<span class="number">7</span>,<span class="string">&quot;John&quot;</span>);</span><br><span class="line">        tm.put(<span class="number">5</span>,<span class="string">&quot;Amy&quot;</span>);</span><br><span class="line">        tm.put(<span class="number">2</span>,<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line">        tm.put(<span class="number">2</span>,<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line">        System.out.println(tm); <span class="comment">// 输出：&#123;1=Tom, 2=Simon, 5=Amy, 7=John&#125;</span></span><br><span class="line">        System.out.println(tm.headMap(<span class="number">5</span>));  <span class="comment">// 输出：&#123;1=Tom, 2=Simon&#125;</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="示例二-3"   >
          <a href="#示例二-3" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例二-3" class="headerlink" title="示例二"></a>示例二</h3>
      <blockquote>
<p>键: 整数表示id<br>值: 字符串表示商品名称<br>要求: 1.按照id的升序排列;2.按照id的降序排列</p>
</blockquote>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.TreeMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 升序排序</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建集合对象</span></span><br><span class="line">        TreeMap&lt;Integer,String&gt; tm = <span class="keyword">new</span> <span class="title class_">TreeMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.添加元素</span></span><br><span class="line">        tm.put(<span class="number">1</span>,<span class="string">&quot;KFC&quot;</span>);</span><br><span class="line">        tm.put(<span class="number">3</span>,<span class="string">&quot;Sprite&quot;</span>);</span><br><span class="line">        tm.put(<span class="number">2</span>,<span class="string">&quot;Mcdonald&#x27;s&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.打印集合</span></span><br><span class="line">        System.out.println(tm); <span class="comment">// 输出: &#123;1=KFC, 2=Mcdonald&#x27;s, 3=Sprite&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.util.TreeMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 降序排序</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建集合对象</span></span><br><span class="line">        TreeMap&lt;Integer,String&gt; tm = <span class="keyword">new</span> <span class="title class_">TreeMap</span>&lt;&gt;(<span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;Integer&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Integer o1, Integer o2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> o2 - o1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.添加元素</span></span><br><span class="line">        tm.put(<span class="number">1</span>,<span class="string">&quot;KFC&quot;</span>);</span><br><span class="line">        tm.put(<span class="number">3</span>,<span class="string">&quot;Sprite&quot;</span>);</span><br><span class="line">        tm.put(<span class="number">2</span>,<span class="string">&quot;Mcdonald&#x27;s&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.打印集合</span></span><br><span class="line">        System.out.println(tm); <span class="comment">// 输出: &#123;3=Sprite, 2=Mcdonald&#x27;s, 1=KFC&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="示例三-1"   >
          <a href="#示例三-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例三-1" class="headerlink" title="示例三"></a>示例三</h3>
      <blockquote>
<p>键: 学生对象<br>值: 籍贯<br>要求: 按照学生年龄的升序排序，年龄一样按照姓名的字母排序，同姓名年龄视为同一个人</p>
</blockquote>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.TreeMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.创建集合</span></span><br><span class="line">        TreeMap&lt;Student,String&gt; tm = <span class="keyword">new</span> <span class="title class_">TreeMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.创建三个学生对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Tom&quot;</span>,<span class="number">20</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;John&quot;</span>,<span class="number">23</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Simon&quot;</span>,<span class="number">21</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.添加元素</span></span><br><span class="line">        tm.put(s1,<span class="string">&quot;江苏&quot;</span>);</span><br><span class="line">        tm.put(s2,<span class="string">&quot;浙江&quot;</span>);</span><br><span class="line">        tm.put(s3,<span class="string">&quot;福建&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.打印集合</span></span><br><span class="line">        System.out.println(tm);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出: &#123;Student&#123;name=&#x27;Tom&#x27;, age=20&#125;=江苏, Student&#123;name=&#x27;Simon&#x27;, age=21&#125;=福建, Student&#123;name=&#x27;John&#x27;, age=23&#125;=浙江&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="示例四-统计个数案例"   >
          <a href="#示例四-统计个数案例" class="heading-link"><i class="fas fa-link"></i></a><a href="#示例四-统计个数案例" class="headerlink" title="示例四 统计个数案例"></a>示例四 统计个数案例</h3>
      <blockquote>
<p>统计字符串”aaaaabbbbcccdde”中每一个字符出现的次数，并按以下格式输出结果: a(5)b(4)c(3)d(2)e(1)</p>
</blockquote>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.TreeMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.定义字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;aaaaabbbbcccdde&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.创建集合</span></span><br><span class="line">        TreeMap&lt;Character,Integer&gt; tm = <span class="keyword">new</span> <span class="title class_">TreeMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.遍历字符串得到每一个字符</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length(); i++)&#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span>(tm.containsKey(c))&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> tm.get(c);</span><br><span class="line">                count++;</span><br><span class="line">                tm.put(c,count);</span><br><span class="line">            &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                tm.put(c,<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.遍历集合，并按指定的格式进行拼接(StringBuilder拼接)</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        </span><br><span class="line">        tm.forEach((key, value) -&gt; sb.append(key).append(<span class="string">&quot;(&quot;</span>).append(value).append(<span class="string">&quot;)&quot;</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(sb); <span class="comment">// 输出: a(5)b(4)c(3)d(2)e(1)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.StringJoiner;</span><br><span class="line"><span class="keyword">import</span> java.util.TreeMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.定义字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;aaaaabbbbcccdde&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.创建集合</span></span><br><span class="line">        TreeMap&lt;Character,Integer&gt; tm = <span class="keyword">new</span> <span class="title class_">TreeMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.遍历字符串得到每一个字符</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length(); i++)&#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span>(tm.containsKey(c))&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> tm.get(c);</span><br><span class="line">                count++;</span><br><span class="line">                tm.put(c,count);</span><br><span class="line">            &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                tm.put(c,<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.遍历集合，并按指定的格式进行拼接(StringJoiner拼接)</span></span><br><span class="line">        <span class="type">StringJoiner</span> <span class="variable">sj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringJoiner</span>(<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        tm.forEach((key,value) -&gt; sj.add(key + <span class="string">&quot;&quot;</span>).add(<span class="string">&quot;(&quot;</span>).add(value + <span class="string">&quot;&quot;</span>).add(<span class="string">&quot;)&quot;</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(sj); <span class="comment">// 输出: a(5)b(4)c(3)d(2)e(1)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>集合</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWebJDBC</title>
    <url>/2024/10/16/JavaWebJDBC/</url>
    <content><![CDATA[
        <h1 id="JDBC-连接"   >
          <a href="#JDBC-连接" class="heading-link"><i class="fas fa-link"></i></a><a href="#JDBC-连接" class="headerlink" title="JDBC 连接"></a>JDBC 连接</h1>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> src.jdbc.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.Driver;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: DriverTest</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Ron Rao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2023/12/11 20:46</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DriverTest</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> <span class="keyword">throws</span> SQLException&#123;</span><br><span class="line">        <span class="type">Driver</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">com</span>.mysql.cj.jdbc.Driver();</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://127.0.0.1:3306/jdbc&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">info</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        info.setProperty(<span class="string">&quot;user&quot;</span>,<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        info.setProperty(<span class="string">&quot;password&quot;</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> driver.connect(url,info);</span><br><span class="line">        System.out.println(connection);</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure>
]]></content>
      <categories>
        <category>JDBC</category>
      </categories>
      <tags>
        <tag>JDBC</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-AWT-LayoutManager</title>
    <url>/2024/10/16/LayoutManager/</url>
    <content><![CDATA[
        <h1 id="LayoutManager"   >
          <a href="#LayoutManager" class="heading-link"><i class="fas fa-link"></i></a><a href="#LayoutManager" class="headerlink" title="LayoutManager"></a>LayoutManager</h1>
      
        <h2 id="FlowLayout"   >
          <a href="#FlowLayout" class="heading-link"><i class="fas fa-link"></i></a><a href="#FlowLayout" class="headerlink" title="FlowLayout"></a>FlowLayout</h2>
      
        <h3 id="左对齐"   >
          <a href="#左对齐" class="heading-link"><i class="fas fa-link"></i></a><a href="#左对齐" class="headerlink" title="左对齐"></a>左对齐</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FlowLayoutDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试FlowLayout&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.通过setLayout方法设置容器的布局管理器</span></span><br><span class="line">        frame.setLayout(<span class="keyword">new</span> <span class="title class_">FlowLayout</span>(FlowLayout.LEFT,<span class="number">20</span>,<span class="number">20</span>));</span><br><span class="line">        <span class="comment">// 2.添加多个按钮到frame中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">            frame.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;按钮&quot;</span> + i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 3.设置最佳大小,pack方法</span></span><br><span class="line">        frame.pack();</span><br><span class="line"></span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="中间对齐"   >
          <a href="#中间对齐" class="heading-link"><i class="fas fa-link"></i></a><a href="#中间对齐" class="headerlink" title="中间对齐"></a>中间对齐</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FlowLayoutDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试FlowLayout&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.通过setLayout方法设置容器的布局管理器</span></span><br><span class="line">        frame.setLayout(<span class="keyword">new</span> <span class="title class_">FlowLayout</span>(FlowLayout.CENTER,<span class="number">20</span>,<span class="number">20</span>));</span><br><span class="line">        <span class="comment">// 2.添加多个按钮到frame中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">            frame.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;按钮&quot;</span> + i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 3.设置最佳大小,pack方法</span></span><br><span class="line">        frame.pack();</span><br><span class="line"></span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="右对齐"   >
          <a href="#右对齐" class="heading-link"><i class="fas fa-link"></i></a><a href="#右对齐" class="headerlink" title="右对齐"></a>右对齐</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FlowLayoutDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试FlowLayout&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.通过setLayout方法设置容器的布局管理器</span></span><br><span class="line">        frame.setLayout(<span class="keyword">new</span> <span class="title class_">FlowLayout</span>(FlowLayout.RIGHT,<span class="number">20</span>,<span class="number">20</span>));</span><br><span class="line">        <span class="comment">// 2.添加多个按钮到frame中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">            frame.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;按钮&quot;</span> + i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 3.设置最佳大小,pack方法</span></span><br><span class="line">        frame.pack();</span><br><span class="line"></span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="BorderLayout"   >
          <a href="#BorderLayout" class="heading-link"><i class="fas fa-link"></i></a><a href="#BorderLayout" class="headerlink" title="BorderLayout"></a>BorderLayout</h2>
      
        <h3 id="添加五个按钮"   >
          <a href="#添加五个按钮" class="heading-link"><i class="fas fa-link"></i></a><a href="#添加五个按钮" class="headerlink" title="添加五个按钮"></a>添加五个按钮</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BorderLayoutDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试BorderLayout&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.给frame设置BorderLayout布局管理器</span></span><br><span class="line">        frame.setLayout(<span class="keyword">new</span> <span class="title class_">BorderLayout</span>(<span class="number">30</span>,<span class="number">10</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.往frame的指定区域添加组件</span></span><br><span class="line">        frame.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;北部按钮&quot;</span>),BorderLayout.NORTH);</span><br><span class="line">        frame.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;南部按钮&quot;</span>),BorderLayout.SOUTH);</span><br><span class="line">        frame.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;西部按钮&quot;</span>),BorderLayout.WEST);</span><br><span class="line">        frame.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;东部按钮&quot;</span>),BorderLayout.EAST);</span><br><span class="line">        frame.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;中部按钮&quot;</span>),BorderLayout.CENTER);</span><br><span class="line"></span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="添加测试文本框"   >
          <a href="#添加测试文本框" class="heading-link"><i class="fas fa-link"></i></a><a href="#添加测试文本框" class="headerlink" title="添加测试文本框"></a>添加测试文本框</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BorderLayoutDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试BorderLayout&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.给frame设置BorderLayout布局管理器</span></span><br><span class="line">        frame.setLayout(<span class="keyword">new</span> <span class="title class_">BorderLayout</span>(<span class="number">30</span>,<span class="number">10</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.往frame的指定区域添加组件</span></span><br><span class="line">        frame.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;北部按钮&quot;</span>),BorderLayout.NORTH);</span><br><span class="line">        frame.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;南部按钮&quot;</span>),BorderLayout.SOUTH);</span><br><span class="line">        frame.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;中部按钮&quot;</span>),BorderLayout.CENTER);</span><br><span class="line"></span><br><span class="line">        frame.add(<span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">&quot;测试文本框&quot;</span>));</span><br><span class="line"></span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="中部按钮与测试文本框并存"   >
          <a href="#中部按钮与测试文本框并存" class="heading-link"><i class="fas fa-link"></i></a><a href="#中部按钮与测试文本框并存" class="headerlink" title="中部按钮与测试文本框并存"></a>中部按钮与测试文本框并存</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BorderLayoutDemo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试BorderLayout&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.给frame设置BorderLayout布局管理器</span></span><br><span class="line">        frame.setLayout(<span class="keyword">new</span> <span class="title class_">BorderLayout</span>(<span class="number">30</span>,<span class="number">10</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.往frame的指定区域添加组件</span></span><br><span class="line">        frame.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;北部按钮&quot;</span>),BorderLayout.NORTH);</span><br><span class="line">        frame.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;南部按钮&quot;</span>),BorderLayout.SOUTH);</span><br><span class="line">        <span class="type">Panel</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Panel</span>();</span><br><span class="line">        p.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;中部按钮&quot;</span>));</span><br><span class="line">        p.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;测试文本框&quot;</span>));</span><br><span class="line"></span><br><span class="line">        frame.add(p);</span><br><span class="line"></span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="GridLayout"   >
          <a href="#GridLayout" class="heading-link"><i class="fas fa-link"></i></a><a href="#GridLayout" class="headerlink" title="GridLayout"></a>GridLayout</h2>
      
        <h3 id="模拟计算器"   >
          <a href="#模拟计算器" class="heading-link"><i class="fas fa-link"></i></a><a href="#模拟计算器" class="headerlink" title="模拟计算器"></a>模拟计算器</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GridLayoutDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;计算器&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建一个panel对象，当中存放一个TextField组件</span></span><br><span class="line">        <span class="type">Panel</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Panel</span>();</span><br><span class="line">        p.add(<span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="number">30</span>));</span><br><span class="line">        <span class="comment">// 2.把当前按钮添加到frame的北部区域</span></span><br><span class="line">        frame.add(p,BorderLayout.NORTH);</span><br><span class="line">        <span class="comment">// 3.创建一个panel对象，并设置布局管理器为GridLayout</span></span><br><span class="line">        <span class="type">Panel</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Panel</span>();</span><br><span class="line">        p2.setLayout(<span class="keyword">new</span> <span class="title class_">GridLayout</span>(<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">4</span>));</span><br><span class="line">        <span class="comment">// 4.往panel中添加内容</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            p2.add(<span class="keyword">new</span> <span class="title class_">Button</span>(i + <span class="string">&quot;&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        p2.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;+&quot;</span>));</span><br><span class="line">        p2.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;-&quot;</span>));</span><br><span class="line">        p2.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;*&quot;</span>));</span><br><span class="line">        p2.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;/&quot;</span>));</span><br><span class="line">        p2.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">        p2.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;=&quot;</span>));</span><br><span class="line">        <span class="comment">// 5.把当前panel添加到frame中</span></span><br><span class="line">        frame.add(p2);</span><br><span class="line"></span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="CardLayout"   >
          <a href="#CardLayout" class="heading-link"><i class="fas fa-link"></i></a><a href="#CardLayout" class="headerlink" title="CardLayout"></a>CardLayout</h2>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CardLayoutDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试CardLayout&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建一个panel，用来存储多张卡片</span></span><br><span class="line">        <span class="type">Panel</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Panel</span>();</span><br><span class="line">        <span class="comment">// 2.创建卡片布局对象，并且把该对象设置给之前创建的容器</span></span><br><span class="line">        <span class="type">CardLayout</span> <span class="variable">cardLayout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CardLayout</span>();</span><br><span class="line">        p1.setLayout(cardLayout);</span><br><span class="line">        <span class="comment">// 3.往panel中存储多个组件</span></span><br><span class="line">        String[] names = &#123;<span class="string">&quot;第一张&quot;</span>,<span class="string">&quot;第二张&quot;</span>,<span class="string">&quot;第三张&quot;</span>,<span class="string">&quot;第四张&quot;</span>,<span class="string">&quot;第五张&quot;</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; names.length; i++) &#123;</span><br><span class="line">            p1.add(names[i],<span class="keyword">new</span> <span class="title class_">Button</span>(names[i]));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 4.把panel放到frame中间区域</span></span><br><span class="line">        frame.add(p1);</span><br><span class="line">        <span class="comment">// 5.创建另外一个panel p2，用来存储多个按钮组件</span></span><br><span class="line">        <span class="type">Panel</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Panel</span>();</span><br><span class="line">        <span class="comment">// 6.创建五个按钮组件</span></span><br><span class="line">        <span class="type">Button</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;上一张&quot;</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;下一张&quot;</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">b3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;第一张&quot;</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">b4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;最后一张&quot;</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">b5</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;第三张&quot;</span>);</span><br><span class="line">        <span class="comment">// 7.创建一个事件监听器，监听按钮的点击动作</span></span><br><span class="line">        <span class="type">ActionListener</span> <span class="variable">listener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">actionCommand</span> <span class="operator">=</span> e.getActionCommand();    <span class="comment">// 这个字符串就是按钮上的文字</span></span><br><span class="line">                <span class="keyword">switch</span>(actionCommand)&#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&quot;上一张&quot;</span>:</span><br><span class="line">                        cardLayout.previous(p1);</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&quot;下一张&quot;</span>:</span><br><span class="line">                        cardLayout.next(p1);</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&quot;第一张&quot;</span>:</span><br><span class="line">                        cardLayout.first(p1);</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&quot;最后一张&quot;</span>:</span><br><span class="line">                        cardLayout.last(p1);</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&quot;第三张&quot;</span>:</span><br><span class="line">                        cardLayout.show(p1,<span class="string">&quot;第三张&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 8.把当前这个监听器和多个按钮绑定在一起</span></span><br><span class="line">        b1.addActionListener(listener);</span><br><span class="line">        b2.addActionListener(listener);</span><br><span class="line">        b3.addActionListener(listener);</span><br><span class="line">        b4.addActionListener(listener);</span><br><span class="line">        b5.addActionListener(listener);</span><br><span class="line">        <span class="comment">// 9.把按钮添加到容器p2中</span></span><br><span class="line">        p2.add(b1);</span><br><span class="line">        p2.add(b2);</span><br><span class="line">        p2.add(b3);</span><br><span class="line">        p2.add(b4);</span><br><span class="line">        p2.add(b5);</span><br><span class="line">        <span class="comment">// 10.把p2放到frame的南边区域</span></span><br><span class="line">        frame.add(p2,BorderLayout.SOUTH);</span><br><span class="line"></span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="BoxLayout"   >
          <a href="#BoxLayout" class="heading-link"><i class="fas fa-link"></i></a><a href="#BoxLayout" class="headerlink" title="BoxLayout"></a>BoxLayout</h2>
      
        <h3 id="按钮垂直存放"   >
          <a href="#按钮垂直存放" class="heading-link"><i class="fas fa-link"></i></a><a href="#按钮垂直存放" class="headerlink" title="按钮垂直存放"></a>按钮垂直存放</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BoxLayoutDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试BoxLayout&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.基于frame容器创建一个BoxLayout对象，并且该对象组件是垂直存放</span></span><br><span class="line">        <span class="type">BoxLayout</span> <span class="variable">boxLayout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BoxLayout</span>(frame,BoxLayout.Y_AXIS);</span><br><span class="line">        <span class="comment">// 2.把BoxLayout设置给frame</span></span><br><span class="line">        frame.setLayout(boxLayout);</span><br><span class="line">        <span class="comment">// 3.往frame中添加两个按钮组件</span></span><br><span class="line">        frame.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;按钮1&quot;</span>));</span><br><span class="line">        frame.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;按钮2&quot;</span>));</span><br><span class="line">        </span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="按钮水平存放"   >
          <a href="#按钮水平存放" class="heading-link"><i class="fas fa-link"></i></a><a href="#按钮水平存放" class="headerlink" title="按钮水平存放"></a>按钮水平存放</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BoxLayoutDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试BoxLayout&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.基于frame容器创建一个BoxLayout对象，并且该对象组件是水平存放</span></span><br><span class="line">        <span class="type">BoxLayout</span> <span class="variable">boxLayout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BoxLayout</span>(frame,BoxLayout.X_AXIS);</span><br><span class="line">        <span class="comment">// 2.把BoxLayout设置给frame</span></span><br><span class="line">        frame.setLayout(boxLayout);</span><br><span class="line">        <span class="comment">// 3.往frame中添加两个按钮组件</span></span><br><span class="line">        frame.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;按钮1&quot;</span>));</span><br><span class="line">        frame.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;按钮2&quot;</span>));</span><br><span class="line"></span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="按钮水平与垂直排列"   >
          <a href="#按钮水平与垂直排列" class="heading-link"><i class="fas fa-link"></i></a><a href="#按钮水平与垂直排列" class="headerlink" title="按钮水平与垂直排列"></a>按钮水平与垂直排列</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BoxLayoutDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试BoxLayout&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建一个水平排列组件的Box容器</span></span><br><span class="line">        <span class="type">Box</span> <span class="variable">hBox</span> <span class="operator">=</span> Box.createHorizontalBox();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.往当前容器只能添加两个按钮</span></span><br><span class="line">        hBox.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;水平按钮1&quot;</span>));</span><br><span class="line">        hBox.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;水平按钮2&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.创建一个垂直排列组件的Box容器</span></span><br><span class="line">        <span class="type">Box</span> <span class="variable">vBox</span> <span class="operator">=</span> Box.createVerticalBox();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.往当前容器中添加两个按钮</span></span><br><span class="line">        vBox.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;垂直按钮1&quot;</span>));</span><br><span class="line">        vBox.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;垂直按钮2&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.把两个Box容器添加到frame中</span></span><br><span class="line">        frame.add(hBox,BorderLayout.NORTH);</span><br><span class="line">        frame.add(vBox);</span><br><span class="line"></span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="间隔组件"   >
          <a href="#间隔组件" class="heading-link"><i class="fas fa-link"></i></a><a href="#间隔组件" class="headerlink" title="间隔组件"></a>间隔组件</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BoxLayoutDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试BoxLayout&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建水平排列的Box容器 hBox</span></span><br><span class="line">        <span class="type">Box</span> <span class="variable">hBox</span> <span class="operator">=</span> Box.createHorizontalBox();</span><br><span class="line">        <span class="comment">// 2.往hBox容器中添加按钮，还需要在多个按钮中添加分隔</span></span><br><span class="line">        hBox.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;水平按钮1&quot;</span>));</span><br><span class="line">        hBox.add(Box.createHorizontalGlue());   <span class="comment">// 该分隔在两个方向都可以拉伸</span></span><br><span class="line">        hBox.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;水平按钮2&quot;</span>));</span><br><span class="line">        hBox.add(Box.createHorizontalStrut(<span class="number">30</span>));</span><br><span class="line">        hBox.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;水平按钮3&quot;</span>));</span><br><span class="line">        <span class="comment">// 3.创建垂直排列的Box容器 vBox</span></span><br><span class="line">        <span class="type">Box</span> <span class="variable">vBox</span> <span class="operator">=</span> Box.createVerticalBox();</span><br><span class="line">        <span class="comment">// 4.往vBox容器中添加按钮，还需要在多个按钮中添加分隔</span></span><br><span class="line">        vBox.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;垂直按钮1&quot;</span>));</span><br><span class="line">        vBox.add(Box.createVerticalGlue());   <span class="comment">// 该分隔在两个方向都可以拉伸</span></span><br><span class="line">        vBox.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;垂直按钮2&quot;</span>));</span><br><span class="line">        vBox.add(Box.createVerticalStrut(<span class="number">30</span>));</span><br><span class="line">        vBox.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;垂直按钮3&quot;</span>));</span><br><span class="line">        <span class="comment">// 5.把box容器添加到frame中</span></span><br><span class="line">        frame.add(hBox,BorderLayout.NORTH);</span><br><span class="line">        frame.add(vBox);</span><br><span class="line"></span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>AWT</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven相关配置</title>
    <url>/2024/10/16/Maven/</url>
    <content><![CDATA[
        <h1 id="各个版本对应工具"   >
          <a href="#各个版本对应工具" class="heading-link"><i class="fas fa-link"></i></a><a href="#各个版本对应工具" class="headerlink" title="各个版本对应工具"></a>各个版本对应工具</h1>
      <div class="table-container"><table>
<thead>
<tr>
<th>工具</th>
<th>版本</th>
</tr>
</thead>
<tbody><tr>
<td>Maven</td>
<td>3.8.8</td>
</tr>
<tr>
<td>JDK</td>
<td>17</td>
</tr>
<tr>
<td>IDEA</td>
<td>2022.2</td>
</tr>
<tr>
<td>—–</td>
<td>——</td>
</tr>
<tr>
<td>Maven</td>
<td>3.9.5</td>
</tr>
<tr>
<td>JDK</td>
<td>17</td>
</tr>
<tr>
<td>IDEA</td>
<td>2023.2</td>
</tr>
</tbody></table></div>
]]></content>
      <categories>
        <category>Maven</category>
      </categories>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL数据库</title>
    <url>/2024/10/16/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[
        <h1 id="MySQL数据库"   >
          <a href="#MySQL数据库" class="heading-link"><i class="fas fa-link"></i></a><a href="#MySQL数据库" class="headerlink" title="MySQL数据库"></a>MySQL数据库</h1>
      
        <h2 id="图形化客户端工具"   >
          <a href="#图形化客户端工具" class="heading-link"><i class="fas fa-link"></i></a><a href="#图形化客户端工具" class="headerlink" title="图形化客户端工具"></a>图形化客户端工具</h2>
      <ul>
<li><span class="exturl"><a class="exturl__link"   href="https://navicat.com.cn/" >Navicat</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li>
</ul>

        <h2 id="操作表"   >
          <a href="#操作表" class="heading-link"><i class="fas fa-link"></i></a><a href="#操作表" class="headerlink" title="操作表"></a>操作表</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">use db1;</span><br><span class="line">CREATE TABLE tb_user(</span><br><span class="line">id int,</span><br><span class="line">usename varchar(20),</span><br><span class="line">password varchar(32));</span><br><span class="line">show tables;</span><br><span class="line">desc tb_user;</span><br><span class="line">show tables;</span><br><span class="line">drop table tb_user;</span><br><span class="line">drop table if exists tb_user;</span><br><span class="line">alter table tb_user rename to user;</span><br><span class="line">show tables;</span><br><span class="line">alter table user rename to stu;</span><br><span class="line">show tables;</span><br><span class="line">desc stu;</span><br><span class="line">alter table stu add address varchar(50);</span><br><span class="line">desc stu;</span><br><span class="line">alter table stu modify address char(50);</span><br><span class="line">desc stu;</span><br><span class="line">alter table stu change address addr varchar(30);</span><br><span class="line">desc stu;</span><br><span class="line">alter table stu drop addr;</span><br></pre></td></tr></table></div></figure>


        <h2 id="DML"   >
          <a href="#DML" class="heading-link"><i class="fas fa-link"></i></a><a href="#DML" class="headerlink" title="DML"></a>DML</h2>
      
        <h3 id="添加数据"   >
          <a href="#添加数据" class="heading-link"><i class="fas fa-link"></i></a><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h3>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">-- 查询所有数据</span><br><span class="line">SELECT</span><br><span class="line">	*</span><br><span class="line">FROM</span><br><span class="line">	stu;</span><br><span class="line"></span><br><span class="line">INSERT INTO stu (id, username)</span><br><span class="line">VALUES</span><br><span class="line">	(1, &#x27;Tom&#x27;);</span><br><span class="line"></span><br><span class="line">INSERT INTO stu (id, username, PASSWORD)</span><br><span class="line">VALUES</span><br><span class="line">	(2, &#x27;John&#x27;, &#x27;230204&#x27;),</span><br><span class="line">	(2, &#x27;John&#x27;, &#x27;230204&#x27;),</span><br><span class="line">	(2, &#x27;John&#x27;, &#x27;230204&#x27;);</span><br><span class="line"></span><br><span class="line">INSERT INTO stu</span><br><span class="line">VALUES</span><br><span class="line">	(3, &#x27;Tony&#x27;, &#x27;230205&#x27;);</span><br></pre></td></tr></table></div></figure>


        <h3 id="修改和删除数据"   >
          <a href="#修改和删除数据" class="heading-link"><i class="fas fa-link"></i></a><a href="#修改和删除数据" class="headerlink" title="修改和删除数据"></a>修改和删除数据</h3>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">-- 修改数据</span><br><span class="line">ALTER TABLE stu ADD gender VARCHAR (10);</span><br><span class="line"></span><br><span class="line">SELECT</span><br><span class="line">	*</span><br><span class="line">FROM</span><br><span class="line">	stu;</span><br><span class="line"></span><br><span class="line">INSERT INTO stu (</span><br><span class="line">	id,</span><br><span class="line">	username,</span><br><span class="line">	PASSWORD,</span><br><span class="line">	gender</span><br><span class="line">)</span><br><span class="line">VALUES</span><br><span class="line">	(4, &#x27;Amy&#x27;, &#x27;230406&#x27;, &#x27;male&#x27;);</span><br><span class="line"></span><br><span class="line">UPDATE stu</span><br><span class="line">SET gender = &#x27;female&#x27;</span><br><span class="line">WHERE</span><br><span class="line">	username = &#x27;Amy&#x27;;</span><br><span class="line"></span><br><span class="line">UPDATE stu</span><br><span class="line">SET PASSWORD = &#x27;230403&#x27;</span><br><span class="line">WHERE</span><br><span class="line">	username = &#x27;Amy&#x27;;</span><br><span class="line"></span><br><span class="line">-- 删除数据</span><br><span class="line">DELETE</span><br><span class="line">FROM</span><br><span class="line">	stu</span><br><span class="line">WHERE</span><br><span class="line">	username = &#x27;Amy&#x27;;</span><br><span class="line"></span><br><span class="line">SELECT</span><br><span class="line">	*</span><br><span class="line">FROM</span><br><span class="line">	stu;</span><br></pre></td></tr></table></div></figure>


        <h2 id="DQL"   >
          <a href="#DQL" class="heading-link"><i class="fas fa-link"></i></a><a href="#DQL" class="headerlink" title="DQL"></a>DQL</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></div></figure>]]></content>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Prologue</title>
    <url>/2024/10/16/Prologue/</url>
    <content><![CDATA[
        <h2 id="Prologue"   >
          <a href="#Prologue" class="heading-link"><i class="fas fa-link"></i></a><a href="#Prologue" class="headerlink" title="Prologue"></a>Prologue</h2>
      <p>那天吃过午饭，回图书馆收拾书包，走过林荫道，看到楼梯前老师的背影。他站在原地看手机，左手好像拿着一个小橘子。当时似乎有了一种坚定的感觉，就算不能真正刻苦，不能够到与其相近的高度，心里也总是会有一种定式与实际，因而相信付出即是有收获的。</p>
<p>至今也还记得，高考英语考场上，右前方有个男生被蜜蜂蛰了一下，中途离开教室，直到考试结束后，才回来收拾桌面上的文具。当时很庆幸蜜蜂没有飞到我的身边，因为在那个年纪，没有按时考试、不能如期毕业抑或考试成绩并非所预想的，都会看作是挫折与坎坷。</p>
<p>后来渐渐发觉，认真去做的每件事到最后总会有意料之外但又有迹可循的结果。不管好的、不好的，都不可避免地构成了自己的生活。那些如实逝去的经历与时分，都变成心底红色的、松软的土层。因而对升学的执念也变轻了许多许多，只希望自己能再克制和勤奋一些。</p>
]]></content>
  </entry>
  <entry>
    <title>Spotify插件测试示例</title>
    <url>/2024/10/16/Spotify%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[
        <h1 id="Spotify-插件测试示例"   >
          <a href="#Spotify-插件测试示例" class="heading-link"><i class="fas fa-link"></i></a><a href="#Spotify-插件测试示例" class="headerlink" title="Spotify 插件测试示例"></a>Spotify 插件测试示例</h1>
      
        <h2 id="Spotify-Album-URI"   >
          <a href="#Spotify-Album-URI" class="heading-link"><i class="fas fa-link"></i></a><a href="#Spotify-Album-URI" class="headerlink" title="Spotify: Album-URI"></a>Spotify: Album-URI</h2>
      <iframe src="https://open.spotify.com/embed/album/27ftYHLeunzcSzb33Wk1hf" width="300" height="380" frameborder="0" allowtransparency="allowtransparency" allow="encrypted-media"></iframe>


        <h2 id="Spotify-Artisty-URI"   >
          <a href="#Spotify-Artisty-URI" class="heading-link"><i class="fas fa-link"></i></a><a href="#Spotify-Artisty-URI" class="headerlink" title="Spotify: Artisty-URI"></a>Spotify: Artisty-URI</h2>
      <iframe src="https://open.spotify.com/embed/artist/3mvkWMe6swnknwscwvGCHO" width="300" height="380" frameborder="0" allowtransparency="allowtransparency" allow="encrypted-media"></iframe>


        <h2 id="Spotify-Track-URI"   >
          <a href="#Spotify-Track-URI" class="heading-link"><i class="fas fa-link"></i></a><a href="#Spotify-Track-URI" class="headerlink" title="Spotify: Track-URI"></a>Spotify: Track-URI</h2>
      <iframe src="https://open.spotify.com/embed/track/7lEptt4wbM0yJTvSG5EBof" width="300" height="380" frameborder="0" allowtransparency="allowtransparency" allow="encrypted-media"></iframe>
]]></content>
      <categories>
        <category>spotify</category>
      </categories>
      <tags>
        <tag>spotify</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue-Router初始化入门源码</title>
    <url>/2024/10/16/Vue-Router%E5%88%9D%E5%A7%8B%E5%8C%96%E5%85%A5%E9%97%A8%E6%BA%90%E7%A0%81/</url>
    <content><![CDATA[
        <h1 id="Vue-Router-初始化入门"   >
          <a href="#Vue-Router-初始化入门" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vue-Router-初始化入门" class="headerlink" title="Vue-Router 初始化入门"></a>Vue-Router 初始化入门</h1>
      
        <h2 id="安装"   >
          <a href="#安装" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装" class="headerlink" title="安装"></a>安装</h2>
      <blockquote>
<p>npm install vue-router</p>
</blockquote>

        <h2 id="src-router-index"   >
          <a href="#src-router-index" class="heading-link"><i class="fas fa-link"></i></a><a href="#src-router-index" class="headerlink" title="src-router-index"></a>src-router-index</h2>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHashHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;../components/Home.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">About</span> <span class="keyword">from</span> <span class="string">&quot;../components/About.vue&quot;</span>;</span><br><span class="line"><span class="comment">// 创建路由器router</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHashHistory</span>(), <span class="comment">//hash模式</span></span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&quot;/home&quot;</span>, <span class="attr">component</span>: <span class="title class_">Home</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&quot;/about&quot;</span>, <span class="attr">component</span>: <span class="title class_">About</span> &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></div></figure>


        <h2 id="src-components-Home"   >
          <a href="#src-components-Home" class="heading-link"><i class="fas fa-link"></i></a><a href="#src-components-Home" class="headerlink" title="src-components-Home"></a>src-components-Home</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h3&gt;Home组件&lt;/h3&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; msg &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      msg: &quot;Hello&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h2 id="src-components-About"   >
          <a href="#src-components-About" class="heading-link"><i class="fas fa-link"></i></a><a href="#src-components-About" class="headerlink" title="src-components-About"></a>src-components-About</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h3&gt;About组件&lt;/h3&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; msg &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      msg: &quot;Hello&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h2 id="main-js"   >
          <a href="#main-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h2>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引用router</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;./router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">use</span>(router).<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></div></figure>


        <h2 id="App-vue"   >
          <a href="#App-vue" class="heading-link"><i class="fas fa-link"></i></a><a href="#App-vue" class="headerlink" title="App.vue"></a>App.vue</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;router-link to=&quot;/home&quot; class=&quot;link&quot;&gt;home&lt;/router-link&gt;</span><br><span class="line">    &lt;router-link to=&quot;/about&quot; class=&quot;link&quot;&gt;about&lt;/router-link&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;App&quot;,</span><br><span class="line">  components: &#123;&#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>
]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>Router</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue2+高德地图 Web 端</title>
    <url>/2024/10/16/Vue2AMap/</url>
    <content><![CDATA[
        <h1 id="Vue2-高德地图-Web-端"   >
          <a href="#Vue2-高德地图-Web-端" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vue2-高德地图-Web-端" class="headerlink" title="Vue2+高德地图 Web 端"></a>Vue2+高德地图 Web 端</h1>
      
        <h2 id="高德地图"   >
          <a href="#高德地图" class="heading-link"><i class="fas fa-link"></i></a><a href="#高德地图" class="headerlink" title="高德地图"></a>高德地图</h2>
      <p><span class="exturl"><a class="exturl__link"   href="https://lbs.amap.com/" >API 网址</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h3 id="NPM-方式安装使用-Loader"   >
          <a href="#NPM-方式安装使用-Loader" class="heading-link"><i class="fas fa-link"></i></a><a href="#NPM-方式安装使用-Loader" class="headerlink" title="NPM 方式安装使用 Loader"></a>NPM 方式安装使用 Loader</h3>
      <blockquote>
<p>npm i @amap/amap-jsapi-loader –save</p>
</blockquote>

        <h3 id="在-MapContainer-vue-的-lt-script-gt-中引入-AMapLoader-和安全密钥"   >
          <a href="#在-MapContainer-vue-的-lt-script-gt-中引入-AMapLoader-和安全密钥" class="heading-link"><i class="fas fa-link"></i></a><a href="#在-MapContainer-vue-的-lt-script-gt-中引入-AMapLoader-和安全密钥" class="headerlink" title="在 MapContainer.vue 的&lt; script &gt;中引入 AMapLoader 和安全密钥"></a>在 MapContainer.vue 的&lt; script &gt;中引入 AMapLoader 和安全密钥</h3>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">import AMapLoader from &quot;@amap/amap-jsapi-loader&quot;;</span><br><span class="line">window._AMapSecurityConfig = &#123; securityJsCode: &quot;你的安全密钥&quot; &#125;;</span><br><span class="line">export default &#123;&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></div></figure>


        <h3 id="构建地图"   >
          <a href="#构建地图" class="heading-link"><i class="fas fa-link"></i></a><a href="#构建地图" class="headerlink" title="构建地图"></a>构建地图</h3>
      
        <h4 id="data-数据声明"   >
          <a href="#data-数据声明" class="heading-link"><i class="fas fa-link"></i></a><a href="#data-数据声明" class="headerlink" title="data 数据声明"></a>data 数据声明</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">data()&#123; return &#123; map:null &#125; &#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="methods-中构建初始化地图方法"   >
          <a href="#methods-中构建初始化地图方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#methods-中构建初始化地图方法" class="headerlink" title="methods 中构建初始化地图方法"></a>methods 中构建初始化地图方法</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line">    initMap()&#123;</span><br><span class="line">        AMapLoader.load(&#123;</span><br><span class="line">            key:&quot;&quot;,             // 申请好的Web端开发者Key，首次调用 load 时必填</span><br><span class="line">            version:&quot;2.0&quot;,      // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15</span><br><span class="line">            plugins:[&#x27;&#x27;],       // 需要使用的的插件列表，如比例尺&#x27;AMap.Scale&#x27;等</span><br><span class="line">        &#125;).then((AMap)=&gt;&#123;</span><br><span class="line">            this.map = new AMap.Map(&quot;container&quot;,&#123;  //设置地图容器id</span><br><span class="line">                viewMode:&quot;3D&quot;,    //是否为3D地图模式</span><br><span class="line">                zoom:5,           //初始化地图级别</span><br><span class="line">                center:[105.602725,37.076636], //初始化地图中心点位置</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;).catch(e=&gt;&#123;</span><br><span class="line">            console.log(e);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></div></figure>


        <h4 id="mouted-生命周期中调用方法对页面进行渲染"   >
          <a href="#mouted-生命周期中调用方法对页面进行渲染" class="heading-link"><i class="fas fa-link"></i></a><a href="#mouted-生命周期中调用方法对页面进行渲染" class="headerlink" title="mouted 生命周期中调用方法对页面进行渲染"></a>mouted 生命周期中调用方法对页面进行渲染</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">mounted() &#123;</span><br><span class="line">    //DOM初始化完成进行地图初始化</span><br><span class="line">    this.initMap()</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="完整源码"   >
          <a href="#完整源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#完整源码" class="headerlink" title="完整源码"></a>完整源码</h2>
      
        <h3 id="src-components-MapContainer-vue"   >
          <a href="#src-components-MapContainer-vue" class="heading-link"><i class="fas fa-link"></i></a><a href="#src-components-MapContainer-vue" class="headerlink" title="src-components-MapContainer.vue"></a>src-components-MapContainer.vue</h3>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;container&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import AMapLoader from &quot;@amap/amap-jsapi-loader&quot;;</span><br><span class="line">window._AMapSecurityConfig = &#123;</span><br><span class="line">  securityJsCode: &quot;安全密钥&quot;,</span><br><span class="line">&#125;;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      map: null,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    initMap() &#123;</span><br><span class="line">      AMapLoader.load(&#123;</span><br><span class="line">        key: &quot;高德地图里的key&quot;, // 申请好的Web端开发者Key，首次调用 load 时必填</span><br><span class="line">        version: &quot;2.0&quot;, // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15</span><br><span class="line">        plugins: [</span><br><span class="line">          &quot;AMap.Scale&quot;,</span><br><span class="line">          &quot;AMap.ToolBar&quot;,</span><br><span class="line">          &quot;AMap.HawkEye&quot;,</span><br><span class="line">          &quot;AMap.MapType&quot;,</span><br><span class="line">          &quot;AMap.Geolocation&quot;,</span><br><span class="line">        ], // 需要使用的的插件列表，如比例尺&#x27;AMap.Scale&#x27;等</span><br><span class="line">      &#125;)</span><br><span class="line">        .then((AMap) =&gt; &#123;</span><br><span class="line">          this.map = new AMap.Map(&quot;container&quot;, &#123;</span><br><span class="line">            //设置地图容器id</span><br><span class="line">            viewMode: &quot;2D&quot;, //是否为2D地图模式</span><br><span class="line">            zoom: 15, //初始化地图级别</span><br><span class="line">            center: [118.825064, 32.040802], //初始化地图中心点位置</span><br><span class="line">          &#125;);</span><br><span class="line">          this.map.addControl(new AMap.Scale());</span><br><span class="line">          this.map.addControl(new AMap.ToolBar());</span><br><span class="line">          this.map.addControl(new AMap.HawkEye());</span><br><span class="line">          this.map.addControl(new AMap.MapType());</span><br><span class="line">          this.map.addControl(new AMap.Geolocation());</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch((e) =&gt; &#123;</span><br><span class="line">          console.log(e);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    //DOM初始化完成进行地图初始化</span><br><span class="line">    this.initMap();</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">#container &#123;</span><br><span class="line">  padding: 0px;</span><br><span class="line">  margin: 0px;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h3 id="src-router-index-vue"   >
          <a href="#src-router-index-vue" class="heading-link"><i class="fas fa-link"></i></a><a href="#src-router-index-vue" class="headerlink" title="src-router-index.vue"></a>src-router-index.vue</h3>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">import Vue from &quot;vue&quot;;</span><br><span class="line">import VueRouter from &quot;vue-router&quot;;</span><br><span class="line">import Index from &quot;../views/Index.vue&quot;;</span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter);</span><br><span class="line"></span><br><span class="line">const routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: &quot;/&quot;,</span><br><span class="line">    component: Index,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">const router = new VueRouter(&#123;</span><br><span class="line">  mode: &quot;history&quot;,</span><br><span class="line">  base: process.env.BASE_URL,</span><br><span class="line">  routes,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">export default router;</span><br></pre></td></tr></table></div></figure>


        <h3 id="src-store-index-js"   >
          <a href="#src-store-index-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#src-store-index-js" class="headerlink" title="src-store-index.js"></a>src-store-index.js</h3>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;</span><br><span class="line">import Vuex from &#x27;vuex&#x27;</span><br><span class="line"></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"></span><br><span class="line">export default new Vuex.Store(&#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  getters: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  actions: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  modules: &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure>


        <h3 id="src-views-Index-js"   >
          <a href="#src-views-Index-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#src-views-Index-js" class="headerlink" title="src-views-Index.js"></a>src-views-Index.js</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;index_container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;map_wrap&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">map-container</span>&gt;</span><span class="tag">&lt;/<span class="name">map-container</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="title class_">MapContainer</span> <span class="keyword">from</span> <span class="string">&quot;../components/MapContainer.vue&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">components</span>: &#123; <span class="title class_">MapContainer</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-id">#index_container</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">height</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">position</span>: relative;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-id">#map_wrap</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">height</span>: <span class="number">60%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">width</span>: <span class="number">60%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></div></figure>


        <h3 id="src-App-vue"   >
          <a href="#src-App-vue" class="heading-link"><i class="fas fa-link"></i></a><a href="#src-App-vue" class="headerlink" title="src-App.vue"></a>src-App.vue</h3>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  height: 100vh;</span><br><span class="line">  width: 100vw;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h3 id="src-main-js"   >
          <a href="#src-main-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#src-main-js" class="headerlink" title="src-main.js"></a>src-main.js</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./registerServiceWorker&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;./router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;./store&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  router,</span><br><span class="line">  store,</span><br><span class="line">  <span class="attr">render</span>: <span class="function">(<span class="params">h</span>) =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">&#125;).$mount(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></div></figure>
]]></content>
      <categories>
        <category>Vue2</category>
      </categories>
      <tags>
        <tag>Vue2</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue组件基础</title>
    <url>/2024/10/16/VueComponent/</url>
    <content><![CDATA[
        <h1 id="组件基础"   >
          <a href="#组件基础" class="heading-link"><i class="fas fa-link"></i></a><a href="#组件基础" class="headerlink" title="组件基础"></a>组件基础</h1>
      
        <h2 id="Vite的基本使用"   >
          <a href="#Vite的基本使用" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vite的基本使用" class="headerlink" title="Vite的基本使用"></a>Vite的基本使用</h2>
      
        <h3 id="基于vite创建工程化的vue项目"   >
          <a href="#基于vite创建工程化的vue项目" class="heading-link"><i class="fas fa-link"></i></a><a href="#基于vite创建工程化的vue项目" class="headerlink" title="基于vite创建工程化的vue项目"></a>基于vite创建工程化的vue项目</h3>
      
        <h4 id="初始化"   >
          <a href="#初始化" class="heading-link"><i class="fas fa-link"></i></a><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4>
      <p>步骤一：</p>
<blockquote>
<p>npm init vite-app code1</p>
</blockquote>
<p>步骤二：</p>
<p>cd code1<br>npm install (or <code>yarn</code>)<br>npm run dev (or <code>yarn dev</code>)</p>
<p>步骤三：</p>
<p>  Dev server running at:</p>
<blockquote>
<p>Network:  <span class="exturl"><a class="exturl__link"   href="http://192.168.159.1:3000/" >http://192.168.159.1:3000/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>Network:  <span class="exturl"><a class="exturl__link"   href="http://192.168.239.1:3000/" >http://192.168.239.1:3000/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>Network:  <span class="exturl"><a class="exturl__link"   href="http://10.20.20.155:3000/" >http://10.20.20.155:3000/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>Local:    <span class="exturl"><a class="exturl__link"   href="http://localhost:3000/" >http://localhost:3000/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
</blockquote>

        <h3 id="vite项目的运行流程"   >
          <a href="#vite项目的运行流程" class="heading-link"><i class="fas fa-link"></i></a><a href="#vite项目的运行流程" class="headerlink" title="vite项目的运行流程"></a>vite项目的运行流程</h3>
      
    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>通过main.js把App.vue渲染到index.html的指定区域中</p>
    </div>
  


        <h4 id="源码"   >
          <a href="#源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码" class="headerlink" title="源码"></a>源码</h4>
      
        <h5 id="index-html"   >
          <a href="#index-html" class="heading-link"><i class="fas fa-link"></i></a><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h5>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/favicon.ico&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vite App<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/src/main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h5 id="App-vue"   >
          <a href="#App-vue" class="heading-link"><i class="fas fa-link"></i></a><a href="#App-vue" class="headerlink" title="App.vue"></a>App.vue</h5>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h1&gt;这是App.vue根组件&lt;/h1&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></div></figure>


        <h5 id="main-js"   >
          <a href="#main-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h5>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1.按需导入createApp函数</span></span><br><span class="line"><span class="keyword">import</span> &#123;createApp&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">// 2.导入待渲染的App.vue组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.调用createApp函数，创建SPA应用实例</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.调用mount方法，把App组件的模板结构，渲染到指定的el区域中</span></span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></div></figure>


        <h2 id="组件化开发"   >
          <a href="#组件化开发" class="heading-link"><i class="fas fa-link"></i></a><a href="#组件化开发" class="headerlink" title="组件化开发"></a>组件化开发</h2>
      <p>根据<strong>封装</strong>的思想，把页面上可重用的部分封装为组件</p>

        <h2 id="vue组件的构成"   >
          <a href="#vue组件的构成" class="heading-link"><i class="fas fa-link"></i></a><a href="#vue组件的构成" class="headerlink" title="vue组件的构成"></a>vue组件的构成</h2>
      <ul>
<li>template -&gt; 组件的模板结构(<strong>必选</strong>)</li>
<li>script -&gt; 组件的js行为(可选)</li>
<li>style -&gt; 组件的样式(可选)</li>
</ul>

        <h3 id="template节点-App-vue"   >
          <a href="#template节点-App-vue" class="heading-link"><i class="fas fa-link"></i></a><a href="#template节点-App-vue" class="headerlink" title="template节点(App.vue)"></a>template节点(App.vue)</h3>
      <p>vue提供的<strong>容器标签</strong>，只起到包裹性质的作用，不会被渲染成真正的DOM元素</p>

        <h3 id="script节点-App-vue"   >
          <a href="#script节点-App-vue" class="heading-link"><i class="fas fa-link"></i></a><a href="#script节点-App-vue" class="headerlink" title="script节点(App.vue)"></a>script节点(App.vue)</h3>
      <p>可在script组件中封装组件的JavaScript业务逻辑</p>

        <h4 id="script-name节点-App-vue"   >
          <a href="#script-name节点-App-vue" class="heading-link"><i class="fas fa-link"></i></a><a href="#script-name节点-App-vue" class="headerlink" title="script-name节点(App.vue)"></a>script-name节点(App.vue)</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 组件的名称</span></span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;MyApp&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></div></figure>


        <h4 id="script-data节点-App-vue"   >
          <a href="#script-data节点-App-vue" class="heading-link"><i class="fas fa-link"></i></a><a href="#script-data节点-App-vue" class="headerlink" title="script-data节点(App.vue)"></a>script-data节点(App.vue)</h4>
      <p>vue组件渲染期间需要用到的<strong>数据</strong>，可定义在data节点中</p>
<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 组件的名称</span></span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;MyApp&#x27;</span>,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">username</span>: <span class="string">&#x27;Tom&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></div></figure>


        <h4 id="script-methods节点-App-vue"   >
          <a href="#script-methods节点-App-vue" class="heading-link"><i class="fas fa-link"></i></a><a href="#script-methods节点-App-vue" class="headerlink" title="script-methods节点(App.vue)"></a>script-methods节点(App.vue)</h4>
      <p>组件中的<strong>事件处理函数</strong>，定义在methods节点中</p>
<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 组件的名称</span></span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;MyApp&#x27;</span>,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">username</span>: <span class="string">&#x27;Tom&#x27;</span>,</span><br><span class="line">      <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>:&#123;</span><br><span class="line">    <span class="title function_">addCount</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">count</span>++</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></div></figure>


        <h3 id="style节点-App-vue"   >
          <a href="#style节点-App-vue" class="heading-link"><i class="fas fa-link"></i></a><a href="#style节点-App-vue" class="headerlink" title="style节点(App.vue)"></a>style节点(App.vue)</h3>
      <p>在style节点中编写样式美化当前组件的UI结构</p>

        <h4 id="基本结构源码"   >
          <a href="#基本结构源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#基本结构源码" class="headerlink" title="基本结构源码"></a>基本结构源码</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">h1&#123;</span><br><span class="line">  <span class="attr">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h4 id="style中支持less语法"   >
          <a href="#style中支持less语法" class="heading-link"><i class="fas fa-link"></i></a><a href="#style中支持less语法" class="headerlink" title="style中支持less语法"></a>style中支持less语法</h4>
      <p>步骤一：</p>
<blockquote>
<p>npm install less -D</p>
</blockquote>
<p>步骤二：<br>在style标签上添加lang=”less”属性</p>
<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是<span class="tag">&lt;<span class="name">i</span>&gt;</span>App.vue<span class="tag">&lt;/<span class="name">i</span>&gt;</span>根组件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-tag">h1</span>&#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">color</span>:red;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-tag">i</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">color</span>:blue;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></div></figure>


        <h2 id="组件的基本使用"   >
          <a href="#组件的基本使用" class="heading-link"><i class="fas fa-link"></i></a><a href="#组件的基本使用" class="headerlink" title="组件的基本使用"></a>组件的基本使用</h2>
      
        <h3 id="组件的注册"   >
          <a href="#组件的注册" class="heading-link"><i class="fas fa-link"></i></a><a href="#组件的注册" class="headerlink" title="组件的注册"></a>组件的注册</h3>
      <p>组件之间可以进行<strong>相互引用</strong></p>

        <h4 id="组件注册时名称的大小写"   >
          <a href="#组件注册时名称的大小写" class="heading-link"><i class="fas fa-link"></i></a><a href="#组件注册时名称的大小写" class="headerlink" title="组件注册时名称的大小写"></a>组件注册时名称的大小写</h4>
      
        <h5 id="短横线命名法Kebab-case"   >
          <a href="#短横线命名法Kebab-case" class="heading-link"><i class="fas fa-link"></i></a><a href="#短横线命名法Kebab-case" class="headerlink" title="短横线命名法Kebab-case"></a>短横线命名法Kebab-case</h5>
      <p>例如：my-test</p>

        <h5 id="帕斯卡命名法或大驼峰命名法PascalCase"   >
          <a href="#帕斯卡命名法或大驼峰命名法PascalCase" class="heading-link"><i class="fas fa-link"></i></a><a href="#帕斯卡命名法或大驼峰命名法PascalCase" class="headerlink" title="帕斯卡命名法或大驼峰命名法PascalCase"></a>帕斯卡命名法或大驼峰命名法PascalCase</h5>
      <p>例如：MyTest</p>
<ul>
<li>也可以转换成短横线名称进行使用</li>
</ul>

        <h4 id="vue中组件的引用原则"   >
          <a href="#vue中组件的引用原则" class="heading-link"><i class="fas fa-link"></i></a><a href="#vue中组件的引用原则" class="headerlink" title="vue中组件的引用原则"></a>vue中组件的引用原则</h4>
      
    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>先注册后使用</p>
    </div>
  


        <h4 id="注册组件的两种方式"   >
          <a href="#注册组件的两种方式" class="heading-link"><i class="fas fa-link"></i></a><a href="#注册组件的两种方式" class="headerlink" title="注册组件的两种方式"></a>注册组件的两种方式</h4>
      
        <h5 id="全局注册"   >
          <a href="#全局注册" class="heading-link"><i class="fas fa-link"></i></a><a href="#全局注册" class="headerlink" title="全局注册"></a>全局注册</h5>
      <p>可以在全局任何一个组件中使用</p>

        <h5 id="局部注册"   >
          <a href="#局部注册" class="heading-link"><i class="fas fa-link"></i></a><a href="#局部注册" class="headerlink" title="局部注册"></a>局部注册</h5>
      <p>只能在当前注册的范围内使用</p>

        <h3 id="全局注册组件"   >
          <a href="#全局注册组件" class="heading-link"><i class="fas fa-link"></i></a><a href="#全局注册组件" class="headerlink" title="全局注册组件"></a>全局注册组件</h3>
      
        <h4 id="main-js-1"   >
          <a href="#main-js-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#main-js-1" class="headerlink" title="main.js"></a>main.js</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 导入需要被全局注册的组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Swiper</span> <span class="keyword">from</span> <span class="string">&#x27;./components/01globalReg/Swiper.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Test</span> <span class="keyword">from</span> <span class="string">&#x27;./components/01globalReg/Test.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用app.component()方法全局注册组件</span></span><br><span class="line">app.<span class="title function_">component</span>(<span class="string">&#x27;my-swiper&#x27;</span>,<span class="title class_">Swiper</span>)</span><br><span class="line">app.<span class="title function_">component</span>(<span class="string">&#x27;my-test&#x27;</span>,<span class="title class_">Test</span>)</span><br></pre></td></tr></table></div></figure>


        <h4 id="Swiper-vue"   >
          <a href="#Swiper-vue" class="heading-link"><i class="fas fa-link"></i></a><a href="#Swiper-vue" class="headerlink" title="Swiper.vue"></a>Swiper.vue</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Swiper轮播图组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;mySwiper&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></div></figure>


        <h4 id="Test-vue"   >
          <a href="#Test-vue" class="heading-link"><i class="fas fa-link"></i></a><a href="#Test-vue" class="headerlink" title="Test.vue"></a>Test.vue</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Test组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;myTest&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></div></figure>


        <h4 id="App-vue-1"   >
          <a href="#App-vue-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#App-vue-1" class="headerlink" title="App.vue"></a>App.vue</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是根组件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">my-swiper</span>&gt;</span><span class="tag">&lt;/<span class="name">my-swiper</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">my-test</span>&gt;</span><span class="tag">&lt;/<span class="name">my-test</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></div></figure>


        <h3 id="局部注册组件"   >
          <a href="#局部注册组件" class="heading-link"><i class="fas fa-link"></i></a><a href="#局部注册组件" class="headerlink" title="局部注册组件"></a>局部注册组件</h3>
      
        <h4 id="search-js"   >
          <a href="#search-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#search-js" class="headerlink" title="search.js"></a>search.js</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Search搜索组件<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;MySearch&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></div></figure>


        <h4 id="App-vue-2"   >
          <a href="#App-vue-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#App-vue-2" class="headerlink" title="App.vue"></a>App.vue</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是根组件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">my-test</span>&gt;</span><span class="tag">&lt;/<span class="name">my-test</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">my-search</span>&gt;</span><span class="tag">&lt;/<span class="name">my-search</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">// 导入需要被注册的组件</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="title class_">Search</span> <span class="keyword">from</span> <span class="string">&#x27;./components/02privateReg/search.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">// 组件的名称</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;MyApp&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="string">&#x27;my-search&#x27;</span>: <span class="title class_">Search</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></div></figure>]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>Vue-Component</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue的基本用法、指令与过滤器</title>
    <url>/2024/10/16/VueIntro/</url>
    <content><![CDATA[
        <h1 id="VueIntro"   >
          <a href="#VueIntro" class="heading-link"><i class="fas fa-link"></i></a><a href="#VueIntro" class="headerlink" title="VueIntro"></a>VueIntro</h1>
      
        <h2 id="Vue的基本用法"   >
          <a href="#Vue的基本用法" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vue的基本用法" class="headerlink" title="Vue的基本用法"></a>Vue的基本用法</h2>
      
        <h3 id="单个元素"   >
          <a href="#单个元素" class="heading-link"><i class="fas fa-link"></i></a><a href="#单个元素" class="headerlink" title="单个元素"></a>单个元素</h3>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 2.声明要被Vue所控制的DOM区域 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;app&quot;</span>&gt;</span>&#123;&#123;username&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- 1.导入Vue的脚本文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 3.创建Vue的实例对象 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 3.1 使用el属性，指定Vue要控制的区域</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 3.2数据源</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">username</span>: <span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="多个元素"   >
          <a href="#多个元素" class="heading-link"><i class="fas fa-link"></i></a><a href="#多个元素" class="headerlink" title="多个元素"></a>多个元素</h3>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 2.声明要被Vue所控制的DOM区域 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;app01&quot;</span>&gt;</span>&#123;&#123;username&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;app02&quot;</span>&gt;</span>&#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- 1.导入Vue的脚本文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 3.创建Vue的实例对象 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm01 = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 3.1 使用el属性，指定Vue要控制的区域</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app01&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 3.2数据源</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">username</span>: <span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm02 = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 3.1 使用el属性，指定Vue要控制的区域</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app02&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 3.2数据源</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">age</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h2 id="指令Directives"   >
          <a href="#指令Directives" class="heading-link"><i class="fas fa-link"></i></a><a href="#指令Directives" class="headerlink" title="指令Directives"></a>指令Directives</h2>
      
        <h3 id="内容渲染指令"   >
          <a href="#内容渲染指令" class="heading-link"><i class="fas fa-link"></i></a><a href="#内容渲染指令" class="headerlink" title="内容渲染指令"></a>内容渲染指令</h3>
      <!-- No header, With icon -->

    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>内容渲染指令用来辅助开发者渲染DOM元素的文本内容</p>
    </div>
  

<p>常用的内容渲染指令有3个：</p>
<figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line">v-text</span><br><span class="line">&#123;&#123;&#125;&#125;</span><br><span class="line">v-html</span><br></pre></td></tr></table></div></figure>


        <h4 id="源码"   >
          <a href="#源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码" class="headerlink" title="源码"></a>源码</h4>
      <blockquote>
<p>输出：<br>Tom<br>male</p>
</blockquote>
<figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span> = <span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span> = <span class="string">&quot;gender&quot;</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">username</span>:<span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">gender</span>:<span class="string">&#x27;male&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="源码-1"   >
          <a href="#源码-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-1" class="headerlink" title="源码"></a>源码</h4>
      <ul>
<li>插值表达式Mustache: 不会覆盖元素中默认的文本内容</li>
</ul>
<blockquote>
<p>输出：<br>姓名:Tom<br>性别:male</p>
</blockquote>
<figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>姓名:&#123;&#123;username&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>性别:&#123;&#123;gender&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">username</span>:<span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">gender</span>:<span class="string">&#x27;male&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="源码-2"   >
          <a href="#源码-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-2" class="headerlink" title="源码"></a>源码</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span> = <span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span> = <span class="string">&quot;gender&quot;</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>------------------<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span> = <span class="string">&quot;desc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;desc&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span> = <span class="string">&quot;desc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">username</span>:<span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">gender</span>:<span class="string">&#x27;male&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">desc</span>:<span class="string">&#x27;&lt;i&gt;abc&lt;i&gt;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="属性绑定指令"   >
          <a href="#属性绑定指令" class="heading-link"><i class="fas fa-link"></i></a><a href="#属性绑定指令" class="headerlink" title="属性绑定指令"></a>属性绑定指令</h3>
      <ul>
<li>为元素的属性动态绑定属性值，使用v-bind属性绑定指令</li>
</ul>

        <h4 id="源码-3"   >
          <a href="#源码-3" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-3" class="headerlink" title="源码"></a>源码</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- vue实例要控制的DOM区域 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-bind:placeholder</span>=<span class="string">&quot;inputValue&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;imgSrc&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 导入vue脚本文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 创建VM实例对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 指定当前VM要控制的区域</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 数据源</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 文本框的占位符内容</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">inputValue</span>:<span class="string">&#x27;请输入内容&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 图片的src地址</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">imgSrc</span>:<span class="string">&#x27;./images/icon.png&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="源码-v-bind指令简写形式为英文的”-”"   >
          <a href="#源码-v-bind指令简写形式为英文的”-”" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-v-bind指令简写形式为英文的”-”" class="headerlink" title="源码(v-bind指令简写形式为英文的”:”)"></a>源码(v-bind指令简写形式为英文的”:”)</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- vue实例要控制的DOM区域 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">:placeholder</span>=<span class="string">&quot;inputValue&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;imgSrc&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 导入vue脚本文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 创建VM实例对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 指定当前VM要控制的区域</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 数据源</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 文本框的占位符内容</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">inputValue</span>:<span class="string">&#x27;请输入内容&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 图片的src地址</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">imgSrc</span>:<span class="string">&#x27;./images/icon.png&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="使用Javascript表达式"   >
          <a href="#使用Javascript表达式" class="heading-link"><i class="fas fa-link"></i></a><a href="#使用Javascript表达式" class="headerlink" title="使用Javascript表达式"></a>使用Javascript表达式</h3>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;number + 1&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="comment">&lt;!--数值的加法运算，输出：10--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;ok ? &#x27;True&#x27; : &#x27;False&#x27;&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  <span class="comment">&lt;!--输出：True--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;message.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;)&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  <span class="comment">&lt;!--输出：CBA--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">:id</span> = <span class="string">&quot;id&quot;</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="comment">&lt;!--F12Elements：&lt;p id=&quot;3&quot;&gt;xxx&lt;/p&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">:id</span> = <span class="string">&quot;&#x27;list-&#x27; + id&quot;</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="comment">&lt;!--F12Elements：&lt;p id=&quot;list-3&quot;&gt;xxx&lt;/p&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;user.name&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  <span class="comment">&lt;!--输出：Tom--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 数值</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">number</span>:<span class="number">9</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 布尔值</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">ok</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 字符串</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">message</span>:<span class="string">&#x27;ABC&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// id值</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">id</span>:<span class="number">3</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 用户的信息对象</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">user</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">name</span>:<span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="事件绑定指令"   >
          <a href="#事件绑定指令" class="heading-link"><i class="fas fa-link"></i></a><a href="#事件绑定指令" class="headerlink" title="事件绑定指令"></a>事件绑定指令</h3>
      <!-- No header, With icon -->

    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>v-on事件绑定指令用来辅助开发者为DOM元素绑定事件监听</p>
    </div>
  

<div class="table-container"><table>
<thead>
<tr>
<th align="center">DOM对象的原生事件</th>
<th align="center">替换为vue的事件绑定</th>
</tr>
</thead>
<tbody><tr>
<td align="center">onclick</td>
<td align="center">v-on:click</td>
</tr>
<tr>
<td align="center">oninput</td>
<td align="center">v-on:input</td>
</tr>
<tr>
<td align="center">onkeyup</td>
<td align="center">v-on:keyup</td>
</tr>
</tbody></table></div>
<blockquote>
<p>通过v-on绑定的事件处理函数，需要在methods节点中进行声明</p>
</blockquote>

        <h4 id="源码-4"   >
          <a href="#源码-4" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-4" class="headerlink" title="源码"></a>源码</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>count的值为：&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span> = <span class="string">&quot;addCount&quot;</span>&gt;</span>+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 计数器的值</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">count</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 点击按钮，让count自增加1</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">addCount</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">count</span> += <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="源码-v-on指令简写形式为英文的”-”"   >
          <a href="#源码-v-on指令简写形式为英文的”-”" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-v-on指令简写形式为英文的”-”" class="headerlink" title="源码(v-on指令简写形式为英文的”@”)"></a>源码(v-on指令简写形式为英文的”@”)</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>count的值为：&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span> = <span class="string">&quot;addCount&quot;</span>&gt;</span>+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 计数器的值</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">count</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 点击按钮，让count自增加1</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">addCount</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">count</span> += <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="事件对象Event"   >
          <a href="#事件对象Event" class="heading-link"><i class="fas fa-link"></i></a><a href="#事件对象Event" class="headerlink" title="事件对象Event"></a>事件对象Event</h3>
      
        <h4 id="源码-5"   >
          <a href="#源码-5" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-5" class="headerlink" title="源码"></a>源码</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>count的值为：&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;addCount&quot;</span>&gt;</span>+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">count</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">addCount</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">const</span> nowBgColor = e.<span class="property">target</span>.<span class="property">style</span>.<span class="property">backgroundColor</span></span></span><br><span class="line"><span class="language-javascript">          e.<span class="property">target</span>.<span class="property">style</span>.<span class="property">backgroundColor</span> = nowBgColor === <span class="string">&#x27;red&#x27;</span> ? <span class="string">&#x27;&#x27;</span> : <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">count</span> += <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="事件传参和-event"   >
          <a href="#事件传参和-event" class="heading-link"><i class="fas fa-link"></i></a><a href="#事件传参和-event" class="headerlink" title="事件传参和$event"></a>事件传参和$event</h3>
      <ul>
<li>在使用v-on指令绑定事件时，可以使用()进行传参</li>
</ul>

        <h4 id="事件传参源码-自增加2"   >
          <a href="#事件传参源码-自增加2" class="heading-link"><i class="fas fa-link"></i></a><a href="#事件传参源码-自增加2" class="headerlink" title="事件传参源码(自增加2)"></a>事件传参源码(自增加2)</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>count的值为：&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span> = <span class="string">&quot;addCount(2)&quot;</span>&gt;</span>+2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">count</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">addCount</span>(<span class="params">step</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">count</span> += step</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="event"   >
          <a href="#event" class="heading-link"><i class="fas fa-link"></i></a><a href="#event" class="headerlink" title="$event"></a>$event</h4>
      <!-- No header, With icon -->

    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>$event是vue提供的特殊变量，用来表示原生的事件参数对象event</p>
    </div>
  

<figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>count的值为：&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span> = <span class="string">&quot;addCount(2,$event)&quot;</span>&gt;</span>+2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">count</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">addCount</span>(<span class="params">step,e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">const</span> bgColor = e.<span class="property">target</span>.<span class="property">style</span>.<span class="property">backgroundColor</span></span></span><br><span class="line"><span class="language-javascript">          e.<span class="property">target</span>.<span class="property">style</span>.<span class="property">backgroundColor</span> = bgColor === <span class="string">&#x27;red&#x27;</span> ? <span class="string">&#x27;&#x27;</span> : <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">count</span> += step</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="按键修饰符"   >
          <a href="#按键修饰符" class="heading-link"><i class="fas fa-link"></i></a><a href="#按键修饰符" class="headerlink" title="按键修饰符"></a>按键修饰符</h3>
      
        <h4 id="按键修饰符源码"   >
          <a href="#按键修饰符源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#按键修饰符源码" class="headerlink" title="按键修饰符源码"></a>按键修饰符源码</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup.enter</span> = <span class="string">&quot;submit&quot;</span> @<span class="attr">keyup.esc</span> = <span class="string">&quot;clearInput&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 获取文本框最新的值</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">submit</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;按下enter键，最新的值是：&#x27;</span> + e.<span class="property">target</span>.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 清空文本框的值</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">clearInput</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">          e.<span class="property">target</span>.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="双向绑定指令"   >
          <a href="#双向绑定指令" class="heading-link"><i class="fas fa-link"></i></a><a href="#双向绑定指令" class="headerlink" title="双向绑定指令"></a>双向绑定指令</h3>
      <!-- No header, With icon -->

    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>v-model双向数据绑定指令用于在不操作DOM的前提下，快速获取表单的数据</p>
    </div>
  


        <h4 id="源码-6"   >
          <a href="#源码-6" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-6" class="headerlink" title="源码"></a>源码</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名是：&#123;&#123;username&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>选中的城市是：&#123;&#123;city&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span> = <span class="string">&quot;city&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>香港<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>澳门<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 姓名</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">username</span>:<span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 城市</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">city</span>:<span class="string">&#x27;1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="双向绑定指令的修饰符"   >
          <a href="#双向绑定指令的修饰符" class="heading-link"><i class="fas fa-link"></i></a><a href="#双向绑定指令的修饰符" class="headerlink" title="双向绑定指令的修饰符"></a>双向绑定指令的修饰符</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.trim</span> = <span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.number</span> = <span class="string">&quot;age&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    地址：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.lazy</span> = <span class="string">&quot;address&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 姓名</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">username</span>:<span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 年龄</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">age</span>:<span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 地址</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">address</span>: <span class="string">&#x27;北京市&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="条件渲染指令"   >
          <a href="#条件渲染指令" class="heading-link"><i class="fas fa-link"></i></a><a href="#条件渲染指令" class="headerlink" title="条件渲染指令"></a>条件渲染指令</h3>
      
        <h4 id="区别"   >
          <a href="#区别" class="heading-link"><i class="fas fa-link"></i></a><a href="#区别" class="headerlink" title="区别"></a>区别</h4>
      <ul>
<li>区别1-实现原理不同</li>
</ul>
<!-- No header, With icon -->

    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>v-if指令会动态地创建或移除DOM元素；<br>v-show指令会动态为元素添加或移除style=”display:none;”样式</p>
    </div>
  

<ul>
<li>区别2-性能消耗不同</li>
</ul>
<p>v-if有更高的<strong>切换开销</strong>(适用于：运行时条件很少改变)</p>
<p>v-show有更高的<strong>初始渲染开销</strong>(适用于：频繁切换)</p>

        <h4 id="源码-7"   >
          <a href="#源码-7" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-7" class="headerlink" title="源码"></a>源码</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span> = <span class="string">&quot;flag = !flag&quot;</span>&gt;</span>Toggle Flag<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span> = <span class="string">&quot;flag&quot;</span>&gt;</span>请求成功---被v-if控制<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span> = <span class="string">&quot;flag&quot;</span>&gt;</span>请求成功---被v-show控制<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// flag用来控制元素的显示与隐藏</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 值为true时显示元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 值为false时隐藏元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">flag</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="条件渲染指令：v-else和v-else-if"   >
          <a href="#条件渲染指令：v-else和v-else-if" class="heading-link"><i class="fas fa-link"></i></a><a href="#条件渲染指令：v-else和v-else-if" class="headerlink" title="条件渲染指令：v-else和v-else-if"></a>条件渲染指令：v-else和v-else-if</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span> = <span class="string">&quot;num &gt; 0.5&quot;</span>&gt;</span>随机数 &gt; 0.5<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span>随机数 ≤ 0.5<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span> = <span class="string">&quot;type === &#x27;A&#x27;&quot;</span>&gt;</span>优秀<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else-if</span> = <span class="string">&quot;type === &#x27;B&#x27;&quot;</span>&gt;</span>良好<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else-if</span> = <span class="string">&quot;type === &#x27;C&#x27;&quot;</span>&gt;</span>一般<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span>差<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 生成1以内的随机数</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">num</span>:<span class="title class_">Math</span>.<span class="title function_">random</span>(),</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 类型</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">type</span>:<span class="string">&#x27;A&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="列表渲染指令"   >
          <a href="#列表渲染指令" class="heading-link"><i class="fas fa-link"></i></a><a href="#列表渲染指令" class="headerlink" title="列表渲染指令"></a>列表渲染指令</h3>
      
        <h4 id="源码-8"   >
          <a href="#源码-8" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-8" class="headerlink" title="源码"></a>源码</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span> = <span class="string">&quot;user in list&quot;</span>&gt;</span>姓名是：&#123;&#123;user.name&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 用户列表的数据</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">list</span>:[</span></span><br><span class="line"><span class="language-javascript">          &#123;<span class="attr">id</span>:<span class="number">1</span>,<span class="attr">name</span>:<span class="string">&#x27;Tom&#x27;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123;<span class="attr">id</span>:<span class="number">2</span>,<span class="attr">name</span>:<span class="string">&#x27;John&#x27;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">      ],</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="索引源码"   >
          <a href="#索引源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#索引源码" class="headerlink" title="索引源码"></a>索引源码</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span> = <span class="string">&quot;(user,i) in list&quot;</span>&gt;</span>索引是：&#123;&#123;i&#125;&#125;，姓名是：&#123;&#123;user.name&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 用户列表的数据</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">list</span>:[</span></span><br><span class="line"><span class="language-javascript">          &#123;<span class="attr">id</span>:<span class="number">1</span>,<span class="attr">name</span>:<span class="string">&#x27;Tom&#x27;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123;<span class="attr">id</span>:<span class="number">2</span>,<span class="attr">name</span>:<span class="string">&#x27;John&#x27;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">      ],</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h2 id="过滤器Filters"   >
          <a href="#过滤器Filters" class="heading-link"><i class="fas fa-link"></i></a><a href="#过滤器Filters" class="headerlink" title="过滤器Filters"></a>过滤器Filters</h2>
      <!-- No header, With icon -->

    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>常用于文本的格式化</p>
    </div>
  

<p>可以用在<strong>插值表达式</strong>和<strong>v-bind属性绑定</strong></p>

        <h3 id="声明和使用过滤器"   >
          <a href="#声明和使用过滤器" class="heading-link"><i class="fas fa-link"></i></a><a href="#声明和使用过滤器" class="headerlink" title="声明和使用过滤器"></a>声明和使用过滤器</h3>
      
        <h4 id="源码-9"   >
          <a href="#源码-9" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-9" class="headerlink" title="源码"></a>源码</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">:title</span>=<span class="string">&quot;info | capitalize&quot;</span>&gt;</span>&#123;&#123;message | capitalize&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">message</span>: <span class="string">&#x27;hello vue.js&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">info</span>: <span class="string">&#x27;title info&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">filters</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">capitalize</span>(<span class="params">str</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">return</span> str.<span class="title function_">charAt</span>(<span class="number">0</span>).<span class="title function_">toUpperCase</span>() + str.<span class="title function_">slice</span>(<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="私有过滤器和全局过滤器"   >
          <a href="#私有过滤器和全局过滤器" class="heading-link"><i class="fas fa-link"></i></a><a href="#私有过滤器和全局过滤器" class="headerlink" title="私有过滤器和全局过滤器"></a>私有过滤器和全局过滤器</h3>
      <!-- No header, With icon -->

    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>私有过滤器与全局过滤器重名时，私有过滤器生效</p>
    </div>
  


        <h4 id="私有过滤器"   >
          <a href="#私有过滤器" class="heading-link"><i class="fas fa-link"></i></a><a href="#私有过滤器" class="headerlink" title="私有过滤器"></a>私有过滤器</h4>
      <p>在filter节点下定义的过滤器称为<strong>私有过滤器</strong>,只能被当前的vm所控制的区域所使用</p>

        <h4 id="全局过滤器"   >
          <a href="#全局过滤器" class="heading-link"><i class="fas fa-link"></i></a><a href="#全局过滤器" class="headerlink" title="全局过滤器"></a>全局过滤器</h4>
      <p>在多个Vue实例之间共享过滤器</p>

        <h5 id="源码-10"   >
          <a href="#源码-10" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-10" class="headerlink" title="源码"></a>源码</h5>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">:title</span>=<span class="string">&quot;info | capitalize&quot;</span>&gt;</span>&#123;&#123;message | capitalize&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;abc | capitalize&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="title function_">filter</span>(<span class="string">&#x27;capitalize&#x27;</span>, <span class="function">(<span class="params">str</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> str.<span class="title function_">charAt</span>(<span class="number">0</span>).<span class="title function_">toUpperCase</span>() + str.<span class="title function_">slice</span>(<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">message</span>: <span class="string">&#x27;hello vue.js&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">info</span>: <span class="string">&#x27;title info&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 私有过滤器,只能被当前的vm所控制的区域所使用</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">filters</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">capitalize</span>(<span class="params">str</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">return</span> str.<span class="title function_">charAt</span>(<span class="number">0</span>).<span class="title function_">toUpperCase</span>() + str.<span class="title function_">slice</span>(<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm2 = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app2&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">abc</span>: <span class="string">&#x27;abc&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="连续调用多个过滤器"   >
          <a href="#连续调用多个过滤器" class="heading-link"><i class="fas fa-link"></i></a><a href="#连续调用多个过滤器" class="headerlink" title="连续调用多个过滤器"></a>连续调用多个过滤器</h3>
      
        <h4 id="源码-11"   >
          <a href="#源码-11" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-11" class="headerlink" title="源码"></a>源码</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">:title</span>=<span class="string">&quot;info | capitalize&quot;</span>&gt;</span>&#123;&#123;message | capitalize | maxLength&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 全局过滤器</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 首字母转大写的过滤器</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="title function_">filter</span>(<span class="string">&#x27;capitalize&#x27;</span>, <span class="function">(<span class="params">str</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> str.<span class="title function_">charAt</span>(<span class="number">0</span>).<span class="title function_">toUpperCase</span>() + str.<span class="title function_">slice</span>(<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 定义控制文本长度的过滤器</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="title function_">filter</span>(<span class="string">&#x27;maxLength&#x27;</span>, <span class="function">(<span class="params">str</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span>(str.<span class="property">length</span> &lt;= <span class="number">10</span>) <span class="keyword">return</span> str</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> str.<span class="title function_">slice</span>(<span class="number">0</span>,<span class="number">10</span>) + <span class="string">&#x27;...&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">message</span>: <span class="string">&#x27;hello vue.js&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">info</span>: <span class="string">&#x27;title&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="过滤器传参"   >
          <a href="#过滤器传参" class="heading-link"><i class="fas fa-link"></i></a><a href="#过滤器传参" class="headerlink" title="过滤器传参"></a>过滤器传参</h3>
      
        <h4 id="源码-12"   >
          <a href="#源码-12" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-12" class="headerlink" title="源码"></a>源码</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">:title</span>=<span class="string">&quot;info | capitalize&quot;</span>&gt;</span>&#123;&#123;message | capitalize | maxLength(3)&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 全局过滤器</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 首字母转大写的过滤器</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="title function_">filter</span>(<span class="string">&#x27;capitalize&#x27;</span>, <span class="function">(<span class="params">str</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> str.<span class="title function_">charAt</span>(<span class="number">0</span>).<span class="title function_">toUpperCase</span>() + str.<span class="title function_">slice</span>(<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 定义控制文本长度的过滤器</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="title function_">filter</span>(<span class="string">&#x27;maxLength&#x27;</span>, <span class="function">(<span class="params">str, len = <span class="number">10</span></span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span>(str.<span class="property">length</span> &lt;= len) <span class="keyword">return</span> str</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> str.<span class="title function_">slice</span>(<span class="number">0</span>,len) + <span class="string">&#x27;...&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">message</span>: <span class="string">&#x27;hello vue.js&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">info</span>: <span class="string">&#x27;title&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>

]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue-Webpack-CSS</title>
    <url>/2024/10/16/VueWebPackCSS/</url>
    <content><![CDATA[
        <h1 id="Vue-Webpack-打包处理CSS"   >
          <a href="#Vue-Webpack-打包处理CSS" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vue-Webpack-打包处理CSS" class="headerlink" title="Vue-Webpack-打包处理CSS"></a>Vue-Webpack-打包处理CSS</h1>
      <!-- No header, With icon -->

    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>webpack默认只能打包以.js后缀名结尾的模块；<br>非.js后缀名结尾的模块需要调用loader加载器才能正常打包</p>
    </div>
  

<ul>
<li><p>css-loader可以打包处理.css相关的文件</p>
</li>
<li><p>less-loader可以打包处理.less相关的文件</p>
</li>
<li><p>babel-loader将ES6+代码转换为向后兼容的js代码</p>
</li>
</ul>

        <h2 id="初始化"   >
          <a href="#初始化" class="heading-link"><i class="fas fa-link"></i></a><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2>
      
        <h3 id="步骤一-安装css-loader-style-loader"   >
          <a href="#步骤一-安装css-loader-style-loader" class="heading-link"><i class="fas fa-link"></i></a><a href="#步骤一-安装css-loader-style-loader" class="headerlink" title="(步骤一)安装css-loader,style-loader"></a>(步骤一)安装css-loader,style-loader</h3>
      <blockquote>
<p>npm install style-loader css-loader -D</p>
</blockquote>

        <h3 id="步骤二-在index-js中导入index-css"   >
          <a href="#步骤二-在index-js中导入index-css" class="heading-link"><i class="fas fa-link"></i></a><a href="#步骤二-在index-js中导入index-css" class="headerlink" title="(步骤二)在index.js中导入index.css"></a>(步骤二)在index.js中导入index.css</h3>
      <blockquote>
<p>import ‘./index.css’</p>
</blockquote>

        <h3 id="步骤三-在webpack-config-js的module-gt-rules数组中添加loader规则"   >
          <a href="#步骤三-在webpack-config-js的module-gt-rules数组中添加loader规则" class="heading-link"><i class="fas fa-link"></i></a><a href="#步骤三-在webpack-config-js的module-gt-rules数组中添加loader规则" class="headerlink" title="(步骤三)在webpack.config.js的module-&gt;rules数组中添加loader规则"></a>(步骤三)在webpack.config.js的module-&gt;rules数组中添加loader规则</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">mode</span>:<span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">  <span class="attr">module</span>:&#123;</span><br><span class="line">    <span class="attr">rules</span>:[</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>:<span class="regexp">/\.css$/i</span>,</span><br><span class="line">        <span class="attr">use</span>:[<span class="string">&quot;style-loader&quot;</span>,<span class="string">&quot;css-loader&quot;</span>],</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="步骤四-重新打包"   >
          <a href="#步骤四-重新打包" class="heading-link"><i class="fas fa-link"></i></a><a href="#步骤四-重新打包" class="headerlink" title="(步骤四)重新打包"></a>(步骤四)重新打包</h3>
      <blockquote>
<p>npm run build</p>
</blockquote>

        <h2 id="源码"   >
          <a href="#源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码" class="headerlink" title="源码"></a>源码</h2>
      
        <h3 id="index-css"   >
          <a href="#index-css" class="heading-link"><i class="fas fa-link"></i></a><a href="#index-css" class="headerlink" title="index.css"></a>index.css</h3>
      <figure class="highlight css"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">list-style</span>:none;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="index-html"   >
          <a href="#index-html" class="heading-link"><i class="fas fa-link"></i></a><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h3>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>A1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>A2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>A3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>A4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>A5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>A6<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>A7<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;../dist/main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="index-js"   >
          <a href="#index-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h3>
      <blockquote>
<p>import ‘./index.css’</p>
</blockquote>
<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">&#x27;jquery&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./index.css&#x27;</span></span><br><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  $(<span class="string">&#x27;li:odd&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background-color&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line">  $(<span class="string">&#x27;li:even&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background-color&#x27;</span>,<span class="string">&#x27;pink&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure>


        <h3 id="package-json"   >
          <a href="#package-json" class="heading-link"><i class="fas fa-link"></i></a><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3>
      <figure class="highlight json"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;caser&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;css-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.7.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;style-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.3.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.75.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.0.1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;jquery&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.6.3&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="webpack-config-js"   >
          <a href="#webpack-config-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#webpack-config-js" class="headerlink" title="webpack.config.js"></a>webpack.config.js</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">mode</span>:<span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">  <span class="attr">module</span>:&#123;</span><br><span class="line">    <span class="attr">rules</span>:[</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>:<span class="regexp">/\.css$/i</span>,</span><br><span class="line">        <span class="attr">use</span>:[<span class="string">&quot;style-loader&quot;</span>,<span class="string">&quot;css-loader&quot;</span>],</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
      <categories>
        <category>Vue</category>
        <category>webpack</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>webpack</tag>
        <tag>jquery</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue-Webpack-ES6</title>
    <url>/2024/10/16/VueWebpackES6/</url>
    <content><![CDATA[
        <h1 id="Vue-Webpack-ES6模块化"   >
          <a href="#Vue-Webpack-ES6模块化" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vue-Webpack-ES6模块化" class="headerlink" title="Vue-Webpack-ES6模块化"></a>Vue-Webpack-ES6模块化</h1>
      
        <h2 id="源码"   >
          <a href="#源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码" class="headerlink" title="源码"></a>源码</h2>
      
        <h3 id="步骤一-代码导出"   >
          <a href="#步骤一-代码导出" class="heading-link"><i class="fas fa-link"></i></a><a href="#步骤一-代码导出" class="headerlink" title="(步骤一)代码导出"></a>(步骤一)代码导出</h3>
      
        <h4 id="基本变量的导出方式"   >
          <a href="#基本变量的导出方式" class="heading-link"><i class="fas fa-link"></i></a><a href="#基本变量的导出方式" class="headerlink" title="基本变量的导出方式"></a>基本变量的导出方式</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// info.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> name = <span class="string">&#x27;Tom&#x27;</span></span><br><span class="line"><span class="keyword">let</span> age = <span class="number">22</span></span><br><span class="line"><span class="keyword">let</span> height = <span class="number">181</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;name,age,height&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="函数或类的导出方式"   >
          <a href="#函数或类的导出方式" class="heading-link"><i class="fas fa-link"></i></a><a href="#函数或类的导出方式" class="headerlink" title="函数或类的导出方式"></a>函数或类的导出方式</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// aa.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> sum = a + b</span><br><span class="line">  <span class="keyword">return</span> sum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">person</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">name,age</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = age</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">eat</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span> + <span class="string">&quot;在吃饭&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;foo,person&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="步骤二-代码导入"   >
          <a href="#步骤二-代码导入" class="heading-link"><i class="fas fa-link"></i></a><a href="#步骤二-代码导入" class="headerlink" title="(步骤二)代码导入"></a>(步骤二)代码导入</h3>
      
        <h4 id="导入基本变量"   >
          <a href="#导入基本变量" class="heading-link"><i class="fas fa-link"></i></a><a href="#导入基本变量" class="headerlink" title="导入基本变量"></a>导入基本变量</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> &#123;name,age,height&#125; <span class="keyword">from</span> <span class="string">&#x27;./info.js&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name,age,height)</span><br></pre></td></tr></table></div></figure>


        <h4 id="导入函数或类"   >
          <a href="#导入函数或类" class="heading-link"><i class="fas fa-link"></i></a><a href="#导入函数或类" class="headerlink" title="导入函数或类"></a>导入函数或类</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;person,foo&#125; <span class="keyword">from</span> <span class="string">&#x27;./aa.js&#x27;</span></span><br><span class="line"><span class="keyword">var</span> ldh = <span class="keyword">new</span> <span class="title function_">person</span>(<span class="string">&#x27;刘德华&#x27;</span>,<span class="number">55</span>)</span><br><span class="line">ldh.<span class="title function_">eat</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">foo</span>(<span class="number">11</span>,<span class="number">22</span>))</span><br></pre></td></tr></table></div></figure>


        <h3 id="步骤三-使用webpack打包代码"   >
          <a href="#步骤三-使用webpack打包代码" class="heading-link"><i class="fas fa-link"></i></a><a href="#步骤三-使用webpack打包代码" class="headerlink" title="(步骤三)使用webpack打包代码"></a>(步骤三)使用webpack打包代码</h3>
      <blockquote>
<p>npm run build</p>
</blockquote>

        <h3 id="步骤四-在index-html中引入打包后的文件"   >
          <a href="#步骤四-在index-html中引入打包后的文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#步骤四-在index-html中引入打包后的文件" class="headerlink" title="(步骤四)在index.html中引入打包后的文件"></a>(步骤四)在index.html中引入打包后的文件</h3>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;../dist/main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h2 id="练习一"   >
          <a href="#练习一" class="heading-link"><i class="fas fa-link"></i></a><a href="#练习一" class="headerlink" title="练习一"></a>练习一</h2>
      
        <h3 id="题目"   >
          <a href="#题目" class="heading-link"><i class="fas fa-link"></i></a><a href="#题目" class="headerlink" title="题目"></a>题目</h3>
      <p>写一个功能模块(area.js)，内含求圆形面积与长方形面积的两个函数，并将这<br>两个函数导出给项目使用</p>

        <h3 id="源码-1"   >
          <a href="#源码-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-1" class="headerlink" title="源码"></a>源码</h3>
      
        <h4 id="area-js"   >
          <a href="#area-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#area-js" class="headerlink" title="area.js"></a>area.js</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">circleArea</span>(<span class="params">r</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> area = <span class="number">3.1416</span> * r * r</span><br><span class="line">  <span class="keyword">return</span> area</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">rectArea</span>(<span class="params">length,width</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> area = length * width</span><br><span class="line">  <span class="keyword">return</span> area</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;circleArea,rectArea&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="index-js"   >
          <a href="#index-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 导入jquery</span></span><br><span class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">&#x27;jquery&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;circleArea,rectArea&#125; <span class="keyword">from</span> <span class="string">&#x27;./area.js&#x27;</span></span><br><span class="line">$(<span class="string">&#x27;#rect&#x27;</span>).<span class="title function_">html</span>(<span class="title function_">rectArea</span>(<span class="number">30</span>,<span class="number">60</span>))</span><br><span class="line">$(<span class="string">&#x27;#circle&#x27;</span>).<span class="title function_">html</span>(<span class="title function_">circleArea</span>(<span class="number">6</span>))</span><br></pre></td></tr></table></div></figure>


        <h4 id="area-html"   >
          <a href="#area-html" class="heading-link"><i class="fas fa-link"></i></a><a href="#area-html" class="headerlink" title="area.html"></a>area.html</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>长30，宽60的长方形面积为<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span> = <span class="string">&quot;rect&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>半径为6的圆面积<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span> = <span class="string">&quot;circle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;../dist/main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h2 id="练习二"   >
          <a href="#练习二" class="heading-link"><i class="fas fa-link"></i></a><a href="#练习二" class="headerlink" title="练习二"></a>练习二</h2>
      
        <h3 id="题目-1"   >
          <a href="#题目-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3>
      <p>写一个功能模块，内含恺撒密码加密与解密函数，并将这两个函数导出给项目<br>使用</p>

        <h3 id="说明"   >
          <a href="#说明" class="heading-link"><i class="fas fa-link"></i></a><a href="#说明" class="headerlink" title="说明"></a>说明</h3>
      <p>说明：密钥是1到25的整数，忽视英文大写。该密码旋转字母表（A到Z的字母。编码将每个字母替换为字母表中的第1到25个下一个字母（将Z的下一个字母是A)</p>
<p>例如：密钥为2，明文：hello 密文:ignnqq</p>
<p>abcdefghijklmnopqrstuvwxyz</p>

        <h3 id="源码-2"   >
          <a href="#源码-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-2" class="headerlink" title="源码"></a>源码</h3>
      
        <h4 id="caser-js"   >
          <a href="#caser-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#caser-js" class="headerlink" title="caser.js"></a>caser.js</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 加密</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">encode</span>(<span class="params">str,key</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> result = <span class="string">&quot;&quot;</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; str.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(str.<span class="title function_">charCodeAt</span>(i) &gt;= <span class="number">65</span> &amp;&amp; str.<span class="title function_">charCodeAt</span>(i) &lt;= <span class="number">90</span>) &#123;</span><br><span class="line">          result += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>((str.<span class="title function_">charCodeAt</span>(i) - <span class="number">65</span> + key + <span class="number">26</span>) % <span class="number">26</span> + <span class="number">65</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (str.<span class="title function_">charCodeAt</span>(i) &gt;= <span class="number">97</span> &amp;&amp; str.<span class="title function_">charCodeAt</span>(i) &lt;= <span class="number">122</span>) &#123;</span><br><span class="line">          result += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>((str.<span class="title function_">charCodeAt</span>(i) - <span class="number">97</span> + key + <span class="number">26</span>) % <span class="number">26</span> + <span class="number">97</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> result += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(str.<span class="title function_">charCodeAt</span>(i));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解密</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">decode</span>(<span class="params">str,key</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span>  result = <span class="string">&quot;&quot;</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; str.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (str.<span class="title function_">charCodeAt</span>(i) &gt;= <span class="number">65</span> &amp;&amp; str.<span class="title function_">charCodeAt</span>(i) &lt;= <span class="number">90</span>) &#123;</span><br><span class="line">          result += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>((str.<span class="title function_">charCodeAt</span>(i) - <span class="number">65</span> - key + <span class="number">26</span>) % <span class="number">26</span> + <span class="number">65</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (str.<span class="title function_">charCodeAt</span>(i) &gt;= <span class="number">97</span> &amp;&amp; str.<span class="title function_">charCodeAt</span>(i) &lt;= <span class="number">122</span>) &#123;</span><br><span class="line">          result += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>((str.<span class="title function_">charCodeAt</span>(i) - <span class="number">97</span> - key + <span class="number">26</span>) % <span class="number">26</span> + <span class="number">97</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> result += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(str.<span class="title function_">charCodeAt</span>(i));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;encode,decode&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="index-js-1"   >
          <a href="#index-js-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#index-js-1" class="headerlink" title="index.js"></a>index.js</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 导入jquery</span></span><br><span class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">&#x27;jquery&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;encode,decode&#125; <span class="keyword">from</span> <span class="string">&#x27;./caser.js&#x27;</span></span><br><span class="line">$(<span class="string">&#x27;#encode&#x27;</span>).<span class="title function_">html</span>(<span class="title function_">encode</span>(<span class="string">&#x27;hello&#x27;</span>,<span class="number">2</span>))</span><br><span class="line">$(<span class="string">&#x27;#decode&#x27;</span>).<span class="title function_">html</span>(<span class="title function_">decode</span>(<span class="string">&#x27;jgnnq&#x27;</span>,<span class="number">2</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello加密结果:&#x27;</span>,<span class="title function_">encode</span>(<span class="string">&#x27;hello&#x27;</span>,<span class="number">2</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;jgnnq解密结果:&#x27;</span>,<span class="title function_">decode</span>(<span class="string">&#x27;jgnnq&#x27;</span>,<span class="number">2</span>))</span><br></pre></td></tr></table></div></figure>


        <h4 id="caser-html"   >
          <a href="#caser-html" class="heading-link"><i class="fas fa-link"></i></a><a href="#caser-html" class="headerlink" title="caser.html"></a>caser.html</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&quot;hello&quot;加密：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span> = <span class="string">&quot;encode&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&quot;jgnnq&quot;解密：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span> = <span class="string">&quot;decode&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;../dist/main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>]]></content>
      <categories>
        <category>Vue</category>
        <category>webpack</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>webpack</tag>
        <tag>ES6</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue基础</title>
    <url>/2024/10/16/Vue%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[
        <h1 id="Vue-基础-模板语法"   >
          <a href="#Vue-基础-模板语法" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vue-基础-模板语法" class="headerlink" title="Vue 基础-模板语法"></a>Vue 基础-模板语法</h1>
      
        <h2 id="源码"   >
          <a href="#源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码" class="headerlink" title="源码"></a>源码</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;hello&quot;&gt;</span><br><span class="line">    &lt;h3&gt;学习Vue：模板语法&lt;/h3&gt;</span><br><span class="line">    &lt;!--      最基本的数据绑定形式是文本插值，使用双花括号--&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;!--      双花括号将数据解释为纯文本，若需插入html，需要使用v-html指令--&gt;</span><br><span class="line">    &lt;div&gt;&#123;&#123; rawHtml &#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;div v-html=&quot;rawHtml&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;!--      响应式地绑定一个属性attribute--&gt;</span><br><span class="line">    &lt;div :id=&quot;dynamicId&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;!--      vue的数据绑定中支持完整的js表达式--&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; num + 10 &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; flag ? &quot;对的&quot; : &quot;错的&quot; &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;HelloWorld&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      message: &quot;测试&quot;,</span><br><span class="line">      rawHtml: &#x27;&lt;a href=&quot;https://www.baidu.com&quot;&gt;百度网页&lt;/a&gt;&#x27;,</span><br><span class="line">      dynamicId: 10000,</span><br><span class="line">      num: 10,</span><br><span class="line">      flag: true,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Add &quot;scoped&quot; attribute to limit CSS to this component only --&gt;</span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h1 id="Vue-基础-条件渲染"   >
          <a href="#Vue-基础-条件渲染" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vue-基础-条件渲染" class="headerlink" title="Vue 基础-条件渲染"></a>Vue 基础-条件渲染</h1>
      
        <h2 id="源码-1"   >
          <a href="#源码-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-1" class="headerlink" title="源码"></a>源码</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;hello&quot;&gt;</span><br><span class="line">    &lt;p&gt;v-if用于判断条件是否为真,显示如下:&lt;/p&gt;</span><br><span class="line">    &lt;!--      v-if用于条件性地渲染一块内容,表达式为真值时才被渲染--&gt;</span><br><span class="line">    &lt;p v-if=&quot;flag&quot;&gt;✅对的&lt;/p&gt;</span><br><span class="line">    &lt;p v-else&gt;❌错的&lt;/p&gt;</span><br><span class="line">    &lt;!--      另一个用来按条件显示一个元素的指令是v-show--&gt;</span><br><span class="line">    &lt;p v-show=&quot;show&quot;&gt;✅展示对的&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;HelloWorld&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      flag: true,</span><br><span class="line">      show: true,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Add &quot;scoped&quot; attribute to limit CSS to this component only --&gt;</span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h1 id="Vue-基础-列表渲染"   >
          <a href="#Vue-基础-列表渲染" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vue-基础-列表渲染" class="headerlink" title="Vue 基础-列表渲染"></a>Vue 基础-列表渲染</h1>
      
        <h2 id="源码-2"   >
          <a href="#源码-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-2" class="headerlink" title="源码"></a>源码</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;hello&quot;&gt;</span><br><span class="line">    &lt;!--      使用v-for指令基于一个数组来渲染一个列表--&gt;</span><br><span class="line">    &lt;h3&gt;列表渲染：&lt;/h3&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;!--          item代表数组中的每一个元素，是迭代项的别名,newsList是源数组--&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in newsList&quot;&gt;</span><br><span class="line">        &lt;!--              只展示id--&gt;</span><br><span class="line">        &#123;&#123; item.id &#125;&#125;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">      &lt;p&gt;-----------分割线--------&lt;/p&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in newsList&quot;&gt;</span><br><span class="line">        &lt;!--              只展示title--&gt;</span><br><span class="line">        &#123;&#123; item.title &#125;&#125;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">      &lt;p&gt;-----------分割线--------&lt;/p&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in newsList&quot;&gt;</span><br><span class="line">        &lt;!--              展示源数据--&gt;</span><br><span class="line">        &#123;&#123; item &#125;&#125;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;HelloWorld&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      // newsList是源数据数据，包含3组数据，2个属性分别是id和title</span><br><span class="line">      newsList: [</span><br><span class="line">        &#123;</span><br><span class="line">          id: 1001,</span><br><span class="line">          title: &quot;新闻1&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: 1002,</span><br><span class="line">          title: &quot;新闻2&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: 1003,</span><br><span class="line">          title: &quot;新闻3&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Add &quot;scoped&quot; attribute to limit CSS to this component only --&gt;</span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h2 id="⭐-区分-v-if-和-v-show"   >
          <a href="#⭐-区分-v-if-和-v-show" class="heading-link"><i class="fas fa-link"></i></a><a href="#⭐-区分-v-if-和-v-show" class="headerlink" title="⭐ 区分 v-if 和 v-show"></a>⭐ 区分 v-if 和 v-show</h2>
      
    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>区分 v-if 和 v-show</p>
    </div>
  

<details>
<summary>v-if<summary>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">在切换过程中，条件块内的事件监听器和子组件会被适当地销毁和重建;</span><br><span class="line">惰性的，适用于偶尔切换</span><br></pre></td></tr></table></div></figure>
<details>

<details>
<summary>v-show<summary>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">基于CSS进行切换；</span><br><span class="line">适用于频繁切换</span><br></pre></td></tr></table></div></figure>
<details>


        <h1 id="Vue-基础-列表渲染-1"   >
          <a href="#Vue-基础-列表渲染-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vue-基础-列表渲染-1" class="headerlink" title="Vue 基础-列表渲染"></a>Vue 基础-列表渲染</h1>
      
        <h2 id="源码-3"   >
          <a href="#源码-3" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-3" class="headerlink" title="源码"></a>源码</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;hello&quot;&gt;</span><br><span class="line">    &lt;!--      使用v-for指令基于一个数组来渲染一个列表--&gt;</span><br><span class="line">    &lt;h3&gt;列表渲染：&lt;/h3&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;!--          item代表数组中的每一个元素，是迭代项的别名,newsList是源数组--&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in newsList&quot;&gt;</span><br><span class="line">        &lt;!--              只展示id--&gt;</span><br><span class="line">        &#123;&#123; item.id &#125;&#125;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">      &lt;p&gt;-----------分割线--------&lt;/p&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in newsList&quot;&gt;</span><br><span class="line">        &lt;!--              只展示title--&gt;</span><br><span class="line">        &#123;&#123; item.title &#125;&#125;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">      &lt;p&gt;-----------分割线--------&lt;/p&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in newsList&quot;&gt;</span><br><span class="line">        &lt;!--              展示源数据--&gt;</span><br><span class="line">        &#123;&#123; item &#125;&#125;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;HelloWorld&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      // newsList是源数据数据，包含3组数据，2个属性分别是id和title</span><br><span class="line">      newsList: [</span><br><span class="line">        &#123;</span><br><span class="line">          id: 1001,</span><br><span class="line">          title: &quot;新闻1&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: 1002,</span><br><span class="line">          title: &quot;新闻2&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: 1003,</span><br><span class="line">          title: &quot;新闻3&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Add &quot;scoped&quot; attribute to limit CSS to this component only --&gt;</span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h2 id="⭐-维护状态"   >
          <a href="#⭐-维护状态" class="heading-link"><i class="fas fa-link"></i></a><a href="#⭐-维护状态" class="headerlink" title="⭐ 维护状态"></a>⭐ 维护状态</h2>
      <blockquote>
<p>就地更新策略<br>如果数据项内容有新增，只渲染新增数据项</p>
</blockquote>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;li v-for=&quot;item in newsList&quot; :key=&quot;item.id&quot;&gt;</span><br></pre></td></tr></table></div></figure>

<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;hello&quot;&gt;</span><br><span class="line">    &lt;!--      使用v-for指令基于一个数组来渲染一个列表--&gt;</span><br><span class="line">    &lt;h3&gt;列表渲染：&lt;/h3&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;!--          item代表数组中的每一个元素，是迭代项的别名,newsList是源数组，key确保唯一索引--&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in newsList&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">        &lt;!--              只展示id--&gt;</span><br><span class="line">        &#123;&#123; item.id &#125;&#125;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">      &lt;p&gt;-----------分割线--------&lt;/p&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in newsList&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">        &lt;!--              只展示title--&gt;</span><br><span class="line">        &#123;&#123; item.title &#125;&#125;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">      &lt;p&gt;-----------分割线--------&lt;/p&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in newsList&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">        &lt;!--              展示源数据--&gt;</span><br><span class="line">        &#123;&#123; item &#125;&#125;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;HelloWorld&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      // newsList是源数据数据，包含3组数据，2个属性分别是id和title</span><br><span class="line">      newsList: [</span><br><span class="line">        &#123;</span><br><span class="line">          id: 1001,</span><br><span class="line">          title: &quot;新闻1&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: 1002,</span><br><span class="line">          title: &quot;新闻2&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: 1003,</span><br><span class="line">          title: &quot;新闻3&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: 1004,</span><br><span class="line">          title: &quot;新闻4&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Add &quot;scoped&quot; attribute to limit CSS to this component only --&gt;</span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h1 id="Vue-基础-事件处理"   >
          <a href="#Vue-基础-事件处理" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vue-基础-事件处理" class="headerlink" title="Vue 基础-事件处理"></a>Vue 基础-事件处理</h1>
      
        <h2 id="源码-1"   >
          <a href="#源码-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-1" class="headerlink" title="源码 1"></a>源码 1</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;hello&quot;&gt;</span><br><span class="line">    &lt;!--      使用 v-on 指令 (简写为 @) 来监听 DOM 事件，并在事件触发时执行对应的 JavaScript--&gt;</span><br><span class="line">    &lt;p&gt;内联事件处理器：&lt;/p&gt;</span><br><span class="line">    &lt;button @click=&quot;counter++&quot;&gt;点击:counter=&#123;&#123; counter &#125;&#125;&lt;/button&gt;</span><br><span class="line">    &lt;!--      v-on 也可以接受一个方法名或对某个方法的调用--&gt;</span><br><span class="line">    &lt;p&gt;方法事件处理器：&lt;/p&gt;</span><br><span class="line">    &lt;!--     示例一：显示弹窗--&gt;</span><br><span class="line">    &lt;button @click=&quot;clickHandle&quot;&gt;按钮&lt;/button&gt;</span><br><span class="line">    &lt;!--      示例二：修改文本--&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;HelloWorld&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      // counter默认初始值为10</span><br><span class="line">      counter: 10,</span><br><span class="line">      message: &quot;消息通知&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    clickHandle(event) &#123;</span><br><span class="line">      alert(&quot;已点击！&quot;);</span><br><span class="line">      //     在事件中，读取data中的属性，需要通过this.属性指令</span><br><span class="line">      this.message = &quot;新消息通知&quot;;</span><br><span class="line">      // event是原生DOM event</span><br><span class="line">      console.log(event);</span><br><span class="line">      event.target.innerText = &quot;点击之后的按钮&quot;;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Add &quot;scoped&quot; attribute to limit CSS to this component only --&gt;</span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h2 id="源码-2"   >
          <a href="#源码-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-2" class="headerlink" title="源码 2"></a>源码 2</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;hello&quot;&gt;</span><br><span class="line">    &lt;!--      事件处理器中的方法，即“事件传递参数”--&gt;</span><br><span class="line">    &lt;button @click=&quot;say(&#x27;hi&#x27;)&quot;&gt;say hi&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;say(&#x27;what&#x27;)&quot;&gt;say what&lt;/button&gt;</span><br><span class="line">    &lt;p&gt;--------分割线---------&lt;/p&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li</span><br><span class="line">        @click=&quot;clickItemHandle(name)&quot;</span><br><span class="line">        v-for=&quot;(name, index) in names&quot;</span><br><span class="line">        :key=&quot;index&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &#123;&#123; name &#125;&#125;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;HelloWorld&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      names: [&quot;Amy&quot;, &quot;John&quot;, &quot;Simon&quot;],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    say(data) &#123;</span><br><span class="line">      console.log(data);</span><br><span class="line">    &#125;,</span><br><span class="line">    clickItemHandle(name) &#123;</span><br><span class="line">      console.log(name);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Add &quot;scoped&quot; attribute to limit CSS to this component only --&gt;</span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h1 id="Vue-基础-表单输入绑定"   >
          <a href="#Vue-基础-表单输入绑定" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vue-基础-表单输入绑定" class="headerlink" title="Vue 基础-表单输入绑定"></a>Vue 基础-表单输入绑定</h1>
      
        <h2 id="源码-4"   >
          <a href="#源码-4" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-4" class="headerlink" title="源码"></a>源码</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;hello&quot;&gt;</span><br><span class="line">    &lt;!--      表单输入绑定，使用v-model创建双向数据绑定--&gt;</span><br><span class="line">    &lt;!--      使用.lazy修饰符，避免立刻反应，减少性能消耗--&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; v-model.lazy=&quot;username&quot; /&gt;</span><br><span class="line">    &lt;!--      使用.trim修饰符，自动去除用户输入内容中两端的空格--&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; v-model.trim=&quot;password&quot; /&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; username &#125;&#125;,&#123;&#123; password &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;button @click=&quot;clickGetUsername&quot;&gt;获取用户名&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;HelloWorld&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      username: &quot;&quot;,</span><br><span class="line">      password: &quot;&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    clickGetUsername() &#123;</span><br><span class="line">      console.log(this.username);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Add &quot;scoped&quot; attribute to limit CSS to this component only --&gt;</span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue-深入组件</title>
    <url>/2024/10/16/Vue%E6%B7%B1%E5%85%A5%E7%BB%84%E4%BB%B6/</url>
    <content><![CDATA[
        <h1 id="组件基础"   >
          <a href="#组件基础" class="heading-link"><i class="fas fa-link"></i></a><a href="#组件基础" class="headerlink" title="组件基础"></a>组件基础</h1>
      
        <h2 id="源码-App-vue"   >
          <a href="#源码-App-vue" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-App-vue" class="headerlink" title="源码(App.vue)"></a>源码(App.vue)</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;!--相当于根组件--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;img alt=&quot;Vue logo&quot; src=&quot;./assets/logo.png&quot; /&gt;</span><br><span class="line">  &lt;!--    第三步，显示组件--&gt;</span><br><span class="line">  &lt;MyComponent /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import HelloWorld from &quot;./components/HelloWorld.vue&quot;;</span><br><span class="line">// 第一步，引入组件</span><br><span class="line">import MyComponent from &quot;./components/MyComponent.vue&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;App&quot;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    HelloWorld,</span><br><span class="line">    // 第二步挂载组件</span><br><span class="line">    MyComponent,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h1 id="Props-组件交互"   >
          <a href="#Props-组件交互" class="heading-link"><i class="fas fa-link"></i></a><a href="#Props-组件交互" class="headerlink" title="Props 组件交互"></a>Props 组件交互</h1>
      
        <h2 id="源码-MyComponent-vue"   >
          <a href="#源码-MyComponent-vue" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-MyComponent-vue" class="headerlink" title="源码(MyComponent.vue)"></a>源码(MyComponent.vue)</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h3&gt;Props传递数据&lt;/h3&gt;</span><br><span class="line">  &lt;p&gt;&#123;&#123; title &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;age=&#123;&#123; age &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;ul&gt;</span><br><span class="line">    &lt;li v-for=&quot;(item, index) in names&quot; :key=&quot;index&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;MyComponent&quot;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    title: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &quot;&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    age: &#123;</span><br><span class="line">      type: Number,</span><br><span class="line">      default: 0,</span><br><span class="line">    &#125;,</span><br><span class="line">    names: &#123;</span><br><span class="line">      type: Array,</span><br><span class="line">      // 数组和对象必须使用函数进行返回</span><br><span class="line">      default: function () &#123;</span><br><span class="line">        return [];</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h2 id="源码-App-vue-1"   >
          <a href="#源码-App-vue-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-App-vue-1" class="headerlink" title="源码(App.vue)"></a>源码(App.vue)</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;!--相当于根组件--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;img alt=&quot;Vue logo&quot; src=&quot;./assets/logo.png&quot; /&gt;</span><br><span class="line">  &lt;!--    第三步，显示组件--&gt;</span><br><span class="line">  &lt;MyComponent :title=&quot;title&quot; :age=&quot;age&quot; :names=&quot;names&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 第一步，引入组件</span><br><span class="line">import MyComponent from &quot;./components/MyComponent.vue&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;App&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      title: &quot;我是一个标题&quot;,</span><br><span class="line">      age: 20,</span><br><span class="line">      names: [&quot;Amy&quot;, &quot;John&quot;, &quot;Simon&quot;],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    // 第二步挂载组件</span><br><span class="line">    MyComponent,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h2 id="Tips"   >
          <a href="#Tips" class="heading-link"><i class="fas fa-link"></i></a><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2>
      
    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>数据类型为数组或者对象的时候，默认值是需要返回工厂模式</p>
    </div>
  


        <h1 id="自定义事件组件交互"   >
          <a href="#自定义事件组件交互" class="heading-link"><i class="fas fa-link"></i></a><a href="#自定义事件组件交互" class="headerlink" title="自定义事件组件交互"></a>自定义事件组件交互</h1>
      
        <h2 id="Tips-1"   >
          <a href="#Tips-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#Tips-1" class="headerlink" title="Tips"></a>Tips</h2>
      
    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>自定义事件<code>$emit</code>可以将数据从子组件传递到父组件</p>
    </div>
  


        <h2 id="源码-App-vue-2"   >
          <a href="#源码-App-vue-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-App-vue-2" class="headerlink" title="源码(App.vue)"></a>源码(App.vue)</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;!--相当于根组件--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!--    第三步，显示组件--&gt;</span><br><span class="line">  &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;MyComponent @onEvent=&quot;getDataHandle&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 第一步，引入组件</span><br><span class="line">import MyComponent from &quot;./components/MyComponent.vue&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;App&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      message: &quot;&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    // 第二步挂载组件</span><br><span class="line">    MyComponent,</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    getDataHandle(data) &#123;</span><br><span class="line">      this.message = data;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h2 id="源码-MyComponent-vue-1"   >
          <a href="#源码-MyComponent-vue-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-MyComponent-vue-1" class="headerlink" title="源码(MyComponent.vue)"></a>源码(MyComponent.vue)</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h3&gt;自定义事件传递数据&lt;/h3&gt;</span><br><span class="line">  &lt;button @click=&quot;sendClickHandle&quot;&gt;点击传递&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;MyComponent&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      message: &quot;我是MyComponent数据&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    sendClickHandle() &#123;</span><br><span class="line">      // 参数1是字符串，参数2是传递的数据</span><br><span class="line">      this.$emit(&quot;onEvent&quot;, this.message);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h1 id="组件生命周期"   >
          <a href="#组件生命周期" class="heading-link"><i class="fas fa-link"></i></a><a href="#组件生命周期" class="headerlink" title="组件生命周期"></a>组件生命周期</h1>
      
        <h2 id="源码-MyComponent-vue-2"   >
          <a href="#源码-MyComponent-vue-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-MyComponent-vue-2" class="headerlink" title="源码(MyComponent.vue)"></a>源码(MyComponent.vue)</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h3&gt;生命周期函数&lt;/h3&gt;</span><br><span class="line">  &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;button @click=&quot;message = &#x27;数据&#x27;&quot;&gt;点击&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      message: &quot;&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 8个生命周期函数</span><br><span class="line">  beforeCreate() &#123;</span><br><span class="line">    console.log(&quot;beforeCreate:组件创建之前&quot;);</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    console.log(&quot;created:组件创建完成&quot;);</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeMount() &#123;</span><br><span class="line">    console.log(&quot;beforeMount:组件渲染之前&quot;);</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    console.log(&quot;mounted:组件渲染完成&quot;);</span><br><span class="line">    // 把网络请求放在这里</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeUpdate() &#123;</span><br><span class="line">    console.log(&quot;beforeUpdate:组件更新之前&quot;);</span><br><span class="line">  &#125;,</span><br><span class="line">  updated() &#123;</span><br><span class="line">    console.log(&quot;updated:组件更新之后&quot;);</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeUnmount() &#123;</span><br><span class="line">    console.log(&quot;beforeUnmount:组件卸载之前&quot;);</span><br><span class="line">  &#125;,</span><br><span class="line">  unmounted() &#123;</span><br><span class="line">    console.log(&quot;unmounted:组件卸载之后&quot;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>


        <h2 id="源码-App-vue-3"   >
          <a href="#源码-App-vue-3" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-App-vue-3" class="headerlink" title="源码(App.vue)"></a>源码(App.vue)</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;!--相当于根组件--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!--    第三步，显示组件--&gt;</span><br><span class="line">  &lt;MyComponent /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 第一步，引入组件</span><br><span class="line">import MyComponent from &quot;./components/MyComponent.vue&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;App&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      message: &quot;&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    // 第二步挂载组件</span><br><span class="line">    MyComponent,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>AJAX入门与源码(上)</title>
    <url>/2024/10/16/ajax%E5%85%A5%E9%97%A8%E4%B8%8E%E6%BA%90%E7%A0%81(%E4%B8%8A)/</url>
    <content><![CDATA[
        <h1 id="ajax-入门与源码-上"   >
          <a href="#ajax-入门与源码-上" class="heading-link"><i class="fas fa-link"></i></a><a href="#ajax-入门与源码-上" class="headerlink" title="ajax 入门与源码(上)"></a>ajax 入门与源码(上)</h1>
      
        <h2 id="AJAX-概述"   >
          <a href="#AJAX-概述" class="heading-link"><i class="fas fa-link"></i></a><a href="#AJAX-概述" class="headerlink" title="AJAX 概述"></a>AJAX 概述</h2>
      
        <h3 id="简介"   >
          <a href="#简介" class="heading-link"><i class="fas fa-link"></i></a><a href="#简介" class="headerlink" title="简介"></a>简介</h3>
      <p>Asynchronous JavaScript and XML<br>异步的 JS 和 XML</p>

        <h3 id="优点"   >
          <a href="#优点" class="heading-link"><i class="fas fa-link"></i></a><a href="#优点" class="headerlink" title="优点"></a>优点</h3>
      <ol>
<li>无需刷新页面与服务器端进行通信</li>
<li>允许根据用户事件更新部分页面内容</li>
</ol>

        <h3 id="缺点"   >
          <a href="#缺点" class="heading-link"><i class="fas fa-link"></i></a><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3>
      <ol>
<li>没有浏览历史,不能回退</li>
<li>存在跨域问题(同源)</li>
<li>SEO(搜索引擎优化)不友好</li>
</ol>

        <h2 id="AJAX-express-框架介绍与基本使用"   >
          <a href="#AJAX-express-框架介绍与基本使用" class="heading-link"><i class="fas fa-link"></i></a><a href="#AJAX-express-框架介绍与基本使用" class="headerlink" title="AJAX-express 框架介绍与基本使用"></a>AJAX-express 框架介绍与基本使用</h2>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 3.创建路由规则</span></span><br><span class="line"><span class="comment">// 3.1request是对请求报文的封装</span></span><br><span class="line"><span class="comment">// 3.2response是对响应报文的封装</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO EXPRESS&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动,8000端口监听中......&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>


        <h2 id="AJAX-案例"   >
          <a href="#AJAX-案例" class="heading-link"><i class="fas fa-link"></i></a><a href="#AJAX-案例" class="headerlink" title="AJAX 案例"></a>AJAX 案例</h2>
      
        <h3 id="页面源码"   >
          <a href="#页面源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#页面源码" class="headerlink" title="页面源码"></a>页面源码</h3>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-id">#result</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: solid <span class="number">2px</span> darkblue;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>点击发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="js-源码"   >
          <a href="#js-源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#js-源码" class="headerlink" title="js 源码"></a>js 源码</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 3.创建路由规则</span></span><br><span class="line"><span class="comment">// 3.1request是对请求报文的封装</span></span><br><span class="line"><span class="comment">// 3.2response是对响应报文的封装</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动,8000端口监听中......&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>


        <h2 id="AJAX-请求的基本操作"   >
          <a href="#AJAX-请求的基本操作" class="heading-link"><i class="fas fa-link"></i></a><a href="#AJAX-请求的基本操作" class="headerlink" title="AJAX 请求的基本操作"></a>AJAX 请求的基本操作</h2>
      
        <h3 id="GET-页面源码"   >
          <a href="#GET-页面源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#GET-页面源码" class="headerlink" title="GET 页面源码"></a>GET 页面源码</h3>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-id">#result</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: solid <span class="number">2px</span> darkblue;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>点击发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 获取button元素</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;button&quot;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> result = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;result&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 绑定事件</span></span></span><br><span class="line"><span class="language-javascript">      btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 1.创建对象</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 2.初始化,设置请求方法和url</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;http://127.0.0.1:8000/server&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 3.发送</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 4.事件绑定,处理服务端返回的结果</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 判断(服务端返回了所有的结果)</span></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">if</span> (xhr.<span class="property">readyState</span> === <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 判断响应状态码 200 404 403 500</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 2xx表示成功</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (xhr.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span> &lt; <span class="number">300</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="comment">// 处理服务端响应结果 行 头 空行 体</span></span></span><br><span class="line"><span class="language-javascript">              <span class="comment">// 响应</span></span></span><br><span class="line"><span class="language-javascript">              <span class="comment">// console.log(xhr.status); // 状态码</span></span></span><br><span class="line"><span class="language-javascript">              <span class="comment">// console.log(xhr.statusText); //状态字符串</span></span></span><br><span class="line"><span class="language-javascript">              <span class="comment">// console.log(xhr.getAllResponseHeaders()); // 所有的响应头</span></span></span><br><span class="line"><span class="language-javascript">              <span class="comment">// console.log(xhr.response); //响应体</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">              <span class="comment">// 设置result的文本</span></span></span><br><span class="line"><span class="language-javascript">              result.<span class="property">innerHTML</span> = xhr.<span class="property">response</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="js-源码-1"   >
          <a href="#js-源码-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#js-源码-1" class="headerlink" title="js 源码"></a>js 源码</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 3.创建路由规则</span></span><br><span class="line"><span class="comment">// 3.1request是对请求报文的封装</span></span><br><span class="line"><span class="comment">// 3.2response是对响应报文的封装</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动,8000端口监听中......&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>


        <h3 id="AJAX-设置请求参数"   >
          <a href="#AJAX-设置请求参数" class="heading-link"><i class="fas fa-link"></i></a><a href="#AJAX-设置请求参数" class="headerlink" title="AJAX 设置请求参数"></a>AJAX 设置请求参数</h3>
      <blockquote>
<p>xhr.open(“GET”, “<span class="exturl"><a class="exturl__link"   href="http://127.0.0.1:8000/server?a=100&amp;b=200&amp;c=300&quot;" >http://127.0.0.1:8000/server?a=100&amp;b=200&amp;c=300&quot;</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>);</p>
</blockquote>

        <h2 id="AJAX-发送-POST-请求"   >
          <a href="#AJAX-发送-POST-请求" class="heading-link"><i class="fas fa-link"></i></a><a href="#AJAX-发送-POST-请求" class="headerlink" title="AJAX 发送 POST 请求"></a>AJAX 发送 POST 请求</h2>
      
        <h3 id="POST-页面源码"   >
          <a href="#POST-页面源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#POST-页面源码" class="headerlink" title="POST 页面源码"></a>POST 页面源码</h3>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-id">#result</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: solid <span class="number">2px</span> darkorange;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 获取元素对象</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> result = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;result&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 绑定事件</span></span></span><br><span class="line"><span class="language-javascript">      result.<span class="title function_">addEventListener</span>(<span class="string">&quot;mouseover&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 1.创建对象</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 2.初始化,设置请求的类型与URL</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">open</span>(<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;http://127.0.0.1:8000/server&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 3.发送</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 事件绑定</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 判断</span></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">if</span> (xhr.<span class="property">readyState</span> === <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (xhr.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span> &lt; <span class="number">300</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="comment">// 处理服务端返回的结果</span></span></span><br><span class="line"><span class="language-javascript">              result.<span class="property">innerHTML</span> = xhr.<span class="property">response</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="js-源码-2"   >
          <a href="#js-源码-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#js-源码-2" class="headerlink" title="js 源码"></a>js 源码</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 3.创建路由规则</span></span><br><span class="line"><span class="comment">// 3.1request是对请求报文的封装</span></span><br><span class="line"><span class="comment">// 3.2response是对响应报文的封装</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX POST&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动,8000端口监听中......&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>


        <h3 id="POST-设置请求体"   >
          <a href="#POST-设置请求体" class="heading-link"><i class="fas fa-link"></i></a><a href="#POST-设置请求体" class="headerlink" title="POST 设置请求体"></a>POST 设置请求体</h3>
      
        <h4 id="写法一"   >
          <a href="#写法一" class="heading-link"><i class="fas fa-link"></i></a><a href="#写法一" class="headerlink" title="写法一"></a>写法一</h4>
      <blockquote>
<p>xhr.send(“a=100&amp;b=200&amp;c=300”);</p>
</blockquote>

        <h4 id="写法二"   >
          <a href="#写法二" class="heading-link"><i class="fas fa-link"></i></a><a href="#写法二" class="headerlink" title="写法二"></a>写法二</h4>
      <blockquote>
<p>xhr.send(“a:100&amp;b:200&amp;c:300”);</p>
</blockquote>

        <h4 id="写法三"   >
          <a href="#写法三" class="heading-link"><i class="fas fa-link"></i></a><a href="#写法三" class="headerlink" title="写法三"></a>写法三</h4>
      <blockquote>
<p>xhr.send(“100200300”);</p>
</blockquote>

        <h2 id="AJAX-设置请求头信息"   >
          <a href="#AJAX-设置请求头信息" class="heading-link"><i class="fas fa-link"></i></a><a href="#AJAX-设置请求头信息" class="headerlink" title="AJAX 设置请求头信息"></a>AJAX 设置请求头信息</h2>
      
        <h3 id="POST-页面源码-1"   >
          <a href="#POST-页面源码-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#POST-页面源码-1" class="headerlink" title="POST 页面源码"></a>POST 页面源码</h3>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">// 设置请求头</span><br><span class="line">        xhr.setRequestHeader(</span><br><span class="line">          &quot;Content-Type&quot;,</span><br><span class="line">          &quot;application/x-www.form-urlencoded&quot;</span><br><span class="line">        );</span><br><span class="line">        xhr.setRequestHeader(&quot;name&quot;, &quot;mypost&quot;);</span><br></pre></td></tr></table></div></figure>

<figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-id">#result</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: solid <span class="number">2px</span> darkorange;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 获取元素对象</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> result = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;result&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 绑定事件</span></span></span><br><span class="line"><span class="language-javascript">      result.<span class="title function_">addEventListener</span>(<span class="string">&quot;mouseover&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 1.创建对象</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 2.初始化,设置请求的类型与URL</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">open</span>(<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;http://127.0.0.1:8000/server&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 设置请求头</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">setRequestHeader</span>(</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&quot;Content-Type&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&quot;application/x-www.form-urlencoded&quot;</span></span></span><br><span class="line"><span class="language-javascript">        );</span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;mypost&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 3.发送</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">send</span>(<span class="string">&quot;a=100&amp;b=200&amp;c=300&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 事件绑定</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 判断</span></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">if</span> (xhr.<span class="property">readyState</span> === <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (xhr.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span> &lt; <span class="number">300</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="comment">// 处理服务端返回的结果</span></span></span><br><span class="line"><span class="language-javascript">              result.<span class="property">innerHTML</span> = xhr.<span class="property">response</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="js-源码-3"   >
          <a href="#js-源码-3" class="heading-link"><i class="fas fa-link"></i></a><a href="#js-源码-3" class="headerlink" title="js 源码"></a>js 源码</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 3.创建路由规则</span></span><br><span class="line"><span class="comment">// 3.1request是对请求报文的封装</span></span><br><span class="line"><span class="comment">// 3.2response是对响应报文的封装</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX POST&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动,8000端口监听中......&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>


        <h2 id="AJAX-服务端响应-JSON-数据"   >
          <a href="#AJAX-服务端响应-JSON-数据" class="heading-link"><i class="fas fa-link"></i></a><a href="#AJAX-服务端响应-JSON-数据" class="headerlink" title="AJAX 服务端响应 JSON 数据"></a>AJAX 服务端响应 JSON 数据</h2>
      
        <h3 id="响应一个数据-手动转换"   >
          <a href="#响应一个数据-手动转换" class="heading-link"><i class="fas fa-link"></i></a><a href="#响应一个数据-手动转换" class="headerlink" title="响应一个数据(手动转换)"></a>响应一个数据(手动转换)</h3>
      
        <h4 id="JSON-页面源码"   >
          <a href="#JSON-页面源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#JSON-页面源码" class="headerlink" title="JSON 页面源码"></a>JSON 页面源码</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-id">#result</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: solid <span class="number">2px</span> deepskyblue;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> result = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;result&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 绑定键盘按下事件</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">window</span>.<span class="property">onkeydown</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 发送请求</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 初始化</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;http://127.0.0.1:8000/json-server&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 发送</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 事件绑定</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">if</span> (xhr.<span class="property">readyState</span> === <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (xhr.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span> &lt; <span class="number">300</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="comment">// console.log(xhr.response);</span></span></span><br><span class="line"><span class="language-javascript">              <span class="comment">// result.innerHTML = xhr.response;</span></span></span><br><span class="line"><span class="language-javascript">              <span class="comment">// 手动转换数据</span></span></span><br><span class="line"><span class="language-javascript">              <span class="keyword">let</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>);</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span><br><span class="line"><span class="language-javascript">              result.<span class="property">innerHTML</span> = data.<span class="property">name</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="js-源码-4"   >
          <a href="#js-源码-4" class="heading-link"><i class="fas fa-link"></i></a><a href="#js-源码-4" class="headerlink" title="js 源码"></a>js 源码</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 3.创建路由规则</span></span><br><span class="line"><span class="comment">// 3.1request是对请求报文的封装</span></span><br><span class="line"><span class="comment">// 3.2response是对响应报文的封装</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX POST&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/json-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 响应一个数据</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;my ajax json&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 将对象进行字符串的转换</span></span><br><span class="line">  <span class="keyword">let</span> str = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(str);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动,8000端口监听中......&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>


        <h3 id="响应一个数据-自动转换"   >
          <a href="#响应一个数据-自动转换" class="heading-link"><i class="fas fa-link"></i></a><a href="#响应一个数据-自动转换" class="headerlink" title="响应一个数据(自动转换)"></a>响应一个数据(自动转换)</h3>
      
        <h4 id="JSON-页面源码-1"   >
          <a href="#JSON-页面源码-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#JSON-页面源码-1" class="headerlink" title="JSON 页面源码"></a>JSON 页面源码</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-id">#result</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: solid <span class="number">2px</span> deepskyblue;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> result = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;result&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 绑定键盘按下事件</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">window</span>.<span class="property">onkeydown</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 发送请求</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 设置响应体数据的类型</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="property">responseType</span> = <span class="string">&quot;json&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 初始化</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;http://127.0.0.1:8000/json-server&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 发送</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 事件绑定</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">if</span> (xhr.<span class="property">readyState</span> === <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (xhr.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span> &lt; <span class="number">300</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="comment">// 自动转换数据</span></span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="property">response</span>);</span></span><br><span class="line"><span class="language-javascript">              result.<span class="property">innerHTML</span> = xhr.<span class="property">response</span>.<span class="property">name</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="js-源码-5"   >
          <a href="#js-源码-5" class="heading-link"><i class="fas fa-link"></i></a><a href="#js-源码-5" class="headerlink" title="js 源码"></a>js 源码</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 3.创建路由规则</span></span><br><span class="line"><span class="comment">// 3.1request是对请求报文的封装</span></span><br><span class="line"><span class="comment">// 3.2response是对响应报文的封装</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX POST&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/json-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 响应一个数据</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;my ajax json&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 将对象进行字符串的转换</span></span><br><span class="line">  <span class="keyword">let</span> str = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(str);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动,8000端口监听中......&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>
]]></content>
      <categories>
        <category>AJAX</category>
      </categories>
      <tags>
        <tag>AJAX</tag>
      </tags>
  </entry>
  <entry>
    <title>AJAX入门与源码(下)</title>
    <url>/2024/10/16/ajax%E5%85%A5%E9%97%A8%E4%B8%8E%E6%BA%90%E7%A0%81(%E4%B8%8B)/</url>
    <content><![CDATA[
        <h1 id="ajax-入门与源码-下"   >
          <a href="#ajax-入门与源码-下" class="heading-link"><i class="fas fa-link"></i></a><a href="#ajax-入门与源码-下" class="headerlink" title="ajax 入门与源码(下)"></a>ajax 入门与源码(下)</h1>
      
        <h2 id="BootCDN"   >
          <a href="#BootCDN" class="heading-link"><i class="fas fa-link"></i></a><a href="#BootCDN" class="headerlink" title="BootCDN"></a>BootCDN</h2>
      <p><span class="exturl"><a class="exturl__link"   href="https://www.bootcdn.cn/" >BootCDN</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h2 id="AJAX-nodemon-自动重启工具安装"   >
          <a href="#AJAX-nodemon-自动重启工具安装" class="heading-link"><i class="fas fa-link"></i></a><a href="#AJAX-nodemon-自动重启工具安装" class="headerlink" title="AJAX-nodemon 自动重启工具安装"></a>AJAX-nodemon 自动重启工具安装</h2>
      
        <h3 id="nodemon"   >
          <a href="#nodemon" class="heading-link"><i class="fas fa-link"></i></a><a href="#nodemon" class="headerlink" title="nodemon"></a>nodemon</h3>
      <p><span class="exturl"><a class="exturl__link"   href="https://www.npmjs.com/package/nodemon" >nodemon</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h3 id="命令行"   >
          <a href="#命令行" class="heading-link"><i class="fas fa-link"></i></a><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h3>
      <blockquote>
<p>npm install -g nodemon</p>
</blockquote>

        <h3 id="启动服务"   >
          <a href="#启动服务" class="heading-link"><i class="fas fa-link"></i></a><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3>
      <blockquote>
<p>nodemon server.js</p>
</blockquote>

        <h2 id="AJAX-IE-缓存问题"   >
          <a href="#AJAX-IE-缓存问题" class="heading-link"><i class="fas fa-link"></i></a><a href="#AJAX-IE-缓存问题" class="headerlink" title="AJAX-IE 缓存问题"></a>AJAX-IE 缓存问题</h2>
      
        <h3 id="解决方法"   >
          <a href="#解决方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3>
      <p>Date.now()获取当前事件的时间戳</p>

    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>xhr.open(“GET”, “<span class="exturl"><a class="exturl__link"   href="http://127.0.0.1:8000/ie?t=&quot;" >http://127.0.0.1:8000/ie?t=&quot;</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> + Date.now());</p>
    </div>
  


        <h3 id="IE-缓存问题页面源码"   >
          <a href="#IE-缓存问题页面源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#IE-缓存问题页面源码" class="headerlink" title="IE 缓存问题页面源码"></a>IE 缓存问题页面源码</h3>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-id">#result</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: solid <span class="number">2px</span> darkorchid;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>点击发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;button&quot;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> result = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#result&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 绑定事件</span></span></span><br><span class="line"><span class="language-javascript">      btn.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;http://127.0.0.1:8000/ie?t=&quot;</span> + <span class="title class_">Date</span>.<span class="title function_">now</span>());</span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">if</span> (xhr.<span class="property">readyState</span> === <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (xhr.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span> &lt; <span class="number">300</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              result.<span class="property">innerHTML</span> = xhr.<span class="property">response</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="js-源码"   >
          <a href="#js-源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#js-源码" class="headerlink" title="js 源码"></a>js 源码</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 3.创建路由规则</span></span><br><span class="line"><span class="comment">// 3.1request是对请求报文的封装</span></span><br><span class="line"><span class="comment">// 3.2response是对响应报文的封装</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX POST&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/json-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 响应一个数据</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;my ajax json&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 将对象进行字符串的转换</span></span><br><span class="line">  <span class="keyword">let</span> str = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(str);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 专门针对IE缓存</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/ie&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO IE&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动,8000端口监听中......&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>


        <h2 id="AJAX-请求超时与网络异常"   >
          <a href="#AJAX-请求超时与网络异常" class="heading-link"><i class="fas fa-link"></i></a><a href="#AJAX-请求超时与网络异常" class="headerlink" title="AJAX-请求超时与网络异常"></a>AJAX-请求超时与网络异常</h2>
      
        <h3 id="请求超时与网络异常页面源码"   >
          <a href="#请求超时与网络异常页面源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#请求超时与网络异常页面源码" class="headerlink" title="请求超时与网络异常页面源码"></a>请求超时与网络异常页面源码</h3>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 请求超时与网络异常 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-id">#result</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: solid <span class="number">2px</span> <span class="number">#90b</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>点击发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;button&quot;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> result = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#result&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 绑定事件</span></span></span><br><span class="line"><span class="language-javascript">      btn.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 超时设置 2s</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="property">timeout</span> = <span class="number">2000</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 超时回调</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="property">ontimeout</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">alert</span>(<span class="string">&quot;网络异常，请稍后重试！&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 网络异常回调</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="property">onerror</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">alert</span>(<span class="string">&quot;你的网络似乎出了一些问题！&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;http://127.0.0.1:8000/delay&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">if</span> (xhr.<span class="property">readyState</span> === <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (xhr.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span> &lt; <span class="number">300</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              result.<span class="property">innerHTML</span> = xhr.<span class="property">response</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="js-源码-1"   >
          <a href="#js-源码-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#js-源码-1" class="headerlink" title="js 源码"></a>js 源码</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 延时响应</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/delay&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 设置响应</span></span><br><span class="line">    response.<span class="title function_">send</span>(<span class="string">&quot;延时响应：HELLO!&quot;</span>);</span><br><span class="line">  &#125;, <span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>

<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 3.创建路由规则</span></span><br><span class="line"><span class="comment">// 3.1request是对请求报文的封装</span></span><br><span class="line"><span class="comment">// 3.2response是对响应报文的封装</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX POST&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/json-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 响应一个数据</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;my ajax json&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 将对象进行字符串的转换</span></span><br><span class="line">  <span class="keyword">let</span> str = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(str);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 专门针对IE缓存</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/ie&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO IE&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 延时响应</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/delay&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 设置响应</span></span><br><span class="line">    response.<span class="title function_">send</span>(<span class="string">&quot;延时响应：HELLO!&quot;</span>);</span><br><span class="line">  &#125;, <span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动,8000端口监听中......&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>


        <h2 id="AJAX-取消请求"   >
          <a href="#AJAX-取消请求" class="heading-link"><i class="fas fa-link"></i></a><a href="#AJAX-取消请求" class="headerlink" title="AJAX-取消请求"></a>AJAX-取消请求</h2>
      
        <h3 id="取消请求源码"   >
          <a href="#取消请求源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#取消请求源码" class="headerlink" title="取消请求源码"></a>取消请求源码</h3>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 取消请求 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>点击发送<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>点击取消<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 获取元素对象</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> btns = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;button&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> x = <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      btns[<span class="number">0</span>].<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        x = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">        x.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;http://127.0.0.1:8000/delay&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        x.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// abort</span></span></span><br><span class="line"><span class="language-javascript">      btns[<span class="number">1</span>].<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        x.<span class="title function_">abort</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="js-源码-2"   >
          <a href="#js-源码-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#js-源码-2" class="headerlink" title="js 源码"></a>js 源码</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 3.创建路由规则</span></span><br><span class="line"><span class="comment">// 3.1request是对请求报文的封装</span></span><br><span class="line"><span class="comment">// 3.2response是对响应报文的封装</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX POST&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/json-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 响应一个数据</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;my ajax json&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 将对象进行字符串的转换</span></span><br><span class="line">  <span class="keyword">let</span> str = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(str);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 专门针对IE缓存</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/ie&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO IE&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 延时响应</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/delay&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 设置响应</span></span><br><span class="line">    response.<span class="title function_">send</span>(<span class="string">&quot;延时响应：HELLO!&quot;</span>);</span><br><span class="line">  &#125;, <span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动,8000端口监听中......&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>


        <h2 id="AJAX-请求重复发送问题"   >
          <a href="#AJAX-请求重复发送问题" class="heading-link"><i class="fas fa-link"></i></a><a href="#AJAX-请求重复发送问题" class="headerlink" title="AJAX-请求重复发送问题"></a>AJAX-请求重复发送问题</h2>
      
        <h3 id="请求重复发送问题源码"   >
          <a href="#请求重复发送问题源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#请求重复发送问题源码" class="headerlink" title="请求重复发送问题源码"></a>请求重复发送问题源码</h3>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 重复请求问题 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>点击发送<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 获取元素对象</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> btns = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;button&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> x = <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 标识变量</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> isSending = <span class="literal">false</span>; <span class="comment">// 是否真正发送AJAX请求</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      btns[<span class="number">0</span>].<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 判断标识变量</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (isSending) x.<span class="title function_">abort</span>(); <span class="comment">// 如果真正发送，则取消该请求，创建新的请求</span></span></span><br><span class="line"><span class="language-javascript">        x = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//  修改标识变量的值</span></span></span><br><span class="line"><span class="language-javascript">        isSending = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">        x.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;http://127.0.0.1:8000/delay&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        x.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript">        x.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">if</span> (x.<span class="property">readyState</span> === <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 修改标识变量</span></span></span><br><span class="line"><span class="language-javascript">            isSending = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// abort</span></span></span><br><span class="line"><span class="language-javascript">      btns[<span class="number">1</span>].<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        x.<span class="title function_">abort</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="js-源码-3"   >
          <a href="#js-源码-3" class="heading-link"><i class="fas fa-link"></i></a><a href="#js-源码-3" class="headerlink" title="js 源码"></a>js 源码</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 3.创建路由规则</span></span><br><span class="line"><span class="comment">// 3.1request是对请求报文的封装</span></span><br><span class="line"><span class="comment">// 3.2response是对响应报文的封装</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX POST&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/json-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 响应一个数据</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;my ajax json&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 将对象进行字符串的转换</span></span><br><span class="line">  <span class="keyword">let</span> str = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(str);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 专门针对IE缓存</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/ie&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO IE&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 延时响应</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/delay&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 设置响应</span></span><br><span class="line">    response.<span class="title function_">send</span>(<span class="string">&quot;延时响应：HELLO!&quot;</span>);</span><br><span class="line">  &#125;, <span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动,8000端口监听中......&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>


        <h2 id="AJAX-jQuery-发送-AJAX-请求"   >
          <a href="#AJAX-jQuery-发送-AJAX-请求" class="heading-link"><i class="fas fa-link"></i></a><a href="#AJAX-jQuery-发送-AJAX-请求" class="headerlink" title="AJAX-jQuery 发送 AJAX 请求"></a>AJAX-jQuery 发送 AJAX 请求</h2>
      
        <h3 id="GET-发送请求"   >
          <a href="#GET-发送请求" class="heading-link"><i class="fas fa-link"></i></a><a href="#GET-发送请求" class="headerlink" title="GET 发送请求"></a>GET 发送请求</h3>
      
        <h4 id="jQuery-发送-AJAX-请求源码"   >
          <a href="#jQuery-发送-AJAX-请求源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#jQuery-发送-AJAX-请求源码" class="headerlink" title="jQuery 发送 AJAX 请求源码"></a>jQuery 发送 AJAX 请求源码</h4>
      <blockquote>
<p>crossorigin=”anonymous” 设置该属性，浏览器不携带 cookie</p>
</blockquote>
<figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- jQuery发送AJAX请求 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.2.3/css/bootstrap.min.css&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.4/jquery.min.js&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;page-header&quot;</span>&gt;</span>jQuery发送AJAX请求<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>GET<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger&quot;</span>&gt;</span>POST<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-info&quot;</span>&gt;</span>通用型方法ajax<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">eq</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 发送请求</span></span></span><br><span class="line"><span class="language-javascript">          $.<span class="title function_">get</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;http://127.0.0.1:8000/jquery-server&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">a</span>: <span class="number">100</span>, <span class="attr">b</span>: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          );</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="js-源码-4"   >
          <a href="#js-源码-4" class="heading-link"><i class="fas fa-link"></i></a><a href="#js-源码-4" class="headerlink" title="js 源码"></a>js 源码</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// jQuery服务</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/jquery-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;Hello jQuery AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>

<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 3.创建路由规则</span></span><br><span class="line"><span class="comment">// 3.1request是对请求报文的封装</span></span><br><span class="line"><span class="comment">// 3.2response是对响应报文的封装</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX POST&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/json-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 响应一个数据</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;my ajax json&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 将对象进行字符串的转换</span></span><br><span class="line">  <span class="keyword">let</span> str = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(str);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 专门针对IE缓存</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/ie&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO IE&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 延时响应</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/delay&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 设置响应</span></span><br><span class="line">    response.<span class="title function_">send</span>(<span class="string">&quot;延时响应：HELLO!&quot;</span>);</span><br><span class="line">  &#125;, <span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// jQuery服务</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/jquery-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;Hello jQuery AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动,8000端口监听中......&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>


        <h3 id="POST-发送请求"   >
          <a href="#POST-发送请求" class="heading-link"><i class="fas fa-link"></i></a><a href="#POST-发送请求" class="headerlink" title="POST 发送请求"></a>POST 发送请求</h3>
      
        <h4 id="jQuery-发送-AJAX-请求源码-1"   >
          <a href="#jQuery-发送-AJAX-请求源码-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#jQuery-发送-AJAX-请求源码-1" class="headerlink" title="jQuery 发送 AJAX 请求源码"></a>jQuery 发送 AJAX 请求源码</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- jQuery发送AJAX请求 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.2.3/css/bootstrap.min.css&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.4/jquery.min.js&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;page-header&quot;</span>&gt;</span>jQuery发送AJAX请求<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>GET<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger&quot;</span>&gt;</span>POST<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-info&quot;</span>&gt;</span>通用型方法ajax<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">eq</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 发送请求</span></span></span><br><span class="line"><span class="language-javascript">          $.<span class="title function_">get</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;http://127.0.0.1:8000/jquery-server&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">a</span>: <span class="number">100</span>, <span class="attr">b</span>: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          );</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">eq</span>(<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 发送请求</span></span></span><br><span class="line"><span class="language-javascript">          $.<span class="title function_">post</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;http://127.0.0.1:8000/jquery-server&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">a</span>: <span class="number">100</span>, <span class="attr">b</span>: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          );</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="js-源码-5"   >
          <a href="#js-源码-5" class="heading-link"><i class="fas fa-link"></i></a><a href="#js-源码-5" class="headerlink" title="js 源码"></a>js 源码</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// jQuery服务</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/jquery-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;Hello jQuery AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>

<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 3.创建路由规则</span></span><br><span class="line"><span class="comment">// 3.1request是对请求报文的封装</span></span><br><span class="line"><span class="comment">// 3.2response是对响应报文的封装</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX POST&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/json-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 响应一个数据</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;my ajax json&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 将对象进行字符串的转换</span></span><br><span class="line">  <span class="keyword">let</span> str = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(str);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 专门针对IE缓存</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/ie&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO IE&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 延时响应</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/delay&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 设置响应</span></span><br><span class="line">    response.<span class="title function_">send</span>(<span class="string">&quot;延时响应：HELLO!&quot;</span>);</span><br><span class="line">  &#125;, <span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// jQuery服务</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/jquery-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;Hello jQuery AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动,8000端口监听中......&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>


        <h3 id="JSON-响应体类型"   >
          <a href="#JSON-响应体类型" class="heading-link"><i class="fas fa-link"></i></a><a href="#JSON-响应体类型" class="headerlink" title="JSON 响应体类型"></a>JSON 响应体类型</h3>
      
        <h4 id="jQuery-发送-AJAX-请求源码-2"   >
          <a href="#jQuery-发送-AJAX-请求源码-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#jQuery-发送-AJAX-请求源码-2" class="headerlink" title="jQuery 发送 AJAX 请求源码"></a>jQuery 发送 AJAX 请求源码</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line">$(&quot;button&quot;) .eq(0) .click(function () &#123; // 发送请求 $.get(</span><br><span class="line">&quot;http://127.0.0.1:8000/jquery-server&quot;, &#123; a: 100, b: 200 &#125;, function (data) &#123;</span><br><span class="line">console.log(data); &#125;, &quot;json&quot; ); &#125;);</span><br></pre></td></tr></table></div></figure>

<figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- jQuery发送AJAX请求 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.2.3/css/bootstrap.min.css&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.4/jquery.min.js&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;page-header&quot;</span>&gt;</span>jQuery发送AJAX请求<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>GET<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger&quot;</span>&gt;</span>POST<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-info&quot;</span>&gt;</span>通用型方法ajax<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">eq</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 发送请求</span></span></span><br><span class="line"><span class="language-javascript">          $.<span class="title function_">get</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;http://127.0.0.1:8000/jquery-server&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">a</span>: <span class="number">100</span>, <span class="attr">b</span>: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;json&quot;</span></span></span><br><span class="line"><span class="language-javascript">          );</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">eq</span>(<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 发送请求</span></span></span><br><span class="line"><span class="language-javascript">          $.<span class="title function_">post</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;http://127.0.0.1:8000/jquery-server&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">a</span>: <span class="number">100</span>, <span class="attr">b</span>: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          );</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="js-源码-6"   >
          <a href="#js-源码-6" class="heading-link"><i class="fas fa-link"></i></a><a href="#js-源码-6" class="headerlink" title="js 源码"></a>js 源码</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 3.创建路由规则</span></span><br><span class="line"><span class="comment">// 3.1request是对请求报文的封装</span></span><br><span class="line"><span class="comment">// 3.2response是对响应报文的封装</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX POST&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/json-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 响应一个数据</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;my ajax json&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 将对象进行字符串的转换</span></span><br><span class="line">  <span class="keyword">let</span> str = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(str);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 专门针对IE缓存</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/ie&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO IE&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 延时响应</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/delay&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 设置响应</span></span><br><span class="line">    response.<span class="title function_">send</span>(<span class="string">&quot;延时响应：HELLO!&quot;</span>);</span><br><span class="line">  &#125;, <span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// jQuery服务</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/jquery-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> data = &#123; <span class="attr">name</span>: <span class="string">&quot;mydata&quot;</span> &#125;;</span><br><span class="line">  response.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动,8000端口监听中......&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>


        <h2 id="AJAX-jQuery-通用方法发送-AJAX-请求"   >
          <a href="#AJAX-jQuery-通用方法发送-AJAX-请求" class="heading-link"><i class="fas fa-link"></i></a><a href="#AJAX-jQuery-通用方法发送-AJAX-请求" class="headerlink" title="AJAX-jQuery 通用方法发送 AJAX 请求"></a>AJAX-jQuery 通用方法发送 AJAX 请求</h2>
      
        <h3 id="成功回调源码"   >
          <a href="#成功回调源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#成功回调源码" class="headerlink" title="成功回调源码"></a>成功回调源码</h3>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- jQuery通用方法发送AJAX请求 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.2.3/css/bootstrap.min.css&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.4/jquery.min.js&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;page-header&quot;</span>&gt;</span>jQuery发送AJAX请求<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>GET<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger&quot;</span>&gt;</span>POST<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-info&quot;</span>&gt;</span>通用型方法ajax<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">eq</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 发送请求</span></span></span><br><span class="line"><span class="language-javascript">          $.<span class="title function_">get</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;http://127.0.0.1:8000/jquery-server&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">a</span>: <span class="number">100</span>, <span class="attr">b</span>: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;json&quot;</span></span></span><br><span class="line"><span class="language-javascript">          );</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">eq</span>(<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 发送请求</span></span></span><br><span class="line"><span class="language-javascript">          $.<span class="title function_">post</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;http://127.0.0.1:8000/jquery-server&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">a</span>: <span class="number">100</span>, <span class="attr">b</span>: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          );</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">eq</span>(<span class="number">2</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// url</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">url</span>: <span class="string">&quot;http://127.0.0.1:8000/jquery-server&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 参数</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123; <span class="attr">a</span>: <span class="number">100</span>, <span class="attr">b</span>: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 请求类型</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//响应体结果(设置为对象)</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 成功的回调</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="js-源码-7"   >
          <a href="#js-源码-7" class="heading-link"><i class="fas fa-link"></i></a><a href="#js-源码-7" class="headerlink" title="js 源码"></a>js 源码</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 3.创建路由规则</span></span><br><span class="line"><span class="comment">// 3.1request是对请求报文的封装</span></span><br><span class="line"><span class="comment">// 3.2response是对响应报文的封装</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX POST&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/json-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 响应一个数据</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;my ajax json&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 将对象进行字符串的转换</span></span><br><span class="line">  <span class="keyword">let</span> str = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(str);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 专门针对IE缓存</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/ie&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO IE&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 延时响应</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/delay&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 设置响应</span></span><br><span class="line">    response.<span class="title function_">send</span>(<span class="string">&quot;延时响应：HELLO!&quot;</span>);</span><br><span class="line">  &#125;, <span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// jQuery服务</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/jquery-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// response.send(&quot;Hello jQuery AJAX&quot;);</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123; <span class="attr">name</span>: <span class="string">&quot;mydata&quot;</span> &#125;;</span><br><span class="line">  response.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动,8000端口监听中......&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>


        <h3 id="失败回调源码"   >
          <a href="#失败回调源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#失败回调源码" class="headerlink" title="失败回调源码"></a>失败回调源码</h3>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- jQuery通用方法发送AJAX请求 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.2.3/css/bootstrap.min.css&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.4/jquery.min.js&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;page-header&quot;</span>&gt;</span>jQuery发送AJAX请求<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>GET<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger&quot;</span>&gt;</span>POST<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-info&quot;</span>&gt;</span>通用型方法ajax<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">eq</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 发送请求</span></span></span><br><span class="line"><span class="language-javascript">          $.<span class="title function_">get</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;http://127.0.0.1:8000/jquery-server&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">a</span>: <span class="number">100</span>, <span class="attr">b</span>: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;json&quot;</span></span></span><br><span class="line"><span class="language-javascript">          );</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">eq</span>(<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 发送请求</span></span></span><br><span class="line"><span class="language-javascript">          $.<span class="title function_">post</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;http://127.0.0.1:8000/jquery-server&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">a</span>: <span class="number">100</span>, <span class="attr">b</span>: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          );</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">eq</span>(<span class="number">2</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// url</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">url</span>: <span class="string">&quot;http://127.0.0.1:8000/delay&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 参数</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123; <span class="attr">a</span>: <span class="number">100</span>, <span class="attr">b</span>: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 请求类型</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//响应体结果(设置为对象)</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 成功的回调</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 超时时间</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">timeout</span>: <span class="number">2000</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 失败的回调</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;出错啦！&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="js-源码-8"   >
          <a href="#js-源码-8" class="heading-link"><i class="fas fa-link"></i></a><a href="#js-源码-8" class="headerlink" title="js 源码"></a>js 源码</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 3.创建路由规则</span></span><br><span class="line"><span class="comment">// 3.1request是对请求报文的封装</span></span><br><span class="line"><span class="comment">// 3.2response是对响应报文的封装</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX POST&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/json-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 响应一个数据</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;my ajax json&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 将对象进行字符串的转换</span></span><br><span class="line">  <span class="keyword">let</span> str = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(str);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 专门针对IE缓存</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/ie&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO IE&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 延时响应</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/delay&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 设置响应</span></span><br><span class="line">    response.<span class="title function_">send</span>(<span class="string">&quot;延时响应：HELLO!&quot;</span>);</span><br><span class="line">  &#125;, <span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// jQuery服务</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/jquery-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// response.send(&quot;Hello jQuery AJAX&quot;);</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123; <span class="attr">name</span>: <span class="string">&quot;mydata&quot;</span> &#125;;</span><br><span class="line">  response.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动,8000端口监听中......&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>


        <h3 id="设置头信息源码"   >
          <a href="#设置头信息源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#设置头信息源码" class="headerlink" title="设置头信息源码"></a>设置头信息源码</h3>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- jQuery通用方法发送AJAX请求 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.2.3/css/bootstrap.min.css&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.4/jquery.min.js&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;page-header&quot;</span>&gt;</span>jQuery发送AJAX请求<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>GET<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger&quot;</span>&gt;</span>POST<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-info&quot;</span>&gt;</span>通用型方法ajax<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">eq</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 发送请求</span></span></span><br><span class="line"><span class="language-javascript">          $.<span class="title function_">get</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;http://127.0.0.1:8000/jquery-server&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">a</span>: <span class="number">100</span>, <span class="attr">b</span>: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;json&quot;</span></span></span><br><span class="line"><span class="language-javascript">          );</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">eq</span>(<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 发送请求</span></span></span><br><span class="line"><span class="language-javascript">          $.<span class="title function_">post</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;http://127.0.0.1:8000/jquery-server&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">a</span>: <span class="number">100</span>, <span class="attr">b</span>: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          );</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&quot;button&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">eq</span>(<span class="number">2</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// url</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">url</span>: <span class="string">&quot;http://127.0.0.1:8000/jquery-server&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 参数</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123; <span class="attr">a</span>: <span class="number">100</span>, <span class="attr">b</span>: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 请求类型</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//响应体结果(设置为对象)</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 成功的回调</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 超时时间</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">timeout</span>: <span class="number">2000</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 失败的回调</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;出错啦！&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 头信息</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">headers</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="attr">c</span>: <span class="number">300</span>,</span></span><br><span class="line"><span class="language-javascript">              <span class="attr">d</span>: <span class="number">400</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h3 id="js-源码-9"   >
          <a href="#js-源码-9" class="heading-link"><i class="fas fa-link"></i></a><a href="#js-源码-9" class="headerlink" title="js 源码"></a>js 源码</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 引入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 3.创建路由规则</span></span><br><span class="line"><span class="comment">// 3.1request是对请求报文的封装</span></span><br><span class="line"><span class="comment">// 3.2response是对响应报文的封装</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO AJAX POST&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/json-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 响应一个数据</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;my ajax json&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 将对象进行字符串的转换</span></span><br><span class="line">  <span class="keyword">let</span> str = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data);</span><br><span class="line">  <span class="comment">// 设置响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(str);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 专门针对IE缓存</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/ie&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// 设置响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;HELLO IE&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 延时响应</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/delay&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 设置响应</span></span><br><span class="line">    response.<span class="title function_">send</span>(<span class="string">&quot;延时响应：HELLO!&quot;</span>);</span><br><span class="line">  &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// jQuery服务</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/jquery-server&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头,设置允许跨域</span></span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  response.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="comment">// response.send(&quot;Hello jQuery AJAX&quot;);</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123; <span class="attr">name</span>: <span class="string">&quot;mydata&quot;</span> &#125;;</span><br><span class="line">  response.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动,8000端口监听中......&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>
]]></content>
      <categories>
        <category>AJAX</category>
      </categories>
      <tags>
        <tag>AJAX</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue-创建隔行变色项目</title>
    <url>/2024/10/16/changerowscolor/</url>
    <content><![CDATA[
        <h1 id="Vuejs创建隔行变色项目"   >
          <a href="#Vuejs创建隔行变色项目" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vuejs创建隔行变色项目" class="headerlink" title="Vuejs创建隔行变色项目"></a>Vuejs创建隔行变色项目</h1>
      
        <h2 id="Webpack"   >
          <a href="#Webpack" class="heading-link"><i class="fas fa-link"></i></a><a href="#Webpack" class="headerlink" title="Webpack"></a>Webpack</h2>
      <ul>
<li>前端项目工程化的具体解决方案</li>
</ul>

        <h2 id="创建列表隔行变色项目"   >
          <a href="#创建列表隔行变色项目" class="heading-link"><i class="fas fa-link"></i></a><a href="#创建列表隔行变色项目" class="headerlink" title="创建列表隔行变色项目"></a>创建列表隔行变色项目</h2>
      
        <h3 id="初始化"   >
          <a href="#初始化" class="heading-link"><i class="fas fa-link"></i></a><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3>
      
        <h4 id="npm安装jQuery报错问题"   >
          <a href="#npm安装jQuery报错问题" class="heading-link"><i class="fas fa-link"></i></a><a href="#npm安装jQuery报错问题" class="headerlink" title="npm安装jQuery报错问题"></a><span class="exturl"><a class="exturl__link"   href="https://blog.csdn.net/weixin_55894946/article/details/124756160?ops_request_misc=&request_id=&biz_id=102&utm_term=%E5%89%8D%E7%AB%AFnpm%E5%AE%89%E8%A3%85jquery%E6%95%99%E7%A8%8B%E6%8A%A5%E9%94%99&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-124756160.142%5Ev73%5Econtrol,201%5Ev4%5Eadd_ask,239%5Ev2%5Einsert_chatgpt&spm=1018.2226.3001.4187" >npm安装jQuery报错问题</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></h4>
      
        <h4 id="安装webpack"   >
          <a href="#安装webpack" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装webpack" class="headerlink" title="安装webpack"></a>安装webpack</h4>
      <blockquote>
<p>(c)npm install webpack webpack-cli -D // -D表示开发依赖</p>
</blockquote>

        <h4 id="安装jquery"   >
          <a href="#安装jquery" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装jquery" class="headerlink" title="安装jquery"></a>安装jquery</h4>
      <blockquote>
<p>(c)npm install jquery //没有-D表示运行依赖</p>
</blockquote>

        <h3 id="源码"   >
          <a href="#源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码" class="headerlink" title="源码"></a>源码</h3>
      
        <h4 id="index-html"   >
          <a href="#index-html" class="heading-link"><i class="fas fa-link"></i></a><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;../dist/main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 1 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 2 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 3 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 4 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 5 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 6 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 7 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 8 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 9 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="index-js"   >
          <a href="#index-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">&#x27;jquery&#x27;</span></span><br><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  $(<span class="string">&#x27;li:odd&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background-color&#x27;</span>, <span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">  $(<span class="string">&#x27;li:even&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background-color&#x27;</span>, <span class="string">&#x27;green&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure>


        <h4 id="package-json"   >
          <a href="#package-json" class="heading-link"><i class="fas fa-link"></i></a><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h4>
      <figure class="highlight json"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;change-rows-color&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;webpack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.75.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.0.1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;jquery&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.6.3&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="webpack-config-js"   >
          <a href="#webpack-config-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#webpack-config-js" class="headerlink" title="webpack.config.js"></a>webpack.config.js</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">  &#125;;  </span><br></pre></td></tr></table></div></figure>]]></content>
      <categories>
        <category>Vue</category>
        <category>webpack</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>webpack</tag>
        <tag>jquery</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue-指定webpack的entry和output</title>
    <url>/2024/10/16/changerowscolor02/</url>
    <content><![CDATA[
        <h1 id="Vuejs创建隔行变色项目-指定webpack的entry和output"   >
          <a href="#Vuejs创建隔行变色项目-指定webpack的entry和output" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vuejs创建隔行变色项目-指定webpack的entry和output" class="headerlink" title="Vuejs创建隔行变色项目(指定webpack的entry和output)"></a>Vuejs创建隔行变色项目(指定webpack的entry和output)</h1>
      
        <h2 id="Webpack"   >
          <a href="#Webpack" class="heading-link"><i class="fas fa-link"></i></a><a href="#Webpack" class="headerlink" title="Webpack"></a>Webpack</h2>
      <ul>
<li>前端项目工程化的具体解决方案</li>
</ul>

        <h2 id="创建列表隔行变色项目"   >
          <a href="#创建列表隔行变色项目" class="heading-link"><i class="fas fa-link"></i></a><a href="#创建列表隔行变色项目" class="headerlink" title="创建列表隔行变色项目"></a>创建列表隔行变色项目</h2>
      
        <h3 id="初始化"   >
          <a href="#初始化" class="heading-link"><i class="fas fa-link"></i></a><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3>
      
        <h4 id="npm安装jQuery报错问题"   >
          <a href="#npm安装jQuery报错问题" class="heading-link"><i class="fas fa-link"></i></a><a href="#npm安装jQuery报错问题" class="headerlink" title="npm安装jQuery报错问题"></a><span class="exturl"><a class="exturl__link"   href="https://blog.csdn.net/weixin_55894946/article/details/124756160?ops_request_misc=&request_id=&biz_id=102&utm_term=%E5%89%8D%E7%AB%AFnpm%E5%AE%89%E8%A3%85jquery%E6%95%99%E7%A8%8B%E6%8A%A5%E9%94%99&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-124756160.142%5Ev73%5Econtrol,201%5Ev4%5Eadd_ask,239%5Ev2%5Einsert_chatgpt&spm=1018.2226.3001.4187" >npm安装jQuery报错问题</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></h4>
      
        <h4 id="安装webpack"   >
          <a href="#安装webpack" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装webpack" class="headerlink" title="安装webpack"></a>安装webpack</h4>
      <blockquote>
<p>(c)npm install webpack webpack-cli -D // -D表示开发依赖</p>
</blockquote>

        <h4 id="安装jquery"   >
          <a href="#安装jquery" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装jquery" class="headerlink" title="安装jquery"></a>安装jquery</h4>
      <blockquote>
<p>(c)npm install jquery //没有-D表示运行依赖</p>
</blockquote>

        <h3 id="源码"   >
          <a href="#源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码" class="headerlink" title="源码"></a>源码</h3>
      
        <h4 id="index-html"   >
          <a href="#index-html" class="heading-link"><i class="fas fa-link"></i></a><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;../dist/bundle.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 1 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 2 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 3 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 4 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 5 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 6 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 7 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 8 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第 9 个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="index-js"   >
          <a href="#index-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">&#x27;jquery&#x27;</span></span><br><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  $(<span class="string">&#x27;li:odd&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background-color&#x27;</span>, <span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">  $(<span class="string">&#x27;li:even&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background-color&#x27;</span>, <span class="string">&#x27;cyan&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure>


        <h4 id="package-json"   >
          <a href="#package-json" class="heading-link"><i class="fas fa-link"></i></a><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h4>
      <figure class="highlight json"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;change-rows-color&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;webpack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.75.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.0.1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;jquery&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.6.3&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="webpack-config-js"   >
          <a href="#webpack-config-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#webpack-config-js" class="headerlink" title="webpack.config.js"></a>webpack.config.js</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">  <span class="comment">// entry指定要处理哪个文件</span></span><br><span class="line">  <span class="attr">entry</span>: path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;./src/index1.js&#x27;</span>),</span><br><span class="line">  <span class="comment">// output指定生成的文件存放地址</span></span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="comment">// 存放到目录</span></span><br><span class="line">    <span class="attr">path</span>: path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">    <span class="comment">// 生成的文件名</span></span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;bundle.js&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  &#125;;  </span><br></pre></td></tr></table></div></figure>]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>webpack</tag>
        <tag>jquery</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-AWT-container容器</title>
    <url>/2024/10/16/container/</url>
    <content><![CDATA[
        <h1 id="Java-AWT-container"   >
          <a href="#Java-AWT-container" class="heading-link"><i class="fas fa-link"></i></a><a href="#Java-AWT-container" class="headerlink" title="Java-AWT-container"></a>Java-AWT-container</h1>
      
        <h2 id="Window"   >
          <a href="#Window" class="heading-link"><i class="fas fa-link"></i></a><a href="#Window" class="headerlink" title="Window"></a>Window</h2>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WindowDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.创建一个窗口对象</span></span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里测试window窗口&quot;</span>);</span><br><span class="line">        <span class="comment">// 2.指定窗口的位置，大小</span></span><br><span class="line">        frame.setLocation(<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">        frame.setSize(<span class="number">500</span>,<span class="number">300</span>);</span><br><span class="line">        <span class="comment">// 3.设置窗口对象可见</span></span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="Panel"   >
          <a href="#Panel" class="heading-link"><i class="fas fa-link"></i></a><a href="#Panel" class="headerlink" title="Panel"></a>Panel</h2>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PanelDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.创建一个window对象</span></span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里演示panel&quot;</span>);</span><br><span class="line">        <span class="comment">// 2.创建一个panel对象</span></span><br><span class="line">        <span class="type">Panel</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Panel</span>();</span><br><span class="line">        <span class="comment">// 3.创建一个文本框和一个按钮，并放入panel容器中</span></span><br><span class="line">        p.add(<span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">&quot;这里是一个测试文本&quot;</span>));</span><br><span class="line">        p.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;这里是一个测试按钮&quot;</span>));</span><br><span class="line">        <span class="comment">// 4.把panel放入window中</span></span><br><span class="line">        frame.add(p);</span><br><span class="line">        <span class="comment">// 5.设置window的位置以及大小</span></span><br><span class="line">        frame.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">500</span>,<span class="number">300</span>);</span><br><span class="line">        <span class="comment">// 6.设置window可见</span></span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="ScrollPane"   >
          <a href="#ScrollPane" class="heading-link"><i class="fas fa-link"></i></a><a href="#ScrollPane" class="headerlink" title="ScrollPane"></a>ScrollPane</h2>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScrollPaneDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;这里演示ScrollPane&quot;</span>);</span><br><span class="line">        <span class="comment">// 1.创建一个ScrollPane对象</span></span><br><span class="line">        <span class="type">ScrollPane</span> <span class="variable">sp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ScrollPane</span>(ScrollPane.SCROLLBARS_ALWAYS);</span><br><span class="line">        <span class="comment">// 2.往ScrollPane中添加内容</span></span><br><span class="line">        sp.add(<span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">&quot;这是测试文本&quot;</span>));</span><br><span class="line">        sp.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;这是测试按钮&quot;</span>));</span><br><span class="line">        <span class="comment">// 3.把ScrollPane添加到Frame中</span></span><br><span class="line">        frame.add(sp);</span><br><span class="line">        frame.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">500</span>,<span class="number">300</span>);</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>AWT</tag>
      </tags>
  </entry>
  <entry>
    <title>git 协同开发-创建分支-操作步骤</title>
    <url>/2024/10/16/git%E5%8D%8F%E5%90%8C%E5%BC%80%E5%8F%91%E6%93%8D%E4%BD%9C%E6%AD%A5%E9%AA%A4/</url>
    <content><![CDATA[
        <h1 id="git-协同开发-创建分支-操作步骤"   >
          <a href="#git-协同开发-创建分支-操作步骤" class="heading-link"><i class="fas fa-link"></i></a><a href="#git-协同开发-创建分支-操作步骤" class="headerlink" title="git 协同开发-创建分支-操作步骤"></a>git 协同开发-创建分支-操作步骤</h1>
      
        <h2 id="克隆（clone）项目仓库到本地"   >
          <a href="#克隆（clone）项目仓库到本地" class="heading-link"><i class="fas fa-link"></i></a><a href="#克隆（clone）项目仓库到本地" class="headerlink" title="克隆（clone）项目仓库到本地"></a>克隆（clone）项目仓库到本地</h2>
      <blockquote>
<p>git clone &lt;Gitee 项目仓库地址&gt;</p>
</blockquote>

        <h2 id="进入项目目录："   >
          <a href="#进入项目目录：" class="heading-link"><i class="fas fa-link"></i></a><a href="#进入项目目录：" class="headerlink" title="进入项目目录："></a>进入项目目录：</h2>
      <blockquote>
<p>cd <project-directory></p>
</blockquote>

        <h2 id="小明创建自己的开发分支："   >
          <a href="#小明创建自己的开发分支：" class="heading-link"><i class="fas fa-link"></i></a><a href="#小明创建自己的开发分支：" class="headerlink" title="小明创建自己的开发分支："></a>小明创建自己的开发分支：</h2>
      <blockquote>
<p>git checkout -b ming-dev</p>
</blockquote>

        <h2 id="小明在自己的分支上进行代码修改和开发工作"   >
          <a href="#小明在自己的分支上进行代码修改和开发工作" class="heading-link"><i class="fas fa-link"></i></a><a href="#小明在自己的分支上进行代码修改和开发工作" class="headerlink" title="小明在自己的分支上进行代码修改和开发工作"></a>小明在自己的分支上进行代码修改和开发工作</h2>
      <p>以在 src 文件夹中，创建 test.txt 为例</p>
<blockquote>
<p>cd src<br>touch test.txt</p>
</blockquote>

        <h2 id="小明提交自己的更改到本地仓库："   >
          <a href="#小明提交自己的更改到本地仓库：" class="heading-link"><i class="fas fa-link"></i></a><a href="#小明提交自己的更改到本地仓库：" class="headerlink" title="小明提交自己的更改到本地仓库："></a>小明提交自己的更改到本地仓库：</h2>
      <blockquote>
<p>git add .<br>git commit -m “(描述小明的更改)在 src 文件夹中创建了 test.txt”</p>
</blockquote>

        <h2 id="小明推送（push）自己的分支到远程仓库："   >
          <a href="#小明推送（push）自己的分支到远程仓库：" class="heading-link"><i class="fas fa-link"></i></a><a href="#小明推送（push）自己的分支到远程仓库：" class="headerlink" title="小明推送（push）自己的分支到远程仓库："></a>小明推送（push）自己的分支到远程仓库：</h2>
      <blockquote>
<p>git push origin ming-dev</p>
</blockquote>

        <h2 id="切换到-master-主分支"   >
          <a href="#切换到-master-主分支" class="heading-link"><i class="fas fa-link"></i></a><a href="#切换到-master-主分支" class="headerlink" title="切换到 master 主分支"></a>切换到 master 主分支</h2>
      <blockquote>
<p>git checkout master</p>
</blockquote>

        <h2 id="push-到远程仓库"   >
          <a href="#push-到远程仓库" class="heading-link"><i class="fas fa-link"></i></a><a href="#push-到远程仓库" class="headerlink" title="push 到远程仓库"></a>push 到远程仓库</h2>
      <blockquote>
<p>git push origin master</p>
</blockquote>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>gitee</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-stun博客配置存档</title>
    <url>/2024/10/16/hexo%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E5%AD%98%E6%A1%A3/</url>
    <content><![CDATA[
        <h1 id="hexo-stun-博客配置存档"   >
          <a href="#hexo-stun-博客配置存档" class="heading-link"><i class="fas fa-link"></i></a><a href="#hexo-stun-博客配置存档" class="headerlink" title="hexo-stun 博客配置存档"></a>hexo-stun 博客配置存档</h1>
      
        <h2 id="标题"   >
          <a href="#标题" class="heading-link"><i class="fas fa-link"></i></a><a href="#标题" class="headerlink" title="标题"></a>标题</h2>
      
        <h3 id="markdown-语法如下"   >
          <a href="#markdown-语法如下" class="heading-link"><i class="fas fa-link"></i></a><a href="#markdown-语法如下" class="headerlink" title="markdown 语法如下"></a>markdown 语法如下</h3>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">tags: [&quot;&quot;]</span><br><span class="line">categories: [&quot;&quot;]</span><br><span class="line">---</span><br></pre></td></tr></table></div></figure>


        <h2 id="折叠代码块"   >
          <a href="#折叠代码块" class="heading-link"><i class="fas fa-link"></i></a><a href="#折叠代码块" class="headerlink" title="折叠代码块"></a>折叠代码块</h2>
      
        <h3 id="markdown-语法如下-1"   >
          <a href="#markdown-语法如下-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#markdown-语法如下-1" class="headerlink" title="markdown 语法如下"></a>markdown 语法如下</h3>
      
    <div class="note-plugin default">
      <span class="note-plugin__icon note-plugin__icon--default">
              <i class="fas fa-arrow-circle-right"></i>
            </span>
      <p>&lt;details&gt;<br>&lt;summary&gt;折叠文本&lt;/summary&gt;<br>```<br>展示文本<br>```<br>&lt;/details&gt;</p>
    </div>
  


        <h3 id="演示如下"   >
          <a href="#演示如下" class="heading-link"><i class="fas fa-link"></i></a><a href="#演示如下" class="headerlink" title="演示如下"></a>演示如下</h3>
      <details>
  <summary>折叠文本</summary>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">展示文本</span><br></pre></td></tr></table></div></figure>
</details>


        <h2 id="插入注释"   >
          <a href="#插入注释" class="heading-link"><i class="fas fa-link"></i></a><a href="#插入注释" class="headerlink" title="插入注释"></a>插入注释</h2>
      <p><span class="exturl"><a class="exturl__link"   href="https://theme-stun.github.io/docs/zh-CN/advanced/assist.html#%E6%8F%92%E5%85%A5%E6%B3%A8%E9%87%8A" >hexo-theme-stun-辅助功能-插入注释</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h3 id="四种注释类型"   >
          <a href="#四种注释类型" class="heading-link"><i class="fas fa-link"></i></a><a href="#四种注释类型" class="headerlink" title="四种注释类型"></a>四种注释类型</h3>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;!-- With header, With icon --&gt;</span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">**Success**</span><br><span class="line">This is success note.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- With header, No icon --&gt;</span><br><span class="line">&#123;% note success no-icon %&#125;</span><br><span class="line">**Success**</span><br><span class="line">This is success note.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- No header, With icon --&gt;</span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">This is success note.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- No header, No icon --&gt;</span><br><span class="line">&#123;% note success no-icon %&#125;</span><br><span class="line">This is success note.</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="No-header-With-icon"   >
          <a href="#No-header-With-icon" class="heading-link"><i class="fas fa-link"></i></a><a href="#No-header-With-icon" class="headerlink" title="No header, With icon"></a>No header, With icon</h3>
      
        <h4 id="markdown-语法如下-2"   >
          <a href="#markdown-语法如下-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#markdown-语法如下-2" class="headerlink" title="markdown 语法如下"></a>markdown 语法如下</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;!-- No header, With icon --&gt;</span><br><span class="line">&#123;% note default %&#125;</span><br><span class="line">This is default note.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">This is success note.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125;</span><br><span class="line">This is info note.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">This is warning note.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">This is danger note.</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="演示如下-1"   >
          <a href="#演示如下-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#演示如下-1" class="headerlink" title="演示如下"></a>演示如下</h4>
      
    <div class="note-plugin default">
      <span class="note-plugin__icon note-plugin__icon--default">
              <i class="fas fa-arrow-circle-right"></i>
            </span>
      <p>This is default note.</p>
    </div>
  


    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p>This is success note.</p>
    </div>
  


    <div class="note-plugin info">
      <span class="note-plugin__icon note-plugin__icon--info">
              <i class="fas fa-info-circle"></i>
            </span>
      <p>This is info note.</p>
    </div>
  


    <div class="note-plugin warning">
      <span class="note-plugin__icon note-plugin__icon--warning">
              <i class="fas fa-exclamation-circle"></i>
            </span>
      <p>This is warning note.</p>
    </div>
  


    <div class="note-plugin danger">
      <span class="note-plugin__icon note-plugin__icon--danger">
              <i class="fas fa-minus-circle"></i>
            </span>
      <p>This is danger note.</p>
    </div>
  


        <h3 id="With-header-With-icon"   >
          <a href="#With-header-With-icon" class="heading-link"><i class="fas fa-link"></i></a><a href="#With-header-With-icon" class="headerlink" title="With header, With icon"></a>With header, With icon</h3>
      
        <h4 id="markdown-语法如下-3"   >
          <a href="#markdown-语法如下-3" class="heading-link"><i class="fas fa-link"></i></a><a href="#markdown-语法如下-3" class="headerlink" title="markdown 语法如下"></a>markdown 语法如下</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;!-- With header, With icon --&gt;</span><br><span class="line">&#123;% note default %&#125;</span><br><span class="line">**Default**</span><br><span class="line">This is default note.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">**Success**</span><br><span class="line">This is success note.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125;</span><br><span class="line">**Info**</span><br><span class="line">This is info note.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">**Warning**</span><br><span class="line">This is warning note.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">**Danger**</span><br><span class="line">This is danger note.</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="演示如下-2"   >
          <a href="#演示如下-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#演示如下-2" class="headerlink" title="演示如下"></a>演示如下</h4>
      
    <div class="note-plugin default">
      <span class="note-plugin__icon note-plugin__icon--default">
              <i class="fas fa-arrow-circle-right"></i>
            </span>
      <p><strong>Default</strong><br>This is default note.</p>
    </div>
  


    <div class="note-plugin success">
      <span class="note-plugin__icon note-plugin__icon--success">
              <i class="fas fa-check-circle"></i>
            </span>
      <p><strong>Success</strong><br>This is success note.</p>
    </div>
  


    <div class="note-plugin info">
      <span class="note-plugin__icon note-plugin__icon--info">
              <i class="fas fa-info-circle"></i>
            </span>
      <p><strong>Info</strong><br>This is info note.</p>
    </div>
  


    <div class="note-plugin warning">
      <span class="note-plugin__icon note-plugin__icon--warning">
              <i class="fas fa-exclamation-circle"></i>
            </span>
      <p><strong>Warning</strong><br>This is warning note.</p>
    </div>
  


    <div class="note-plugin danger">
      <span class="note-plugin__icon note-plugin__icon--danger">
              <i class="fas fa-minus-circle"></i>
            </span>
      <p><strong>Danger</strong><br>This is danger note.</p>
    </div>
  
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>stun</tag>
      </tags>
  </entry>
  <entry>
    <title>md文件导入本地图片</title>
    <url>/2024/10/31/md%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[
        <h3 id="本地图片的相对路径"   >
          <a href="#本地图片的相对路径" class="heading-link"><i class="fas fa-link"></i></a><a href="#本地图片的相对路径" class="headerlink" title="本地图片的相对路径"></a>本地图片的相对路径</h3>
      <p>md文件和图片都在桌面上，可以采用相对路径：</p>
<p>![本地图片] (本地图片.png)</p>
]]></content>
  </entry>
  <entry>
    <title>museum-展馆界面-交通路线</title>
    <url>/2024/10/16/museum-%E5%B1%95%E9%A6%86%E7%95%8C%E9%9D%A2-%E4%BA%A4%E9%80%9A%E8%B7%AF%E7%BA%BF/</url>
    <content><![CDATA[
        <h1 id="museum-展馆界面-交通路线"   >
          <a href="#museum-展馆界面-交通路线" class="heading-link"><i class="fas fa-link"></i></a><a href="#museum-展馆界面-交通路线" class="headerlink" title="museum-展馆界面-交通路线"></a>museum-展馆界面-交通路线</h1>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;nav-bar&quot;&gt;</span><br><span class="line">    &lt;!-- 导航栏代码 --&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li&gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          data-v-039b8a00=&quot;&quot;</span><br><span class="line">          src=&quot;https://ajycc20.github.io/museum-frontend/static/img/menu-logo.9d415e7c.png&quot;</span><br><span class="line">          class=&quot;menu-logo&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">      &lt;li&gt;&lt;a href=&quot;http://localhost:5173/&quot;&gt;主页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;li class=&quot;exhibition&quot;&gt;</span><br><span class="line">        &lt;a href=&quot;http://localhost:5173/exhibition&quot;&gt;展馆&lt;/a&gt;</span><br><span class="line">        &lt;div class=&quot;exhibition-dropdown&quot;&gt;</span><br><span class="line">          &lt;!-- 下拉导航栏内容 --&gt;</span><br><span class="line">          &lt;a class=&quot;footer&quot; @click=&quot;scrollToExhibition&quot;&gt;全部展馆&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;footer&quot; @click=&quot;scrollToMapContainer&quot;&gt;交通路线&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;footer&quot; @click=&quot;scrollToMyCollection&quot;&gt;我的收藏&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">      &lt;li class=&quot;exhibits&quot;&gt;</span><br><span class="line">        &lt;a href=&quot;http://localhost:5173/exhibits&quot;&gt;展品&lt;/a&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">      &lt;li style=&quot;float: right&quot;&gt;&lt;a class=&quot;active&quot; href=&quot;#about&quot;&gt;个人中心&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;main-content&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;exhibition&quot; ref=&quot;exhibition&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;bjone&quot;&gt;</span><br><span class="line">        &lt;h3&gt;故宫博物院&lt;/h3&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;bjtwo&quot;&gt;</span><br><span class="line">        &lt;h3&gt;首都博物馆&lt;/h3&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;njone&quot;&gt;</span><br><span class="line">        &lt;h3&gt;南京博物院&lt;/h3&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;shone&quot;&gt;</span><br><span class="line">        &lt;h3&gt;上海博物馆&lt;/h3&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;img src=&quot;../assets/exh1.jpg&quot; alt=&quot;&quot; class=&quot;exh1&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;mapcontainer&quot; ref=&quot;mapContainer&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;textcontainer&quot;&gt;</span><br><span class="line">        &lt;h3&gt;交通路线&lt;/h3&gt;</span><br><span class="line">        &lt;p&gt;地址：南京市玄武区中山东路321号&lt;/p&gt;</span><br><span class="line">        &lt;button @click=&quot;showBusInfo&quot;&gt;公交&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;showMapInfo&quot;&gt;地铁&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;showCarInfo&quot;&gt;自驾停车&lt;/button&gt;</span><br><span class="line">        &lt;div class=&quot;bus-info&quot; v-if=&quot;showBus&quot;&gt;</span><br><span class="line">          &lt;h4&gt;如何乘坐公交到达南京博物院？&lt;/h4&gt;</span><br><span class="line">          &lt;p&gt;</span><br><span class="line">            乘坐公交 5路、34路、36路、55路、59路&lt;br /&gt;</span><br><span class="line">            到中山门站</span><br><span class="line">          &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;map-info&quot; v-if=&quot;showMap&quot;&gt;</span><br><span class="line">          &lt;h4&gt;周边地铁&lt;/h4&gt;</span><br><span class="line">          &lt;p&gt;2号线明故宫站，由一号出口向东300米&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;car-info&quot; v-if=&quot;showCar&quot;&gt;</span><br><span class="line">          &lt;h4&gt;自驾停车点&lt;/h4&gt;</span><br><span class="line">          &lt;p&gt;</span><br><span class="line">            设有大巴车及小车停车场。&lt;br /&gt;</span><br><span class="line">            小车停车入口处在南京博物院西门。&lt;br /&gt;</span><br><span class="line">            停车时间：星期二至星期天9:00-18:00</span><br><span class="line">          &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;collection&quot; ref=&quot;myCollection&quot;&gt;</span><br><span class="line">      &lt;h3&gt;我的收藏&lt;/h3&gt;</span><br><span class="line">      &lt;h3&gt;我的收藏&lt;/h3&gt;</span><br><span class="line">      &lt;h3&gt;我的收藏&lt;/h3&gt;</span><br><span class="line">      &lt;h3&gt;我的收藏&lt;/h3&gt;</span><br><span class="line">      &lt;h3&gt;我的收藏&lt;/h3&gt;</span><br><span class="line">      &lt;h3&gt;我的收藏&lt;/h3&gt;</span><br><span class="line">      &lt;h3&gt;我的收藏&lt;/h3&gt;</span><br><span class="line">      &lt;h3&gt;我的收藏&lt;/h3&gt;</span><br><span class="line">      &lt;h3&gt;我的收藏&lt;/h3&gt;</span><br><span class="line">      &lt;h3&gt;我的收藏&lt;/h3&gt;</span><br><span class="line">      &lt;h3&gt;我的收藏&lt;/h3&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      showBus: false,</span><br><span class="line">      showMap: false,</span><br><span class="line">      showCar: false,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    /**</span><br><span class="line">     * 1、左侧部分：地图</span><br><span class="line">     */</span><br><span class="line"></span><br><span class="line">    // 跳转至全部展馆exhibition</span><br><span class="line">    scrollToExhibition() &#123;</span><br><span class="line">      const exhibition = this.$refs.exhibition;</span><br><span class="line">      if (exhibition) &#123;</span><br><span class="line">        exhibition.scrollIntoView(&#123;</span><br><span class="line">          behavior: &quot;smooth&quot;,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 跳转至交通路线mapcontainer</span><br><span class="line">    scrollToMapContainer() &#123;</span><br><span class="line">      const mapContainer = this.$refs.mapContainer;</span><br><span class="line">      if (mapContainer) &#123;</span><br><span class="line">        mapContainer.scrollIntoView(&#123;</span><br><span class="line">          behavior: &quot;smooth&quot;,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 跳转至我的收藏myCollection</span><br><span class="line">    scrollToMyCollection() &#123;</span><br><span class="line">      const myCollection = this.$refs.myCollection;</span><br><span class="line">      if (myCollection) &#123;</span><br><span class="line">        myCollection.scrollIntoView(&#123;</span><br><span class="line">          behavior: &quot;smooth&quot;,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 显示地图控件</span><br><span class="line">    initializeMap() &#123;</span><br><span class="line">      const mapContainer = this.$refs.mapContainer;</span><br><span class="line">      const map = new AMap.Map(mapContainer, &#123;</span><br><span class="line">        center: [118.825064, 32.040802], // 设置地图中心点经纬度</span><br><span class="line">        zoom: 15, // 设置地图缩放级别</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      // 添加地图控件</span><br><span class="line">      AMap.plugin(</span><br><span class="line">        [&quot;AMap.ToolBar&quot;, &quot;AMap.Scale&quot;, &quot;AMap.MapType&quot;, &quot;AMap.Geolocation&quot;],</span><br><span class="line">        () =&gt; &#123;</span><br><span class="line">          map.addControl(new AMap.ToolBar());</span><br><span class="line">          map.addControl(new AMap.Scale());</span><br><span class="line">          map.addControl(new AMap.MapType());</span><br><span class="line">          map.addControl(new AMap.Geolocation());</span><br><span class="line">        &#125;</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      // 在地图上添加一个标记点</span><br><span class="line">      const marker = new AMap.Marker(&#123;</span><br><span class="line">        position: [118.825064, 32.040802], // 设置标记点的经纬度</span><br><span class="line">        map: map,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 2、右侧部分：文字</span><br><span class="line">     */</span><br><span class="line">    showBusInfo() &#123;</span><br><span class="line">      this.showBus = true;</span><br><span class="line">      this.showMap = false;</span><br><span class="line">      this.showCar = false;</span><br><span class="line">    &#125;,</span><br><span class="line">    showMapInfo() &#123;</span><br><span class="line">      this.showBus = false;</span><br><span class="line">      this.showMap = true;</span><br><span class="line">      this.showCar = false;</span><br><span class="line">    &#125;,</span><br><span class="line">    showCarInfo() &#123;</span><br><span class="line">      this.showBus = false;</span><br><span class="line">      this.showMap = false;</span><br><span class="line">      this.showCar = true;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    const mapScript = document.createElement(&quot;script&quot;);</span><br><span class="line">    mapScript.src =</span><br><span class="line">      &quot;https://webapi.amap.com/maps?v=1.4.15&amp;key=0eb3710f749e5a9df901264fcdc8599a&quot;;</span><br><span class="line">    mapScript.async = true;</span><br><span class="line">    mapScript.onload = this.initializeMap;</span><br><span class="line">    document.head.appendChild(mapScript);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">/* 导航栏的样式 */</span><br><span class="line">.nav-bar &#123;</span><br><span class="line">  position: fixed;</span><br><span class="line">  top: 0;</span><br><span class="line">  left: 0;</span><br><span class="line">  width: 100%;</span><br><span class="line">  z-index: 999;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ul &#123;</span><br><span class="line">  list-style-type: none;</span><br><span class="line">  margin: 0;</span><br><span class="line">  padding: 0;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  background-color: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">li &#123;</span><br><span class="line">  float: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">li a &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  text-align: center;</span><br><span class="line">  padding: 14px 16px;</span><br><span class="line">  text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line">li a:hover &#123;</span><br><span class="line">  color: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.exhibition-dropdown &#123;</span><br><span class="line">  display: none;</span><br><span class="line">  background-color: #d4973b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.exhibition:hover .exhibition-dropdown &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  position: absolute;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 设置展馆下拉框的字体样式 */</span><br><span class="line">.exhibition-dropdown a &#123;</span><br><span class="line">  /* 默认黑色字体 */</span><br><span class="line">  color: black;</span><br><span class="line">  font-size: 20px;</span><br><span class="line">  /* 添加过渡效果 */</span><br><span class="line">  transition: color 0.3s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.exhibition-dropdown a:hover &#123;</span><br><span class="line">  color: white;</span><br><span class="line">  transform: translateY(-2px);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.exhibition-dropdown a:focus &#123;</span><br><span class="line">  outline: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.exhibition-dropdown a:active &#123;</span><br><span class="line">  transform: translateY(2px);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 全部展馆的样式设计 */</span><br><span class="line">.exhibition &#123;</span><br><span class="line">  background-color: rgb(244, 241, 241);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.exh1 &#123;</span><br><span class="line">  width: 300px;</span><br><span class="line">  height: 300px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 交通路线地图框与文字描述框的样式设计 */</span><br><span class="line">.container &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  flex-wrap: wrap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.mapcontainer,</span><br><span class="line">.textcontainer &#123;</span><br><span class="line">  width: 50%;</span><br><span class="line">  height: 400px;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.textcontainer &#123;</span><br><span class="line">  background-color: #d4973b;</span><br><span class="line">  color: #ffffff;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>
]]></content>
      <categories>
        <category>vue3</category>
      </categories>
      <tags>
        <tag>vue3</tag>
      </tags>
  </entry>
  <entry>
    <title>site</title>
    <url>/2024/10/16/site/</url>
    <content><![CDATA[
        <h1 id="site"   >
          <a href="#site" class="heading-link"><i class="fas fa-link"></i></a><a href="#site" class="headerlink" title="site"></a>site</h1>
      
        <h2 id="blog-site-博客站点"   >
          <a href="#blog-site-博客站点" class="heading-link"><i class="fas fa-link"></i></a><a href="#blog-site-博客站点" class="headerlink" title="blog.site 博客站点"></a>blog.site 博客站点</h2>
      
        <h3 id="render"   >
          <a href="#render" class="heading-link"><i class="fas fa-link"></i></a><a href="#render" class="headerlink" title="render"></a>render</h3>
      <p><span class="exturl"><a class="exturl__link"   href="https://render.com/" >render</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
<p><span class="exturl"><a class="exturl__link"   href="https://remix.run/" >remix</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h2 id="tutorial-site-教程站点"   >
          <a href="#tutorial-site-教程站点" class="heading-link"><i class="fas fa-link"></i></a><a href="#tutorial-site-教程站点" class="headerlink" title="tutorial.site 教程站点"></a>tutorial.site 教程站点</h2>
      
        <h3 id="tutorial"   >
          <a href="#tutorial" class="heading-link"><i class="fas fa-link"></i></a><a href="#tutorial" class="headerlink" title="tutorial"></a>tutorial</h3>
      <p><span class="exturl"><a class="exturl__link"   href="https://tutorialedge.net/" >tutorialedge</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h2 id="rank-site-排行榜站点"   >
          <a href="#rank-site-排行榜站点" class="heading-link"><i class="fas fa-link"></i></a><a href="#rank-site-排行榜站点" class="headerlink" title="rank.site 排行榜站点"></a>rank.site 排行榜站点</h2>
      
        <h3 id="bestofjs"   >
          <a href="#bestofjs" class="heading-link"><i class="fas fa-link"></i></a><a href="#bestofjs" class="headerlink" title="bestofjs"></a>bestofjs</h3>
      <p><span class="exturl"><a class="exturl__link"   href="https://bestofjs.org/" >bestofjs</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h2 id="search-site-搜索站点"   >
          <a href="#search-site-搜索站点" class="heading-link"><i class="fas fa-link"></i></a><a href="#search-site-搜索站点" class="headerlink" title="search.site 搜索站点"></a>search.site 搜索站点</h2>
      
        <h3 id="zhelper"   >
          <a href="#zhelper" class="heading-link"><i class="fas fa-link"></i></a><a href="#zhelper" class="headerlink" title="zhelper"></a>zhelper</h3>
      <p><span class="exturl"><a class="exturl__link"   href="https://tool.yibook.org/" >zhelper</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h2 id="navigation-site-导航站点"   >
          <a href="#navigation-site-导航站点" class="heading-link"><i class="fas fa-link"></i></a><a href="#navigation-site-导航站点" class="headerlink" title="navigation.site 导航站点"></a>navigation.site 导航站点</h2>
      
        <h3 id="ciro-club"   >
          <a href="#ciro-club" class="heading-link"><i class="fas fa-link"></i></a><a href="#ciro-club" class="headerlink" title="ciro.club"></a>ciro.club</h3>
      <p><span class="exturl"><a class="exturl__link"   href="https://ciro.club/navigations" >ciro.club</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
]]></content>
  </entry>
  <entry>
    <title>Vue-事件处理</title>
    <url>/2024/10/16/vue-EventHandling/</url>
    <content><![CDATA[
        <h1 id="Vue-事件处理"   >
          <a href="#Vue-事件处理" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vue-事件处理" class="headerlink" title="Vue-事件处理"></a>Vue-事件处理</h1>
      
        <h2 id="源码"   >
          <a href="#源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码" class="headerlink" title="源码"></a>源码</h2>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./lib/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我喜欢的水果是：&#123;&#123;favoriteFruit&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeFavoriteFruit(&#x27;西瓜&#x27;)&quot;</span>&gt;</span>西瓜<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeFavoriteFruit(&#x27;苹果&#x27;)&quot;</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeFavoriteFruit(&#x27;香蕉&#x27;)&quot;</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">favoriteFruit</span>: <span class="string">&quot;橙子&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">changeFavoriteFruit</span>: <span class="keyword">function</span> (<span class="params">fruit</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">favoriteFruit</span> = fruit;</span></span><br><span class="line"><span class="language-javascript">          &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>
]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-cli使用commander解析命令行参数</title>
    <url>/2024/10/16/vue-cli%E4%BD%BF%E7%94%A8commander%E8%A7%A3%E6%9E%90%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[
        <h1 id="vue-cli-使用-commander-解析命令行参数"   >
          <a href="#vue-cli-使用-commander-解析命令行参数" class="heading-link"><i class="fas fa-link"></i></a><a href="#vue-cli-使用-commander-解析命令行参数" class="headerlink" title="vue-cli 使用 commander 解析命令行参数"></a>vue-cli 使用 commander 解析命令行参数</h1>
      
        <h2 id="commander-js"   >
          <a href="#commander-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#commander-js" class="headerlink" title="commander.js"></a>commander.js</h2>
      <p><span class="exturl"><a class="exturl__link"   href="https://github.com/tj/commander.js/" >网址</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h2 id="下载指令"   >
          <a href="#下载指令" class="heading-link"><i class="fas fa-link"></i></a><a href="#下载指令" class="headerlink" title="下载指令"></a>下载指令</h2>
      <blockquote>
<p>npm install commander</p>
</blockquote>

        <h2 id="index-js-源码"   >
          <a href="#index-js-源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#index-js-源码" class="headerlink" title="index.js 源码"></a>index.js 源码</h2>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /usr/bin/env node</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> program = <span class="built_in">require</span>(<span class="string">&quot;commander&quot;</span>);</span><br><span class="line"></span><br><span class="line">program.<span class="title function_">version</span>(<span class="string">&quot;0.1.0&quot;</span>);</span><br><span class="line"></span><br><span class="line">program</span><br><span class="line">  .<span class="title function_">command</span>(<span class="string">&quot;init &lt;templateName&gt; &lt;projectName&gt;&quot;</span>)</span><br><span class="line">  .<span class="title function_">description</span>(<span class="string">&quot;初始化项目模板&quot;</span>)</span><br><span class="line">  .<span class="title function_">option</span>(<span class="string">&quot;-s, --setup_mode [mode]&quot;</span>)</span><br><span class="line">  .<span class="title function_">action</span>(<span class="keyword">function</span> (<span class="params">templateName, projectName</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(templateName);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(projectName);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">program</span><br><span class="line">  .<span class="title function_">command</span>(<span class="string">&quot;list&quot;</span>)</span><br><span class="line">  .<span class="title function_">description</span>(<span class="string">&quot;查看所有可用模板&quot;</span>)</span><br><span class="line">  .<span class="title function_">action</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">      <span class="string">&quot;查看所有可用模板: &quot;</span> +</span><br><span class="line">        <span class="string">&quot;\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;a a模板&quot;</span> +</span><br><span class="line">        <span class="string">&quot;\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;b b模板&quot;</span> +</span><br><span class="line">        <span class="string">&quot;\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;c c模板&quot;</span></span><br><span class="line">    );</span><br><span class="line">  &#125;);</span><br><span class="line">program.<span class="title function_">parse</span>(process.<span class="property">argv</span>);</span><br></pre></td></tr></table></div></figure>


        <h2 id="package-json-源码"   >
          <a href="#package-json-源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#package-json-源码" class="headerlink" title="package.json 源码"></a>package.json 源码</h2>
      <figure class="highlight json"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;itcast-cli&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;bin&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;itcast&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.js&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;commander&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^10.0.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></div></figure>
]]></content>
      <categories>
        <category>cli</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>cli</tag>
        <tag>commander</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue3 引入高德地图</title>
    <url>/2024/10/16/vue3%E5%BC%95%E5%85%A5%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BE/</url>
    <content><![CDATA[
        <h1 id="Vue3-引入高德地图"   >
          <a href="#Vue3-引入高德地图" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vue3-引入高德地图" class="headerlink" title="Vue3 引入高德地图"></a>Vue3 引入高德地图</h1>
      
        <h2 id="App-vue"   >
          <a href="#App-vue" class="heading-link"><i class="fas fa-link"></i></a><a href="#App-vue" class="headerlink" title="App.vue"></a>App.vue</h2>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;App&quot;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    // 引入高德地图API的JS文件和CSS文件</span><br><span class="line">    const jsapi = document.createElement(&quot;script&quot;);</span><br><span class="line">    jsapi.src =</span><br><span class="line">      &quot;https://webapi.amap.com/maps?v=1.4.15&amp;key=0eb3710f749e5a9df901264fcdc8599a&quot;;</span><br><span class="line">    document.head.appendChild(jsapi);</span><br><span class="line"></span><br><span class="line">    const cssapi = document.createElement(&quot;link&quot;);</span><br><span class="line">    cssapi.rel = &quot;stylesheet&quot;;</span><br><span class="line">    cssapi.href =</span><br><span class="line">      &quot;https://a.amap.com/jsapi_demos/static/demo-center/css/demo-center.css&quot;;</span><br><span class="line">    document.head.appendChild(cssapi);</span><br><span class="line"></span><br><span class="line">    // 初始化地图</span><br><span class="line">    jsapi.onload = () =&gt; &#123;</span><br><span class="line">      const mapContainer = document.getElementById(&quot;app&quot;);</span><br><span class="line">      const map = new AMap.Map(mapContainer, &#123;</span><br><span class="line">        center: [118.825064, 32.040802],</span><br><span class="line">        zoom: 13,</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      // 添加标记点</span><br><span class="line">      const marker = new AMap.Marker(&#123;</span><br><span class="line">        position: [118.825064, 32.040802],</span><br><span class="line">        map: map,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  width: 50%;</span><br><span class="line">  height: 500px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></div></figure>
]]></content>
      <categories>
        <category>Vue3</category>
      </categories>
      <tags>
        <tag>Vue3</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2024/10/16/vue3%E6%96%B0%E7%89%B9%E6%80%A7/</url>
    <content><![CDATA[
        <h1 id="Vue3-新特性"   >
          <a href="#Vue3-新特性" class="heading-link"><i class="fas fa-link"></i></a><a href="#Vue3-新特性" class="headerlink" title="Vue3 新特性"></a>Vue3 新特性</h1>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;home&quot;&gt;&#123;&#123; name &#125;&#125;-&#123;&#123; age &#125;&#125;-&#123;&#123; num &#125;&#125;&lt;/div&gt;</span><br><span class="line">  &lt;button @click=&quot;change()&quot;&gt;click&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// import HelloWorld from &#x27;@/components/HelloWorld.vue&#x27;</span><br><span class="line"></span><br><span class="line">import &#123; reactive, toRefs, onMounted, onUnmounted, computed &#125; from &quot;vue&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;HomeView&quot;,</span><br><span class="line">  // components: &#123;</span><br><span class="line">  //   HelloWorld</span><br><span class="line">  // &#125;</span><br><span class="line">  setup(props, context) &#123;</span><br><span class="line">    // 响应式数据</span><br><span class="line">    const state = reactive(&#123;</span><br><span class="line">      name: &quot;jindu&quot;,</span><br><span class="line">      age: 20,</span><br><span class="line">      num: computed(() =&gt; state.age + 1),</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    // 方法定义</span><br><span class="line">    const change = () =&gt; &#123;</span><br><span class="line">      state.age += 1;</span><br><span class="line">      console.log(state.age);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    onMounted(() =&gt; &#123;</span><br><span class="line">      change();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    onUnmounted(() =&gt; &#123;&#125;);</span><br><span class="line"></span><br><span class="line">    return &#123;</span><br><span class="line">      ...toRefs(state),</span><br><span class="line">      change,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></div></figure>
]]></content>
  </entry>
  <entry>
    <title>youtube-trip-Backpacker</title>
    <url>/2024/10/16/youtube-trip-Backpacker/</url>
    <content><![CDATA[
        <h1 id="题目"   >
          <a href="#题目" class="heading-link"><i class="fas fa-link"></i></a><a href="#题目" class="headerlink" title="题目"></a>题目</h1>
      <p>Backpackers guide to Living and Working in Queenstown, New Zealand</p>

        <h2 id="视频地址"   >
          <a href="#视频地址" class="heading-link"><i class="fas fa-link"></i></a><a href="#视频地址" class="headerlink" title="视频地址"></a>视频地址</h2>
      <p><span class="exturl"><a class="exturl__link"   href="https://www.youtube.com/watch?v=EJRGJmGq_ec" >youtube</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h2 id="关键词"   >
          <a href="#关键词" class="heading-link"><i class="fas fa-link"></i></a><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h2>
      <p>Backpacker<br>backpacking<br>Working holiday visa<br>Adrenaline<br>bungee jump<br>tips and tricks<br>freebie</p>

        <h2 id="地理"   >
          <a href="#地理" class="heading-link"><i class="fas fa-link"></i></a><a href="#地理" class="headerlink" title="地理"></a>地理</h2>
      <p>The bottom half of the south island of New Zealand<br>It is surrounded by mountains.<br>a lakeside town<br>Lake Wanaka<br>Glenorchy<br>Frankton</p>

        <h2 id="Tips"   >
          <a href="#Tips" class="heading-link"><i class="fas fa-link"></i></a><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2>
      <details>
  <summary>👇Get a car:</summary>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">go wherever you want whenever you want to have that freedom</span><br></pre></td></tr></table></div></figure>
</details>

<details>
  <summary>👇How to find a job in Queenstown: </summary>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">shift work</span><br></pre></td></tr></table></div></figure>
</details>


        <h2 id="网站-社交媒体"   >
          <a href="#网站-社交媒体" class="heading-link"><i class="fas fa-link"></i></a><a href="#网站-社交媒体" class="headerlink" title="网站/社交媒体"></a>网站/社交媒体</h2>
      <p>Kiwi experience<br>Facebook group Queenstown trading<br>Facebook group for rent in Queenstown</p>

        <h2 id="工种"   >
          <a href="#工种" class="heading-link"><i class="fas fa-link"></i></a><a href="#工种" class="headerlink" title="工种"></a>工种</h2>
      <p>Backpacker<br>Waiter/Waitress<br>housekeeper</p>
]]></content>
      <categories>
        <category>trip</category>
      </categories>
      <tags>
        <tag>trip</tag>
        <tag>Backpacker</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue-Webpack-Plugin</title>
    <url>/2024/10/16/webpackPlugin/</url>
    <content><![CDATA[
        <h1 id="webpack插件"   >
          <a href="#webpack插件" class="heading-link"><i class="fas fa-link"></i></a><a href="#webpack插件" class="headerlink" title="webpack插件"></a>webpack插件</h1>
      <p>常用的webpack插件有两个：</p>
<ul>
<li><p>webpack-dev-server</p>
</li>
<li><p>html-webpack-plugin</p>
</li>
</ul>

        <h2 id="html-webpack-plugin"   >
          <a href="#html-webpack-plugin" class="heading-link"><i class="fas fa-link"></i></a><a href="#html-webpack-plugin" class="headerlink" title="html-webpack-plugin"></a>html-webpack-plugin</h2>
      
        <h3 id="初始化"   >
          <a href="#初始化" class="heading-link"><i class="fas fa-link"></i></a><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3>
      
        <h4 id="步骤一-安装html-wepack-plugin"   >
          <a href="#步骤一-安装html-wepack-plugin" class="heading-link"><i class="fas fa-link"></i></a><a href="#步骤一-安装html-wepack-plugin" class="headerlink" title="(步骤一)安装html-wepack-plugin"></a>(步骤一)安装html-wepack-plugin</h4>
      <blockquote>
<p>npm install html-webpack-plugin -D</p>
</blockquote>

        <h4 id="步骤二-配置html-wepack-plugin"   >
          <a href="#步骤二-配置html-wepack-plugin" class="heading-link"><i class="fas fa-link"></i></a><a href="#步骤二-配置html-wepack-plugin" class="headerlink" title="(步骤二)配置html-wepack-plugin"></a>(步骤二)配置html-wepack-plugin</h4>
      <ul>
<li><p>导入插件，创建插件实例对象</p>
</li>
<li><p>在plugins中加入插件实例对象</p>
</li>
</ul>
<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> htmlPlugin = <span class="keyword">new</span> <span class="title class_">HtmlPlugin</span>(&#123;</span><br><span class="line">  <span class="attr">template</span>:<span class="string">&#x27;./src/index.html&#x27;</span>,</span><br><span class="line">  <span class="attr">filename</span>:<span class="string">&#x27;./index.html&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  ...</span><br><span class="line">  ...</span><br><span class="line">  ...</span><br><span class="line">  <span class="attr">devServer</span>:&#123;</span><br><span class="line">    <span class="attr">static</span>:&#123;</span><br><span class="line">      <span class="attr">directory</span>:__dirname + <span class="string">&quot;/&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">port</span>:<span class="number">8080</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>:[htmlPlugin]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="源码"   >
          <a href="#源码" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码" class="headerlink" title="源码"></a>源码</h3>
      
        <h4 id="index-html"   >
          <a href="#index-html" class="heading-link"><i class="fas fa-link"></i></a><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h4>
      <figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>A1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>A2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>A3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>A4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>A5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>A6<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>A7<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;bundle.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>


        <h4 id="index-css"   >
          <a href="#index-css" class="heading-link"><i class="fas fa-link"></i></a><a href="#index-css" class="headerlink" title="index.css"></a>index.css</h4>
      <figure class="highlight css"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">list-style</span>:none;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="index-js"   >
          <a href="#index-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">&#x27;jquery&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./index.css&#x27;</span></span><br><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  $(<span class="string">&#x27;li:odd&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background-color&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line">  $(<span class="string">&#x27;li:even&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background-color&#x27;</span>,<span class="string">&#x27;pink&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure>


        <h4 id="webpack-config-js"   >
          <a href="#webpack-config-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#webpack-config-js" class="headerlink" title="webpack.config.js"></a>webpack.config.js</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> htmlPlugin = <span class="keyword">new</span> <span class="title class_">HtmlPlugin</span>(&#123;</span><br><span class="line">  <span class="attr">template</span>:<span class="string">&#x27;./src/index.html&#x27;</span>,</span><br><span class="line">  <span class="attr">filename</span>:<span class="string">&#x27;./index.html&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">mode</span>:<span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">  <span class="attr">module</span>:&#123;</span><br><span class="line">    <span class="attr">rules</span>:[</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>:<span class="regexp">/\.css$/i</span>,</span><br><span class="line">        <span class="attr">use</span>:[<span class="string">&quot;style-loader&quot;</span>,<span class="string">&quot;css-loader&quot;</span>],</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">devServer</span>:&#123;</span><br><span class="line">    <span class="attr">static</span>:&#123;</span><br><span class="line">      <span class="attr">directory</span>:__dirname + <span class="string">&quot;/&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">port</span>:<span class="number">8080</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>:[htmlPlugin]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="package-json"   >
          <a href="#package-json" class="heading-link"><i class="fas fa-link"></i></a><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h4>
      <figure class="highlight json"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;caser&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;serve&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack serve&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;css-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.7.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;html-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.5.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;style-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.3.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.75.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-dev-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.11.1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;jquery&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.6.3&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></div></figure>


        <h2 id="源码-1"   >
          <a href="#源码-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-1" class="headerlink" title="源码"></a>源码</h2>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.导入html-plugin插件，得到插件的构造函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.new构造函数，创建插件的实例对象</span></span><br><span class="line"><span class="keyword">const</span> htmlPlugin = <span class="keyword">new</span> <span class="title class_">HtmlPlugin</span>(&#123;</span><br><span class="line">  <span class="comment">// 指定要复制哪个页面</span></span><br><span class="line">  <span class="attr">template</span>: <span class="string">&#x27;./src/index.html&#x27;</span>,</span><br><span class="line">  <span class="comment">// 指定复制出来的文件名和存放路径</span></span><br><span class="line">  <span class="attr">filename</span>: <span class="string">&#x27;./index.html&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">  <span class="comment">// entry指定要处理哪个文件</span></span><br><span class="line">  <span class="attr">entry</span>: path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;./src/index1.js&#x27;</span>),</span><br><span class="line">  <span class="comment">// output指定生成的文件存放地址</span></span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="comment">// 存放到目录</span></span><br><span class="line">    <span class="attr">path</span>: path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">    <span class="comment">// 生成的文件名</span></span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;bundle.js&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 插件的数组，将来webpack在运行时，会加载并调用这些插件</span></span><br><span class="line">  <span class="attr">plugins</span>: [htmlPlugin],</span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="comment">// 首次打包成功后自动打开浏览器</span></span><br><span class="line">    <span class="attr">open</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 在http协议中，如果端口号是80，则可以被省略</span></span><br><span class="line">    <span class="attr">port</span>: <span class="number">80</span>,</span><br><span class="line">    <span class="comment">// 指定运行的地址</span></span><br><span class="line">    <span class="attr">host</span>: <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  &#125;;  </span><br></pre></td></tr></table></div></figure>]]></content>
      <categories>
        <category>Vue</category>
        <category>webpack</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>webpack</tag>
        <tag>Plugin</tag>
      </tags>
  </entry>
  <entry>
    <title>zhelper</title>
    <url>/2024/10/16/zhelper/</url>
    <content><![CDATA[
        <h1 id="zhepler"   >
          <a href="#zhepler" class="heading-link"><i class="fas fa-link"></i></a><a href="#zhepler" class="headerlink" title="zhepler"></a>zhepler</h1>
      <p><span class="exturl"><a class="exturl__link"   href="https://search.zhelper.net/" >zhelper</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
]]></content>
  </entry>
  <entry>
    <title>数据结构教程:Java语言描述(下)</title>
    <url>/2024/10/16/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%95%99%E7%A8%8BJava%E8%AF%AD%E8%A8%80%E6%8F%8F%E8%BF%B0(%E4%B8%8B)/</url>
    <content><![CDATA[<ul>
<li><span class="exturl"><a class="exturl__link"   href="http://www.tup.tsinghua.edu.cn/booksCenter/book_08649901.html" >数据结构教程: Java语言描述</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li>
</ul>

        <h2 id="第六章-数组和稀疏矩阵"   >
          <a href="#第六章-数组和稀疏矩阵" class="heading-link"><i class="fas fa-link"></i></a><a href="#第六章-数组和稀疏矩阵" class="headerlink" title="第六章 数组和稀疏矩阵"></a>第六章 数组和稀疏矩阵</h2>
      
        <h2 id="第七章-树和二叉树"   >
          <a href="#第七章-树和二叉树" class="heading-link"><i class="fas fa-link"></i></a><a href="#第七章-树和二叉树" class="headerlink" title="第七章 树和二叉树"></a>第七章 树和二叉树</h2>
      
        <h3 id="树"   >
          <a href="#树" class="heading-link"><i class="fas fa-link"></i></a><a href="#树" class="headerlink" title="树"></a>树</h3>
      
        <h3 id="二叉树"   >
          <a href="#二叉树" class="heading-link"><i class="fas fa-link"></i></a><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h3>
      
        <h4 id="二叉树的概念"   >
          <a href="#二叉树的概念" class="heading-link"><i class="fas fa-link"></i></a><a href="#二叉树的概念" class="headerlink" title="二叉树的概念"></a>二叉树的概念</h4>
      <p>略</p>

        <h4 id="二叉树的性质"   >
          <a href="#二叉树的性质" class="heading-link"><i class="fas fa-link"></i></a><a href="#二叉树的性质" class="headerlink" title="二叉树的性质"></a>二叉树的性质</h4>
      <p>略</p>

        <h4 id="二叉树的存储结构"   >
          <a href="#二叉树的存储结构" class="heading-link"><i class="fas fa-link"></i></a><a href="#二叉树的存储结构" class="headerlink" title="二叉树的存储结构"></a>二叉树的存储结构</h4>
      
        <h5 id="二叉树的顺序存储结构"   >
          <a href="#二叉树的顺序存储结构" class="heading-link"><i class="fas fa-link"></i></a><a href="#二叉树的顺序存储结构" class="headerlink" title="二叉树的顺序存储结构"></a>二叉树的顺序存储结构</h5>
      <ul>
<li>完全二叉树或满二叉树采用顺序存储结构比较合适</li>
</ul>

        <h5 id="二叉树的链式存储结构"   >
          <a href="#二叉树的链式存储结构" class="heading-link"><i class="fas fa-link"></i></a><a href="#二叉树的链式存储结构" class="headerlink" title="二叉树的链式存储结构"></a>二叉树的链式存储结构</h5>
      <p>这种链式存储结构通常简称为<strong>二叉链</strong></p>
<ul>
<li>二叉链结点类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTNode</span> &lt;E&gt;&#123;    <span class="comment">// 二叉链中的结点类</span></span><br><span class="line">    E data;</span><br><span class="line">    BTNode lChild;</span><br><span class="line">    BTNode rChild;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BTNode</span><span class="params">()</span>&#123;</span><br><span class="line">        lChild = rChild = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BTNode</span><span class="params">(E d)</span>&#123;</span><br><span class="line">        data = d;</span><br><span class="line">        lChild = rChild = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<blockquote>
<p>整棵二叉树通过根节点b来唯一标识</p>
</blockquote>

        <h4 id="二叉树的递归算法设计"   >
          <a href="#二叉树的递归算法设计" class="heading-link"><i class="fas fa-link"></i></a><a href="#二叉树的递归算法设计" class="headerlink" title="二叉树的递归算法设计"></a>二叉树的递归算法设计</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">(BTNode&lt;Character&gt; b)</span>&#123;   <span class="comment">// 二叉链对应递归算法</span></span><br><span class="line">        <span class="keyword">if</span>(b == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> b.data + fun(b.lChild) + fun(b.rChild);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="二叉树的基本运算及其实现"   >
          <a href="#二叉树的基本运算及其实现" class="heading-link"><i class="fas fa-link"></i></a><a href="#二叉树的基本运算及其实现" class="headerlink" title="二叉树的基本运算及其实现"></a>二叉树的基本运算及其实现</h4>
      <ul>
<li>二叉链类及其基本运算算法的实现</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeClass</span> &lt;E&gt;&#123;   <span class="comment">// 二叉树类</span></span><br><span class="line">    BTNode&lt;Character&gt; b;</span><br><span class="line">    String bStr;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BTreeClass</span><span class="params">()</span>&#123;</span><br><span class="line">        b = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 二叉树基本运算算法</span></span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createBTree</span><span class="params">(String str)</span>&#123;   <span class="comment">// 创建以b为根节点的二叉链存储结构</span></span><br><span class="line">        Stack&lt;BTNode&gt; st = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;BTNode&gt;();</span><br><span class="line">        BTNode&lt;Character&gt; p = <span class="literal">null</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">char</span> ch;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; str.length())&#123;</span><br><span class="line">            ch = str.charAt(i);</span><br><span class="line">            <span class="keyword">switch</span>(ch)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">                    st.push(p);</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;)&#x27;</span>:</span><br><span class="line">                    st.pop();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;,&#x27;</span>:</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    p = <span class="keyword">new</span> <span class="title class_">BTNode</span>&lt;Character&gt;(ch);</span><br><span class="line">                    <span class="keyword">if</span>(b == <span class="literal">null</span>)</span><br><span class="line">                        b = p;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                            <span class="keyword">if</span>(!st.empty())</span><br><span class="line">                                st.peek().lChild = p;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span>(!st.empty())</span><br><span class="line">                                st.peek().rChild = p;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;   <span class="comment">// 返回二叉链的括号表示串</span></span><br><span class="line">        bStr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        toString1(b);</span><br><span class="line">        <span class="keyword">return</span> bStr;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">toString1</span><span class="params">(BTNode&lt;Character&gt; t)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t != <span class="literal">null</span>)&#123;</span><br><span class="line">            bStr += t.data;</span><br><span class="line">            <span class="keyword">if</span>(t.lChild != <span class="literal">null</span> || t.rChild != <span class="literal">null</span>)&#123;</span><br><span class="line">                bStr += <span class="string">&quot;(&quot;</span>;</span><br><span class="line">                toString1(t.lChild);</span><br><span class="line">                <span class="keyword">if</span>(t.rChild != <span class="literal">null</span>)</span><br><span class="line">                    bStr += <span class="string">&quot;,&quot;</span>;</span><br><span class="line">                toString1(t.rChild);</span><br><span class="line">                bStr += <span class="string">&quot;)&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">public</span> BTNode&lt;Character&gt; <span class="title function_">findNode</span><span class="params">(<span class="type">char</span> x)</span>&#123;     <span class="comment">// 查找值为x的结点的算法</span></span><br><span class="line">        <span class="keyword">return</span> findNode1(b,x);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">private</span> BTNode&lt;Character&gt; <span class="title function_">findNode1</span><span class="params">(BTNode&lt;Character&gt; t,<span class="type">char</span> x)</span>&#123;</span><br><span class="line">        BTNode&lt;Character&gt; p;</span><br><span class="line">        <span class="keyword">if</span>(t == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(t.data == x)</span><br><span class="line">            <span class="keyword">return</span> t;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            p = findNode1(t.lChild,x);</span><br><span class="line">            <span class="keyword">if</span>(p != <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">return</span> p;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> findNode1(t.rChild,x);</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">height</span><span class="params">()</span>&#123;   <span class="comment">// 求二叉树高度的算法</span></span><br><span class="line">        <span class="keyword">return</span> height1(b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">height1</span><span class="params">(BTNode&lt;Character&gt; t)</span>&#123;</span><br><span class="line">        <span class="type">int</span> lChildH,rChildH;</span><br><span class="line">        <span class="keyword">if</span>(t == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            lChildH = height1(t.lChild);</span><br><span class="line">            rChildH = height1(t.rChild);</span><br><span class="line">            <span class="keyword">return</span> Math.max(lChildH,rChildH) + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        BTreeClass&lt;Character&gt; b = <span class="keyword">new</span> <span class="title class_">BTreeClass</span>&lt;Character&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;A(B(D(,G)),C(E,F))&quot;</span>;</span><br><span class="line">        b.createBTree(str);</span><br><span class="line">        System.out.println(<span class="string">&quot;二叉链b: &quot;</span> + b);  <span class="comment">// 输出: A(B(D(,G)),C(E,F))</span></span><br><span class="line">        System.out.println(b.findNode(<span class="string">&#x27;D&#x27;</span>));    <span class="comment">// 输出: Test01.BTNode@1b6d3586</span></span><br><span class="line">        System.out.println(b.height());     <span class="comment">// 输出: 4</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="二叉树的先序、中序和后序遍历"   >
          <a href="#二叉树的先序、中序和后序遍历" class="heading-link"><i class="fas fa-link"></i></a><a href="#二叉树的先序、中序和后序遍历" class="headerlink" title="二叉树的先序、中序和后序遍历"></a>二叉树的先序、中序和后序遍历</h3>
      
        <h4 id="二叉树遍历的概念"   >
          <a href="#二叉树遍历的概念" class="heading-link"><i class="fas fa-link"></i></a><a href="#二叉树遍历的概念" class="headerlink" title="二叉树遍历的概念"></a>二叉树遍历的概念</h4>
      <p>略</p>

        <h4 id="先序、中序和后序遍历递归算法"   >
          <a href="#先序、中序和后序遍历递归算法" class="heading-link"><i class="fas fa-link"></i></a><a href="#先序、中序和后序遍历递归算法" class="headerlink" title="先序、中序和后序遍历递归算法"></a>先序、中序和后序遍历递归算法</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">preOrder1</span><span class="params">(BTreeClass bt)</span>&#123;   <span class="comment">// 先序遍历的递归算法</span></span><br><span class="line">        preOrder11(bt.b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">preOrder11</span><span class="params">(BTNode&lt;Character&gt; t)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t != <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.print(t.data + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            preOrder11(t.lChild);</span><br><span class="line">            preOrder11(t.rChild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">inOrder1</span><span class="params">(BTreeClass bt)</span>&#123;    <span class="comment">// 中序遍历的递归算法</span></span><br><span class="line">        inOrder11(bt.b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">inOrder11</span><span class="params">(BTNode&lt;Character&gt; t)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t != <span class="literal">null</span>)&#123;</span><br><span class="line">            inOrder11(t.lChild);</span><br><span class="line">            System.out.print(t.data + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            inOrder11(t.rChild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postOrder1</span><span class="params">(BTreeClass bt)</span>&#123;  <span class="comment">// 后序遍历的递归算法</span></span><br><span class="line">        postOrder11(bt.b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">postOrder11</span><span class="params">(BTNode&lt;Character&gt; t)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t != <span class="literal">null</span>)&#123;</span><br><span class="line">            postOrder11(t.lChild);</span><br><span class="line">            postOrder11(t.rChild);</span><br><span class="line">            System.out.print(t.data + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        BTreeClass&lt;Character&gt; b = <span class="keyword">new</span> <span class="title class_">BTreeClass</span>&lt;Character&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;A(B(D(,G)),C(E,F))&quot;</span>;</span><br><span class="line">        b.createBTree(str);</span><br><span class="line">        System.out.println(<span class="string">&quot;二叉链b: &quot;</span> + b);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 先序遍历的递归算法</span></span><br><span class="line">        System.out.print(<span class="string">&quot;先序遍历: &quot;</span>);</span><br><span class="line">        b.preOrder1(b);</span><br><span class="line">        System.out.println();   <span class="comment">// 输出: 先序遍历: A B D G C E F</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 中序遍历的递归算法</span></span><br><span class="line">        System.out.print(<span class="string">&quot;中序遍历: &quot;</span>);</span><br><span class="line">        b.inOrder1(b);</span><br><span class="line">        System.out.println();   <span class="comment">// 输出: 中序遍历: D G B A E C F</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 后序遍历的递归算法</span></span><br><span class="line">        System.out.print(<span class="string">&quot;后序遍历: &quot;</span>);</span><br><span class="line">        b.postOrder1(b);</span><br><span class="line">        System.out.println();   <span class="comment">// 输出: 后序遍历: G D B E F C A</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="递归遍历算法的应用"   >
          <a href="#递归遍历算法的应用" class="heading-link"><i class="fas fa-link"></i></a><a href="#递归遍历算法的应用" class="headerlink" title="递归遍历算法的应用"></a>递归遍历算法的应用</h4>
      <ul>
<li>(例题)二叉链存储结构中，设计一个算法求一棵给定二叉树中结点的个数</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        BTreeClass&lt;Character&gt; b = <span class="keyword">new</span> <span class="title class_">BTreeClass</span>&lt;Character&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;A(B(D,H))&quot;</span>;</span><br><span class="line">        b.createBTree(str);</span><br><span class="line">        System.out.println(<span class="string">&quot;二叉链b: &quot;</span> + b);</span><br><span class="line">        System.out.print(<span class="string">&quot;基于先序遍历求结点个数: &quot;</span>);</span><br><span class="line">        System.out.println(nodeCount1(b));</span><br><span class="line">        System.out.print(<span class="string">&quot;基于中序遍历求结点个数: &quot;</span>);</span><br><span class="line">        System.out.println(nodeCount2(b));</span><br><span class="line">        System.out.print(<span class="string">&quot;基于后序遍历求结点个数: &quot;</span>);</span><br><span class="line">        System.out.println(nodeCount3(b));</span><br><span class="line">        System.out.print(<span class="string">&quot;递归求解: &quot;</span>);</span><br><span class="line">        System.out.println(nodeCount4(b));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二叉链中基于先序遍历求结点个数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">nodeCount1</span><span class="params">(BTreeClass bt)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nodeCount11(bt.b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">nodeCount11</span><span class="params">(BTNode&lt;Character&gt; t)</span>&#123;</span><br><span class="line">        <span class="type">int</span> m,n,k;</span><br><span class="line">        <span class="keyword">if</span>(t == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        k = <span class="number">1</span>;</span><br><span class="line">        m = nodeCount11(t.lChild);</span><br><span class="line">        n = nodeCount11(t.rChild);</span><br><span class="line">        <span class="keyword">return</span> k + m + n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二叉链中基于中序遍历求结点个数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">nodeCount2</span><span class="params">(BTreeClass bt)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nodeCount21(bt.b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">nodeCount21</span><span class="params">(BTNode&lt;Character&gt; t)</span>&#123;</span><br><span class="line">        <span class="type">int</span> m,n,k;</span><br><span class="line">        <span class="keyword">if</span>(t == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        m = nodeCount21(t.lChild);</span><br><span class="line">        k = <span class="number">1</span>;</span><br><span class="line">        n = nodeCount21(t.rChild);</span><br><span class="line">        <span class="keyword">return</span> k + m + n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二叉链中基于后序遍历求结点个数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">nodeCount3</span><span class="params">(BTreeClass bt)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nodeCount31(bt.b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">nodeCount31</span><span class="params">(BTNode&lt;Character&gt; t)</span>&#123;</span><br><span class="line">        <span class="type">int</span> m,n,k;</span><br><span class="line">        <span class="keyword">if</span>(t == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        m = nodeCount31(t.lChild);</span><br><span class="line">        n = nodeCount31(t.rChild);</span><br><span class="line">        k = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> k + m + n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 递归求解</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">nodeCount4</span><span class="params">(BTreeClass bt)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nodeCount41(bt.b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">nodeCount41</span><span class="params">(BTNode&lt;Character&gt; t)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span>(nodeCount41(t.lChild) + nodeCount41(t.rChild) + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)二叉链存储结构中，设计一个算法按从左到右的顺序输出一棵二叉树中的所有叶子结点</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        BTreeClass&lt;Character&gt; b = <span class="keyword">new</span> <span class="title class_">BTreeClass</span>&lt;Character&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;A(B(D,H))&quot;</span>;</span><br><span class="line">        b.createBTree(str);</span><br><span class="line">        System.out.println(<span class="string">&quot;二叉链b: &quot;</span> + b);</span><br><span class="line">        System.out.print(<span class="string">&quot;基于先序遍历输出叶子结点: &quot;</span>);</span><br><span class="line">        disPLeaf1(b);</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.print(<span class="string">&quot;基于中序遍历输出叶子结点: &quot;</span>);</span><br><span class="line">        disPLeaf2(b);</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.print(<span class="string">&quot;基于后序遍历输出叶子结点: &quot;</span>);</span><br><span class="line">        disPLeaf3(b);</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.print(<span class="string">&quot;递归求解: &quot;</span>);</span><br><span class="line">        disPLeaf4(b);</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 基于先序遍历输出叶子结点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">disPLeaf1</span><span class="params">(BTreeClass bt)</span>&#123;</span><br><span class="line">        disPLeaf11(bt.b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">disPLeaf11</span><span class="params">(BTNode&lt;Character&gt; t)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(t.lChild == <span class="literal">null</span> &amp;&amp; t.rChild == <span class="literal">null</span>)</span><br><span class="line">                System.out.print(t.data + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            disPLeaf11(t.lChild);</span><br><span class="line">            disPLeaf11(t.rChild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 基于中序遍历输出叶子结点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">disPLeaf2</span><span class="params">(BTreeClass bt)</span>&#123;</span><br><span class="line">        disPLeaf21(bt.b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">disPLeaf21</span><span class="params">(BTNode&lt;Character&gt; t)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t != <span class="literal">null</span>)&#123;</span><br><span class="line">            disPLeaf21(t.lChild);</span><br><span class="line">            <span class="keyword">if</span>(t.lChild == <span class="literal">null</span> &amp;&amp; t.rChild == <span class="literal">null</span>)</span><br><span class="line">                System.out.print(t.data + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            disPLeaf21(t.rChild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 基于后序遍历输出叶子结点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">disPLeaf3</span><span class="params">(BTreeClass bt)</span>&#123;</span><br><span class="line">        disPLeaf31(bt.b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">disPLeaf31</span><span class="params">(BTNode&lt;Character&gt; t)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t != <span class="literal">null</span>)&#123;</span><br><span class="line">            disPLeaf31(t.lChild);</span><br><span class="line">            disPLeaf31(t.rChild);</span><br><span class="line">            <span class="keyword">if</span>(t.lChild == <span class="literal">null</span> &amp;&amp; t.rChild == <span class="literal">null</span>)</span><br><span class="line">                System.out.print(t.data + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 递归求解</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">disPLeaf4</span><span class="params">(BTreeClass bt)</span>&#123;</span><br><span class="line">        disPLeaf41(bt.b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">disPLeaf41</span><span class="params">(BTNode&lt;Character&gt; t)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(t.lChild == <span class="literal">null</span> &amp;&amp; t.rChild == <span class="literal">null</span>)</span><br><span class="line">                System.out.print(t.data + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                disPLeaf41(t.lChild);</span><br><span class="line">                disPLeaf41(t.rChild);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)二叉链存储结构中，设计一个算法将二叉树bt1复制到二叉树bt2</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        BTreeClass&lt;Character&gt; b = <span class="keyword">new</span> <span class="title class_">BTreeClass</span>&lt;Character&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;A(B(D,H))&quot;</span>;</span><br><span class="line">        b.createBTree(str);</span><br><span class="line">        System.out.println(<span class="string">&quot;二叉链b: &quot;</span> + b);</span><br><span class="line">        System.out.print(<span class="string">&quot;基于先序遍历复制二叉树: &quot;</span>);</span><br><span class="line">        System.out.println(copyBTree1(b));</span><br><span class="line">        System.out.print(<span class="string">&quot;基于后序遍历复制二叉树: &quot;</span>);</span><br><span class="line">        System.out.println(copyBTree2(b));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 基于先序遍历复制二叉树</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BTreeClass <span class="title function_">copyBTree1</span><span class="params">(BTreeClass bt1)</span>&#123;</span><br><span class="line">        <span class="type">BTreeClass</span> <span class="variable">bt2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BTreeClass</span>();</span><br><span class="line">        bt2.b = copyBTree11(bt1.b);</span><br><span class="line">        <span class="keyword">return</span> bt2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> BTNode&lt;Character&gt; <span class="title function_">copyBTree11</span><span class="params">(BTNode&lt;Character&gt; t1)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t1 != <span class="literal">null</span>)&#123;</span><br><span class="line">            BTNode&lt;Character&gt; t2 = <span class="keyword">new</span> <span class="title class_">BTNode</span>&lt;Character&gt;(t1.data);</span><br><span class="line">            t2.lChild = copyBTree11(t1.lChild);</span><br><span class="line">            t2.rChild = copyBTree11(t1.rChild);</span><br><span class="line">            <span class="keyword">return</span> t2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 基于后序遍历复制二叉树</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BTreeClass <span class="title function_">copyBTree2</span><span class="params">(BTreeClass bt1)</span>&#123;</span><br><span class="line">        <span class="type">BTreeClass</span> <span class="variable">bt2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BTreeClass</span>();</span><br><span class="line">        bt2.b = copyBTree21(bt1.b);</span><br><span class="line">        <span class="keyword">return</span> bt2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> BTNode&lt;Character&gt; <span class="title function_">copyBTree21</span><span class="params">(BTNode&lt;Character&gt; t1)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t1 != <span class="literal">null</span>)&#123;</span><br><span class="line">            BTNode&lt;Character&gt; l;</span><br><span class="line">            BTNode&lt;Character&gt; r;</span><br><span class="line">            l = copyBTree21(t1.lChild);</span><br><span class="line">            r = copyBTree21(t1.rChild);</span><br><span class="line">            BTNode&lt;Character&gt; t2= <span class="keyword">new</span> <span class="title class_">BTNode</span>&lt;Character&gt;(t1.data);</span><br><span class="line">            t2.lChild = l;</span><br><span class="line">            t2.rChild = r;</span><br><span class="line">            <span class="keyword">return</span> t2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)二叉链存储结构中，所有的值都不相同，设计一个算法求二叉树中指定结点值的结点所在的层次(根结点的层次记为1)</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        BTreeClass&lt;Character&gt; b = <span class="keyword">new</span> <span class="title class_">BTreeClass</span>&lt;Character&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;A(B(D,H))&quot;</span>;</span><br><span class="line">        b.createBTree(str);</span><br><span class="line">        System.out.println(<span class="string">&quot;二叉链b: &quot;</span> + b);   <span class="comment">// 输出: 二叉链b: A(B(D,H))</span></span><br><span class="line">        System.out.println(level1(b, <span class="string">&#x27;B&#x27;</span>)); <span class="comment">// 输出: 2</span></span><br><span class="line">        System.out.println(level2(b,<span class="string">&#x27;B&#x27;</span>)); <span class="comment">// 输出: 2</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// (解法1)求二叉树中指定结点值的结点所在的层次</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">level1</span><span class="params">(BTreeClass bt,<span class="type">char</span> x)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> level11(bt.b,x,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">level11</span><span class="params">(BTNode&lt;Character&gt; t,<span class="type">char</span> x,<span class="type">int</span> h)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(t.data == x)</span><br><span class="line">            <span class="keyword">return</span> h;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> level11(t.lChild,x,h + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(l != <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> l;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span>(level11(t.rChild,x,h + <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// (解法2)求二叉树中指定结点值的结点所在的层次</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">level2</span><span class="params">(BTreeClass bt,<span class="type">char</span> x)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> level21(bt.b,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">level21</span><span class="params">(BTNode&lt;Character&gt; t,<span class="type">char</span> x)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(t.data == x)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left1</span> <span class="operator">=</span> (t.lChild == <span class="literal">null</span> ? <span class="number">0</span> : level21(t.lChild,x));</span><br><span class="line">        <span class="type">int</span> <span class="variable">right1</span> <span class="operator">=</span> (t.rChild == <span class="literal">null</span> ? <span class="number">0</span> : level21(t.rChild,x));</span><br><span class="line">        <span class="keyword">if</span>(left1 &lt; <span class="number">1</span> &amp;&amp; right1 &lt; <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> Math.max(left1,right1) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)假设一棵二叉树采用顺序存储结构，设计一个算法建立对应的二叉链存储结构</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="string">&quot;#ABCDE#F##GH##I######&quot;</span>;</span><br><span class="line">        System.out.print(<span class="string">&quot;二叉链: &quot;</span>);</span><br><span class="line">        System.out.println(trans(sb));  <span class="comment">// 输出: A(B(D,E(G,H)),C(,F(I)))</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BTreeClass <span class="title function_">trans</span><span class="params">(String sb)</span>&#123;</span><br><span class="line">        <span class="type">BTreeClass</span> <span class="variable">bt</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BTreeClass</span>();</span><br><span class="line">        bt.b = trans1(sb,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> bt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> BTNode&lt;Character&gt; <span class="title function_">trans1</span><span class="params">(String sb,<span class="type">int</span> i)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; sb.length())&#123;</span><br><span class="line">            <span class="keyword">if</span>(sb.charAt(i) != <span class="string">&#x27;#&#x27;</span>)&#123;</span><br><span class="line">                BTNode&lt;Character&gt; t = <span class="keyword">new</span> <span class="title class_">BTNode</span>&lt;Character&gt;(sb.charAt(i));</span><br><span class="line">                t.lChild = trans1(sb,<span class="number">2</span> * i);</span><br><span class="line">                t.rChild = trans1(sb,<span class="number">2</span> * i + <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">return</span> t;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)假设二叉树采用二叉链存储结构，且所有结点值均不相同，设计一个算法输出值为x的结点的所有祖先</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 解法1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeTest</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> String ans;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">ancestor1</span><span class="params">(BTreeClass bt, <span class="type">char</span> x)</span>&#123;</span><br><span class="line">        ans = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        ancestor11(bt.b, x);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">ancestor11</span><span class="params">(BTNode&lt;Character&gt; t, Character x)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(t.lChild != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(t.lChild.data == x)&#123;</span><br><span class="line">                ans += t.data + <span class="string">&quot; &quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(t.rChild != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(t.rChild.data == x)&#123;</span><br><span class="line">                ans += t.data + <span class="string">&quot; &quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ancestor11(t.lChild, x) || ancestor11(t.rChild, x))&#123;</span><br><span class="line">            ans += t.data + <span class="string">&quot; &quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        BTreeClass&lt;Character&gt; b = <span class="keyword">new</span> <span class="title class_">BTreeClass</span>&lt;Character&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;A(B(D(,G)),C(E,F))&quot;</span>;</span><br><span class="line">        b.createBTree(str);</span><br><span class="line">        System.out.println(<span class="string">&quot;二叉链b: &quot;</span> + b);   <span class="comment">// 输出: 二叉链b: A(B(D(,G)),C(E,F))</span></span><br><span class="line">        System.out.print(<span class="string">&quot;所有的祖先结点: &quot;</span>);</span><br><span class="line">        System.out.println(ancestor1(b, <span class="string">&#x27;G&#x27;</span>));  <span class="comment">// 输出: 所有的祖先结点: D B A </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 解法2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeTest</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> String ans;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">ancestor2</span><span class="params">(BTreeClass bt, <span class="type">char</span> x)</span>&#123;</span><br><span class="line">        ArrayList&lt;Character&gt; path = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Character&gt;();</span><br><span class="line">        ans = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        ancestor21(bt.b,x,path);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">ancestor21</span><span class="params">(BTNode&lt;Character&gt; t, Character x, ArrayList&lt;Character&gt; path)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        path.add(t.data);</span><br><span class="line">        <span class="keyword">if</span>(t.data == x)&#123;</span><br><span class="line">            path.remove(path.size() - <span class="number">1</span>);</span><br><span class="line">            ans = path.toString();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ancestor21(t.lChild, x, path);</span><br><span class="line">        ancestor21(t.rChild, x, path);</span><br><span class="line">        path.remove(path.size() - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        BTreeClass&lt;Character&gt; b = <span class="keyword">new</span> <span class="title class_">BTreeClass</span>&lt;Character&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;A(B(D(,G)),C(E,F))&quot;</span>;</span><br><span class="line">        b.createBTree(str);</span><br><span class="line">        System.out.println(<span class="string">&quot;二叉链b: &quot;</span> + b);   <span class="comment">// 输出: 二叉链b: A(B(D(,G)),C(E,F))</span></span><br><span class="line">        System.out.print(<span class="string">&quot;所有的祖先结点: &quot;</span>);</span><br><span class="line">        System.out.println(ancestor2(b,<span class="string">&#x27;G&#x27;</span>));   <span class="comment">// 输出: 所有的祖先结点: [A, B, D]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)假设二叉树采用二叉链存储结构，且所有结点值均不相同，设计一个算法求二叉树的宽度(二叉树中结点个数最多的那一层的结点个数)</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeTest</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">MaxLevel</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span>[] w = <span class="keyword">new</span> <span class="title class_">int</span>[MaxLevel];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">width</span><span class="params">(BTreeClass bt)</span>&#123;</span><br><span class="line">        width1(bt.b,<span class="number">1</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">ans</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; MaxLevel; i++)</span><br><span class="line">            <span class="keyword">if</span>(ans &lt; w[i])</span><br><span class="line">                ans = w[i];</span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">width1</span><span class="params">(BTNode&lt;Character&gt; t,<span class="type">int</span> h)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        w[h]++;</span><br><span class="line">        width1(t.lChild,h + <span class="number">1</span>);</span><br><span class="line">        width1(t.rChild,h + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        BTreeClass&lt;Character&gt; b = <span class="keyword">new</span> <span class="title class_">BTreeClass</span>&lt;Character&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;A(B(D,H))&quot;</span>;</span><br><span class="line">        b.createBTree(str);</span><br><span class="line">        System.out.println(<span class="string">&quot;二叉链b: &quot;</span> + b);   <span class="comment">// 输出: 二叉链b: A(B(D,H))</span></span><br><span class="line">        System.out.println(width(b));   <span class="comment">// 输出: 2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)假设二叉树采用二叉链存储结构，且所有结点值均不相同，设计一个算法求二叉树中第k(1&lt;= k &lt;= 二叉树的高度)层的结点个数</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*输出:</span></span><br><span class="line"><span class="comment">bt: A(B(D(,G)),C(E,F))</span></span><br><span class="line"><span class="comment">第0层结点个数: 0</span></span><br><span class="line"><span class="comment">第1层结点个数: 1</span></span><br><span class="line"><span class="comment">第2层结点个数: 2</span></span><br><span class="line"><span class="comment">第3层结点个数: 3</span></span><br><span class="line"><span class="comment">第4层结点个数: 1</span></span><br><span class="line"><span class="comment">第5层结点个数: 0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeTest</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> cnt;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">kCount1</span><span class="params">(BTreeClass bt,<span class="type">int</span> k)</span>&#123;</span><br><span class="line">        cnt = <span class="number">0</span>;</span><br><span class="line">        kCount11(bt.b,<span class="number">1</span>,k);</span><br><span class="line">        <span class="keyword">return</span> cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">kCount11</span><span class="params">(BTNode&lt;Character&gt; t,<span class="type">int</span> h,<span class="type">int</span> k)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span>(h == k)</span><br><span class="line">            cnt++;</span><br><span class="line">        <span class="keyword">if</span>(h &lt; k)&#123;</span><br><span class="line">            kCount11(t.lChild,h + <span class="number">1</span>,k);</span><br><span class="line">            kCount11(t.rChild,h + <span class="number">1</span>,k);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;A(B(D(,G)),C(E,F))&quot;</span>;</span><br><span class="line">        <span class="type">BTreeClass</span> <span class="variable">bt</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BTreeClass</span>();</span><br><span class="line">        bt.createBTree(s);</span><br><span class="line">        System.out.println(<span class="string">&quot;bt: &quot;</span> + bt.toString());</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">5</span>; i++)</span><br><span class="line">            System.out.printf(<span class="string">&quot;第%d层结点个数: %d\n&quot;</span>, i, kCount1(bt, i));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="先序、中序和后序遍历非递归算法"   >
          <a href="#先序、中序和后序遍历非递归算法" class="heading-link"><i class="fas fa-link"></i></a><a href="#先序、中序和后序遍历非递归算法" class="headerlink" title="先序、中序和后序遍历非递归算法"></a>先序、中序和后序遍历非递归算法</h4>
      
        <h5 id="先序遍历的非递归算法"   >
          <a href="#先序遍历的非递归算法" class="heading-link"><i class="fas fa-link"></i></a><a href="#先序遍历的非递归算法" class="headerlink" title="先序遍历的非递归算法"></a>先序遍历的非递归算法</h5>
      <ul>
<li>先序遍历的非递归算法1</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 先序遍历的非递归算法1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        BTreeClass&lt;Character&gt; b = <span class="keyword">new</span> <span class="title class_">BTreeClass</span>&lt;Character&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;A(B(D(,G)),C(E,F))&quot;</span>;</span><br><span class="line">        b.createBTree(str);</span><br><span class="line">        System.out.println(<span class="string">&quot;二叉链b: &quot;</span> + b);   <span class="comment">// 输出: 二叉链b: A(B(D(,G)),C(E,F))</span></span><br><span class="line">        System.out.print(<span class="string">&quot;先序遍历的非递归算法1: &quot;</span>);</span><br><span class="line">        preOrder2(b);   <span class="comment">// 输出: 先序遍历的非递归算法1: A B D G C E F </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">preOrder2</span><span class="params">(BTreeClass bt)</span>&#123;</span><br><span class="line">        preOrder21(bt.b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">preOrder21</span><span class="params">(BTNode&lt;Character&gt; t)</span>&#123;</span><br><span class="line">        Stack&lt;BTNode&gt; st = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;BTNode&gt;();</span><br><span class="line">        BTNode&lt;Character&gt; p;</span><br><span class="line">        st.push(t);</span><br><span class="line">        <span class="keyword">while</span>(!st.empty())&#123;</span><br><span class="line">            p = st.pop();</span><br><span class="line">            System.out.print(p.data + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(p.rChild != <span class="literal">null</span>)</span><br><span class="line">                st.push(p.rChild);</span><br><span class="line">            <span class="keyword">if</span>(p.lChild != <span class="literal">null</span>)</span><br><span class="line">                st.push(p.lChild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>先序遍历的非递归算法2</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 先序遍历的非递归算法2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        BTreeClass&lt;Character&gt; b = <span class="keyword">new</span> <span class="title class_">BTreeClass</span>&lt;Character&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;A(B(D(,G)),C(E,F))&quot;</span>;</span><br><span class="line">        b.createBTree(str);</span><br><span class="line">        System.out.println(<span class="string">&quot;二叉链b: &quot;</span> + b);   <span class="comment">// 输出: 二叉链b: A(B(D(,G)),C(E,F))</span></span><br><span class="line">        System.out.print(<span class="string">&quot;先序遍历的非递归算法2: &quot;</span>);</span><br><span class="line">        preOrder3(b);   <span class="comment">// 输出: 先序遍历的非递归算法2: A B D G C E F </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">preOrder3</span><span class="params">(BTreeClass bt)</span>&#123;</span><br><span class="line">        preOrder31(bt.b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">preOrder31</span><span class="params">(BTNode&lt;Character&gt; t)</span>&#123;</span><br><span class="line">        Stack&lt;BTNode&gt; st = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;BTNode&gt;();</span><br><span class="line">        BTNode&lt;Character&gt; p = t;</span><br><span class="line">        <span class="keyword">while</span>(!st.empty() || p != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span>(p != <span class="literal">null</span>)&#123;</span><br><span class="line">                System.out.print(p.data + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                st.push(p);</span><br><span class="line">                p = p.lChild;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!st.empty())&#123;</span><br><span class="line">                p = st.pop();</span><br><span class="line">                p = p.rChild;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h5 id="中序遍历的非递归算法"   >
          <a href="#中序遍历的非递归算法" class="heading-link"><i class="fas fa-link"></i></a><a href="#中序遍历的非递归算法" class="headerlink" title="中序遍历的非递归算法"></a>中序遍历的非递归算法</h5>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 中序遍历的非递归算法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        BTreeClass&lt;Character&gt; b = <span class="keyword">new</span> <span class="title class_">BTreeClass</span>&lt;Character&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;A(B(D(,G)),C(E,F))&quot;</span>;</span><br><span class="line">        b.createBTree(str);</span><br><span class="line">        System.out.println(<span class="string">&quot;二叉链b: &quot;</span> + b);   <span class="comment">// 输出: 二叉链b: A(B(D(,G)),C(E,F))</span></span><br><span class="line">        System.out.print(<span class="string">&quot;中序遍历的非递归算法: &quot;</span>);</span><br><span class="line">        inOrder2(b);    <span class="comment">// 输出: 中序遍历的非递归算法: D G B A E C F </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">inOrder2</span><span class="params">(BTreeClass bt)</span>&#123;</span><br><span class="line">        inOrder21(bt.b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">inOrder21</span><span class="params">(BTNode&lt;Character&gt; t)</span>&#123;</span><br><span class="line">        Stack&lt;BTNode&gt; st = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;BTNode&gt;();</span><br><span class="line">        BTNode&lt;Character&gt; p = t;</span><br><span class="line">        <span class="keyword">while</span>(!st.empty() || p != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span>(p != <span class="literal">null</span>)&#123;</span><br><span class="line">                st.push(p);</span><br><span class="line">                p = p.lChild;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!st.empty())&#123;</span><br><span class="line">                p = st.pop();</span><br><span class="line">                System.out.print(p.data + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                p = p.rChild;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h5 id="后序遍历的非递归算法"   >
          <a href="#后序遍历的非递归算法" class="heading-link"><i class="fas fa-link"></i></a><a href="#后序遍历的非递归算法" class="headerlink" title="后序遍历的非递归算法"></a>后序遍历的非递归算法</h5>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 后序遍历的非递归算法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        BTreeClass&lt;Character&gt; b = <span class="keyword">new</span> <span class="title class_">BTreeClass</span>&lt;Character&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;A(B(D(,G)),C(E,F))&quot;</span>;</span><br><span class="line">        b.createBTree(str);</span><br><span class="line">        System.out.println(<span class="string">&quot;二叉链b: &quot;</span> + b);   <span class="comment">// 输出: 二叉链b: A(B(D(,G)),C(E,F))</span></span><br><span class="line">        System.out.print(<span class="string">&quot;后序遍历的非递归算法: &quot;</span>);</span><br><span class="line">        postOrder2(b);    <span class="comment">// 输出: 后序遍历的非递归算法: G D B E F C A </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">postOrder2</span><span class="params">(BTreeClass bt)</span>&#123;</span><br><span class="line">        postOrder21(bt.b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">postOrder21</span><span class="params">(BTNode&lt;Character&gt; t)</span>&#123;</span><br><span class="line">        Stack&lt;BTNode&gt; st = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;BTNode&gt;();</span><br><span class="line">        BTNode&lt;Character&gt; p = t, q;</span><br><span class="line">        <span class="type">boolean</span> flag;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            <span class="keyword">while</span>(p != <span class="literal">null</span>)&#123;</span><br><span class="line">                st.push(p);</span><br><span class="line">                p = p.lChild;</span><br><span class="line">            &#125;</span><br><span class="line">            q = <span class="literal">null</span>;</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">while</span>(!st.empty() &amp;&amp; flag)&#123;</span><br><span class="line">                p = st.peek();</span><br><span class="line">                <span class="keyword">if</span>(p.rChild == q)&#123;</span><br><span class="line">                    System.out.print(p.data + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                    st.pop();</span><br><span class="line">                    q = p;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    p = p.rChild;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">while</span>(!st.empty());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)采用后序遍历非递归算法，输出值为x的结点的所有祖先</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        BTreeClass&lt;Character&gt; b = <span class="keyword">new</span> <span class="title class_">BTreeClass</span>&lt;Character&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;A(B(D(,G)),C(E,F))&quot;</span>;</span><br><span class="line">        b.createBTree(str);</span><br><span class="line">        System.out.println(<span class="string">&quot;二叉链b: &quot;</span> + b);   <span class="comment">// 输出: 二叉链b: A(B(D(,G)),C(E,F))</span></span><br><span class="line">        System.out.print(<span class="string">&quot;后序遍历的非递归算法求所有祖先结点: &quot;</span>);</span><br><span class="line">        System.out.println(ancestor4(b, <span class="string">&#x27;F&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> String ans;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">ancestor4</span><span class="params">(BTreeClass bt, <span class="type">char</span> x)</span>&#123;</span><br><span class="line">        ans = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        ancestor41(bt.b, x);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">ancestor41</span><span class="params">(BTNode&lt;Character&gt; t, Character x)</span>&#123;</span><br><span class="line">        Stack&lt;BTNode&gt; st = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;BTNode&gt;();</span><br><span class="line">        BTNode&lt;Character&gt; p = t, q;</span><br><span class="line">        <span class="type">boolean</span> flag;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            <span class="keyword">while</span>(p != <span class="literal">null</span>)&#123;</span><br><span class="line">                st.push(p);</span><br><span class="line">                p = p.lChild;</span><br><span class="line">            &#125;</span><br><span class="line">            q = <span class="literal">null</span>;</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">while</span>(!st.empty() &amp;&amp; flag)&#123;</span><br><span class="line">                p = st.peek();</span><br><span class="line">                <span class="keyword">if</span>(p.rChild == q)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(p.data == x)&#123;</span><br><span class="line">                        st.pop();</span><br><span class="line">                        <span class="keyword">while</span>(!st.empty())</span><br><span class="line">                            ans += String.valueOf(st.pop().data) + <span class="string">&quot; &quot;</span>;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        st.pop();</span><br><span class="line">                        q = p;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    p = p.rChild;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">while</span>(!st.empty());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="二叉树的层次遍历"   >
          <a href="#二叉树的层次遍历" class="heading-link"><i class="fas fa-link"></i></a><a href="#二叉树的层次遍历" class="headerlink" title="二叉树的层次遍历"></a>二叉树的层次遍历</h3>
      
        <h4 id="层次遍历过程"   >
          <a href="#层次遍历过程" class="heading-link"><i class="fas fa-link"></i></a><a href="#层次遍历过程" class="headerlink" title="层次遍历过程"></a>层次遍历过程</h4>
      <p>略</p>

        <h4 id="层次遍历算法设计"   >
          <a href="#层次遍历算法设计" class="heading-link"><i class="fas fa-link"></i></a><a href="#层次遍历算法设计" class="headerlink" title="层次遍历算法设计"></a>层次遍历算法设计</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BTreeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        BTreeClass&lt;Character&gt; b = <span class="keyword">new</span> <span class="title class_">BTreeClass</span>&lt;Character&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;A(B(D(,G)),C(E,F))&quot;</span>;</span><br><span class="line">        b.createBTree(str);</span><br><span class="line">        System.out.println(<span class="string">&quot;二叉链b: &quot;</span> + b);   <span class="comment">// 输出: 二叉链b: A(B(D(,G)),C(E,F))</span></span><br><span class="line">        System.out.print(<span class="string">&quot;层次遍历的算法: &quot;</span>);</span><br><span class="line">        levelOrder(b);  <span class="comment">// 输出: 层次遍历的算法: A B C D E F G </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">levelOrder</span><span class="params">(BTreeClass bt)</span>&#123;</span><br><span class="line">        BTNode&lt;Character&gt; p;</span><br><span class="line">        Queue&lt;BTNode&gt; qu = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;BTNode&gt;();</span><br><span class="line">        qu.offer(bt.b);</span><br><span class="line">        <span class="keyword">while</span>(!qu.isEmpty())&#123;</span><br><span class="line">            p = qu.poll();</span><br><span class="line">            System.out.print(p.data + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(p.lChild != <span class="literal">null</span>)</span><br><span class="line">                qu.offer(p.lChild);</span><br><span class="line">            <span class="keyword">if</span>(p.rChild != <span class="literal">null</span>)</span><br><span class="line">                qu.offer(p.rChild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="层次遍历算法的应用"   >
          <a href="#层次遍历算法的应用" class="heading-link"><i class="fas fa-link"></i></a><a href="#层次遍历算法的应用" class="headerlink" title="层次遍历算法的应用"></a>层次遍历算法的应用</h4>
      <ul>
<li>(例题)采用层次遍历算法，求二叉树中第k(1&lt;= k &lt;= 二叉树的高度)层的结点个数</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)采用层次遍历算法，输出值为x的结点的所有祖先</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></div></figure>


        <h3 id="二叉树的构造"   >
          <a href="#二叉树的构造" class="heading-link"><i class="fas fa-link"></i></a><a href="#二叉树的构造" class="headerlink" title="二叉树的构造"></a>二叉树的构造</h3>
      
        <h3 id="线索二叉树"   >
          <a href="#线索二叉树" class="heading-link"><i class="fas fa-link"></i></a><a href="#线索二叉树" class="headerlink" title="线索二叉树"></a>线索二叉树</h3>
      
        <h3 id="哈夫曼树"   >
          <a href="#哈夫曼树" class="heading-link"><i class="fas fa-link"></i></a><a href="#哈夫曼树" class="headerlink" title="哈夫曼树"></a>哈夫曼树</h3>
      
        <h3 id="二叉树与树、森林之间的转换"   >
          <a href="#二叉树与树、森林之间的转换" class="heading-link"><i class="fas fa-link"></i></a><a href="#二叉树与树、森林之间的转换" class="headerlink" title="二叉树与树、森林之间的转换"></a>二叉树与树、森林之间的转换</h3>
      
        <h3 id="树算法设计和并查集"   >
          <a href="#树算法设计和并查集" class="heading-link"><i class="fas fa-link"></i></a><a href="#树算法设计和并查集" class="headerlink" title="树算法设计和并查集"></a>树算法设计和并查集</h3>
      
        <h2 id="第八章-图"   >
          <a href="#第八章-图" class="heading-link"><i class="fas fa-link"></i></a><a href="#第八章-图" class="headerlink" title="第八章 图"></a>第八章 图</h2>
      
        <h2 id="第九章-查找"   >
          <a href="#第九章-查找" class="heading-link"><i class="fas fa-link"></i></a><a href="#第九章-查找" class="headerlink" title="第九章 查找"></a>第九章 查找</h2>
      
        <h2 id="第十章-排序"   >
          <a href="#第十章-排序" class="heading-link"><i class="fas fa-link"></i></a><a href="#第十章-排序" class="headerlink" title="第十章 排序"></a>第十章 排序</h2>
      ]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>离散数学笔记</title>
    <url>/2024/10/16/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[
        <h2 id="第1章-命题逻辑"   >
          <a href="#第1章-命题逻辑" class="heading-link"><i class="fas fa-link"></i></a><a href="#第1章-命题逻辑" class="headerlink" title="第1章 命题逻辑"></a>第1章 命题逻辑</h2>
      <ul>
<li>命题 Proposition</li>
<li>逻辑推论 Logical Deduction</li>
<li>公理 Axiom</li>
<li>证明 Proof</li>
</ul>

        <h3 id="命题与联结词"   >
          <a href="#命题与联结词" class="heading-link"><i class="fas fa-link"></i></a><a href="#命题与联结词" class="headerlink" title="命题与联结词"></a>命题与联结词</h3>
      <p>1、命题的概念</p>
<ul>
<li><p><strong>命题</strong>是判断真假的<strong>陈述句</strong></p>
</li>
<li><p>命题符号化：</p>
<ul>
<li>将<strong>自然语言</strong>转化为<strong>命题公式</strong></li>
</ul>
</li>
</ul>
<p>Ex:</p>
<ul>
<li>True: 2 + 3 = 5;</li>
<li>False: 2 - 3 = 5;</li>
</ul>
<p>2、命题分类</p>
<p>(1) 原子命题</p>
<ul>
<li><p>命题标识符：表示原子命题的符号</p>
<ul>
<li>命题常元</li>
<li>命题变元</li>
</ul>
</li>
</ul>
<p>(2) 复合命题</p>
<ul>
<li><p>经<strong>联结词</strong>联结而成</p>
</li>
<li><p>由两个或两个以上原子命题组成的命题</p>
</li>
<li><p>Ex：如果温度在0℃以下，则水会结冰</p>
</li>
</ul>
<p>3、命题联结词</p>
<p>(1) 否定联结词</p>
<ul>
<li>逻辑非</li>
</ul>
<p>(2) 合取联结词</p>
<ul>
<li>逻辑与</li>
<li>“同时取真”关系</li>
</ul>
<p>(3) 析取联结词</p>
<ul>
<li>逻辑或</li>
<li>“选择取真”关系<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">* 相容选择：可兼或(同或)</span><br><span class="line">* 不相容选择: 不可兼或(异或)</span><br></pre></td></tr></table></div></figure></li>
<li><strong>析取词用于“可兼或”</strong></li>
</ul>
<p>(4) 蕴涵联结词</p>
<ul>
<li><p><strong>“除非前真后假”关系：</strong></p>
<ul>
<li>善意推定：只有p为1，且q为0时，p➡q的真值才为0</li>
</ul>
</li>
<li><p>充分条件型蕴涵:</p>
<ul>
<li>如果……则；</li>
<li>只要……就；</li>
<li>一旦……就；</li>
<li>有  ……就；</li>
</ul>
</li>
<li><p>必要条件型蕴涵：**(前件在后，后件在前)**</p>
<ul>
<li>只有……才；</li>
<li>除非……才;</li>
<li>除非……否则;</li>
</ul>
</li>
</ul>
<p>“除非否则”型Ex：</p>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">(1) 除非q，否则非p;</span><br><span class="line">(2) 除非q，否则p;</span><br></pre></td></tr></table></div></figure>

<p>Ex: </p>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">p➡q; </span><br><span class="line">读作：如果p，则q</span><br><span class="line">其中，p为p➡q的前件，q为p➡q的后件</span><br><span class="line"></span><br><span class="line">&lt;真值表&gt;:</span><br><span class="line">p | q | p➡q</span><br><span class="line">——————————————</span><br><span class="line">0 | 0 | 1</span><br><span class="line">0 | 1 | 1</span><br><span class="line">1 | 0 | 0 (*)</span><br><span class="line">1 | 1 | 1</span><br><span class="line"></span><br><span class="line">(*)特例：p为1，q为0，p➡q的真值为0</span><br></pre></td></tr></table></div></figure>


<p>(5) 同真假联结词(等价联结词)</p>
<ul>
<li>当且仅当</li>
<li>充分必要条件</li>
<li>“同真同假”关系</li>
</ul>
<p>Ex:</p>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">p&lt;-&gt;q;</span><br><span class="line">读作：p与q同真假</span><br><span class="line"></span><br><span class="line">&lt;真值表&gt;:</span><br><span class="line">p | q | p&lt;-&gt;q</span><br><span class="line">——————————————</span><br><span class="line">0 | 0 | 1</span><br><span class="line">0 | 1 | 0</span><br><span class="line">1 | 0 | 0</span><br><span class="line">1 | 1 | 1</span><br><span class="line"></span><br><span class="line">(记作：相同为1，不同为0)</span><br></pre></td></tr></table></div></figure>


        <h3 id="命题公式及其赋值"   >
          <a href="#命题公式及其赋值" class="heading-link"><i class="fas fa-link"></i></a><a href="#命题公式及其赋值" class="headerlink" title="命题公式及其赋值"></a>命题公式及其赋值</h3>
      <p>1、命题公式</p>
<ul>
<li>命题公式</li>
<li>合式公式 Well Formed Formulas</li>
</ul>
<p>(1) 优先级：</p>
<p>否定&gt;合取=析取&gt;蕴涵=同真假</p>
<p>(2) 子公式</p>
<p>(3) 层数</p>
<ul>
<li><strong>0层公式</strong>：<ul>
<li>不带联结词的命题公式</li>
</ul>
</li>
</ul>
<p>(4) 公式的赋值</p>
<ol start="2">
<li><p>公式的解释与真值表</p>
</li>
<li><p>命题公式的分类</p>
</li>
</ol>
<p>(1)重言式(永真式) Tautology</p>
<ul>
<li>A的每一组赋值都使A的真值为1</li>
</ul>
<p>(2)矛盾式(永假式)</p>
<ul>
<li>A的每一组赋值都使A的真值为0</li>
</ul>
<p>(3)可满足式</p>
<ul>
<li>至少存在一组赋值使A的真值为1</li>
</ul>
<p>(4) 命题公式的类型判断</p>
<ul>
<li>真值表最后1列全为1，则对应的命题公式为重言式</li>
<li>真值表最后1列全为0，则对应的命题公式为矛盾式</li>
<li>真值表最后1列有1有0，则对应的命题公式为可满足式</li>
</ul>

        <h3 id="等值演算"   >
          <a href="#等值演算" class="heading-link"><i class="fas fa-link"></i></a><a href="#等值演算" class="headerlink" title="等值演算"></a>等值演算</h3>
      <ol>
<li><p>常用等值式</p>
</li>
<li><p>等值演算的应用</p>
</li>
</ol>

        <h3 id="范式"   >
          <a href="#范式" class="heading-link"><i class="fas fa-link"></i></a><a href="#范式" class="headerlink" title="范式"></a>范式</h3>
      <p>1、范式的基本概念</p>
<p>(1) 文字</p>
<p>(2) 简单析取式(子句)</p>
<p>(3) 简单合取式(短语)</p>
<p>(4) 互补对</p>
<p>(5) 析取范式 Disjunctive normal form</p>
<p>(6) 合取范式 Conjunctive normal form</p>
<p>2、主析取范式</p>
<p>3、主合取范式</p>
<p>4、主析取范式与主合取范式的意义</p>
<p>5、范式存在定理</p>

        <h3 id="命题逻辑推理"   >
          <a href="#命题逻辑推理" class="heading-link"><i class="fas fa-link"></i></a><a href="#命题逻辑推理" class="headerlink" title="命题逻辑推理"></a>命题逻辑推理</h3>
      
        <h2 id="第2章-谓词逻辑"   >
          <a href="#第2章-谓词逻辑" class="heading-link"><i class="fas fa-link"></i></a><a href="#第2章-谓词逻辑" class="headerlink" title="第2章 谓词逻辑"></a>第2章 谓词逻辑</h2>
      <ul>
<li>谓词 Predicate</li>
</ul>

        <h3 id="谓词逻辑概述"   >
          <a href="#谓词逻辑概述" class="heading-link"><i class="fas fa-link"></i></a><a href="#谓词逻辑概述" class="headerlink" title="谓词逻辑概述"></a>谓词逻辑概述</h3>
      <p>1、谓词逻辑基本概念</p>
<p>2、描述实际问题</p>

        <h3 id="谓词公式与解释"   >
          <a href="#谓词公式与解释" class="heading-link"><i class="fas fa-link"></i></a><a href="#谓词公式与解释" class="headerlink" title="谓词公式与解释"></a>谓词公式与解释</h3>
      <p>1、谓词的合式公式</p>
<p>2、自由变元和约束变元</p>
<p>3、谓词公式的解释</p>
<p>4、谓词公式的分类</p>

        <h3 id="谓词公式的等值演算"   >
          <a href="#谓词公式的等值演算" class="heading-link"><i class="fas fa-link"></i></a><a href="#谓词公式的等值演算" class="headerlink" title="谓词公式的等值演算"></a>谓词公式的等值演算</h3>
      <p>1、谓词公式置换规则</p>
<p>2、变元换名规则</p>
<p>3、量词等值式</p>
<p>4、谓词公式的范式</p>

        <h3 id="谓词推理"   >
          <a href="#谓词推理" class="heading-link"><i class="fas fa-link"></i></a><a href="#谓词推理" class="headerlink" title="谓词推理"></a>谓词推理</h3>
      <p>1、谓词逻辑推理规则</p>
<p>2、谓词逻辑推理常见问题</p>
<p>3、谓词逻辑推理的应用</p>

        <h2 id="第3章-集合论"   >
          <a href="#第3章-集合论" class="heading-link"><i class="fas fa-link"></i></a><a href="#第3章-集合论" class="headerlink" title="第3章 集合论"></a>第3章 集合论</h2>
      
        <h3 id="集合的表示和基本概念"   >
          <a href="#集合的表示和基本概念" class="heading-link"><i class="fas fa-link"></i></a><a href="#集合的表示和基本概念" class="headerlink" title="集合的表示和基本概念"></a>集合的表示和基本概念</h3>
      
        <h3 id="集合的运算"   >
          <a href="#集合的运算" class="heading-link"><i class="fas fa-link"></i></a><a href="#集合的运算" class="headerlink" title="集合的运算"></a>集合的运算</h3>
      
        <h3 id="集合的计数"   >
          <a href="#集合的计数" class="heading-link"><i class="fas fa-link"></i></a><a href="#集合的计数" class="headerlink" title="集合的计数"></a>集合的计数</h3>
      <ul>
<li>朴素集合论</li>
<li>公理化集合论<ul>
<li>ZFC公理化集合论</li>
</ul>
</li>
</ul>
<ol>
<li><p>集合的符号表示</p>
<ul>
<li>枚举法 A={1，2，3，…}</li>
<li>叙述法 P={x | P(x) }</li>
<li>文氏图/维恩图</li>
<li>基数（base number）：集合A中的元素个数</li>
</ul>
</li>
<li><p>集合的组成</p>
<ul>
<li>空集</li>
<li>全集（universal set），记作U或E</li>
</ul>
</li>
<li><p>集合的相等关系</p>
<ul>
<li>集合中的元素是<strong>无序</strong>的</li>
<li>集合中的元素是<strong>不同</strong>的</li>
<li>外延性原理：当且仅当<strong>集合内的元素完全相同</strong>，记作A=B</li>
<li>子集和真子集</li>
<li>幂集（power set）</li>
</ul>
</li>
<li><p>集合的运算</p>
<ul>
<li>并集</li>
<li>交集</li>
<li>补集</li>
<li>差集</li>
<li>对称差集</li>
</ul>
</li>
<li><p>集合运算的基本等式</p>
<ul>
<li>幂等律</li>
<li>交换律</li>
<li>结合律</li>
<li>同一律</li>
<li>零律</li>
<li>分配律</li>
<li>吸收律</li>
<li>矛盾律和排中律</li>
<li>双重否定律</li>
<li>德摩根律</li>
</ul>
</li>
</ol>
<p>6.可数集合与不可数集合<br>(1) 自然数集的定义</p>
<ul>
<li>皮亚诺公理</li>
<li>冯诺依曼自然数定义</li>
</ul>
<p>(2) 等势Equipotential，记作：<br>    * A~B</p>
<p>(3) 可数集合</p>
<p>(4) 有理数集合</p>
<p>(5) 不可数集合</p>
<ol start="7">
<li>数理逻辑<br>(1) 命题Proposition<ul>
<li>定义：具有确切真值的陈述句</li>
<li>原子命题（简单命题）</li>
<li>复合命题</li>
<li>否定联结词</li>
<li>合取联结词</li>
<li>析取联结词</li>
<li>蕴涵联结词：<br> -善意推定</li>
</ul>
</li>
</ol>

        <h2 id="第4章-二元关系"   >
          <a href="#第4章-二元关系" class="heading-link"><i class="fas fa-link"></i></a><a href="#第4章-二元关系" class="headerlink" title="第4章 二元关系"></a>第4章 二元关系</h2>
      
        <h3 id="二元关系的基本概念"   >
          <a href="#二元关系的基本概念" class="heading-link"><i class="fas fa-link"></i></a><a href="#二元关系的基本概念" class="headerlink" title="二元关系的基本概念"></a>二元关系的基本概念</h3>
      <p>1、二元关系</p>
<p>(1) 有序对(序偶) Ordered pair，记作：</p>
<ul>
<li>&lt;x,y&gt;</li>
</ul>
<p>(2) 笛卡尔积</p>
<ul>
<li>A x B = {&lt;x,y&gt; | (x∈A)^(y∈B) }</li>
</ul>
<p>(3) n重有序组</p>
<p>(4) 二元关系</p>
<ul>
<li>空关系 Empty Relation</li>
<li>全关系 Total Relation</li>
<li>恒等关系 Identity Relation</li>
</ul>
<p>(5) 定义域和值域</p>
<ul>
<li>定义域 Domain<ul>
<li>C = domR</li>
</ul>
</li>
<li>值域 Range<ul>
<li>D = ranR</li>
</ul>
</li>
<li>域 Field</li>
</ul>
<p>(6) n元关系 n-ary relation</p>
<p>2、关系的集合表示</p>
<p>(1) 集合的两种基本表示法</p>
<ul>
<li>枚举法</li>
<li>叙述法</li>
</ul>
<p>(2) 关系的图形表示</p>

        <h3 id="关系运算"   >
          <a href="#关系运算" class="heading-link"><i class="fas fa-link"></i></a><a href="#关系运算" class="headerlink" title="关系运算"></a>关系运算</h3>
      
        <h3 id="关系的性质"   >
          <a href="#关系的性质" class="heading-link"><i class="fas fa-link"></i></a><a href="#关系的性质" class="headerlink" title="关系的性质"></a>关系的性质</h3>
      
        <h3 id="关系的闭包"   >
          <a href="#关系的闭包" class="heading-link"><i class="fas fa-link"></i></a><a href="#关系的闭包" class="headerlink" title="关系的闭包"></a>关系的闭包</h3>
      
        <h3 id="等价关系"   >
          <a href="#等价关系" class="heading-link"><i class="fas fa-link"></i></a><a href="#等价关系" class="headerlink" title="等价关系"></a>等价关系</h3>
      
        <h3 id="偏序关系"   >
          <a href="#偏序关系" class="heading-link"><i class="fas fa-link"></i></a><a href="#偏序关系" class="headerlink" title="偏序关系"></a>偏序关系</h3>
      
        <h2 id="第5章-图论"   >
          <a href="#第5章-图论" class="heading-link"><i class="fas fa-link"></i></a><a href="#第5章-图论" class="headerlink" title="第5章 图论"></a>第5章 图论</h2>
      
        <h3 id="图的基本概念"   >
          <a href="#图的基本概念" class="heading-link"><i class="fas fa-link"></i></a><a href="#图的基本概念" class="headerlink" title="图的基本概念"></a>图的基本概念</h3>
      <ul>
<li><p>图：由<strong>顶点</strong>和<strong>边</strong>组成</p>
</li>
<li><p>多重集合：元素可以重复出现的集合</p>
</li>
<li><p>无序积：{a,b}=(a,b)</p>
</li>
</ul>
<ol>
<li>无向图：<br>G=&lt;V,E&gt;<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">V,顶点集</span><br><span class="line">E，边集</span><br></pre></td></tr></table></div></figure></li>
</ol>
<ol start="2">
<li><p>有向图</p>
</li>
<li><p>图的矩阵表示</p>
</li>
</ol>

        <h3 id="图的连通性"   >
          <a href="#图的连通性" class="heading-link"><i class="fas fa-link"></i></a><a href="#图的连通性" class="headerlink" title="图的连通性"></a>图的连通性</h3>
      
        <h3 id="特殊图"   >
          <a href="#特殊图" class="heading-link"><i class="fas fa-link"></i></a><a href="#特殊图" class="headerlink" title="特殊图"></a>特殊图</h3>
      
        <h3 id="MIT-Chapter-1"   >
          <a href="#MIT-Chapter-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#MIT-Chapter-1" class="headerlink" title="MIT Chapter 1"></a>MIT Chapter 1</h3>
      <ol>
<li>谓词是其真理的命题</li>
</ol>
<p>Ex:</p>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">n | n^2+n+41 | prime</span><br><span class="line">0 | 0        | True</span><br><span class="line">1 | 43       | True</span><br><span class="line">2 | 47       | True</span><br><span class="line">————————————————————————</span><br><span class="line">又，原式=n(n+1)+41</span><br><span class="line">40| 1681     | False</span><br><span class="line">41| 1763     | False</span><br><span class="line"></span><br><span class="line">-Prime: 质数(素数)</span><br></pre></td></tr></table></div></figure>

<ol start="2">
<li>蕴涵</li>
</ol>
<p>Ex:</p>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">p | q        | p➡q  | q➡p  | q&lt;=&gt;p</span><br><span class="line">————————————————————————————————————</span><br><span class="line">T | T        | T     | T     | T</span><br><span class="line">T | F        | F     | T     | F</span><br><span class="line">F | T        | T     | F     | F</span><br><span class="line">F | F        | T     | T     | T   (*)</span><br><span class="line"></span><br><span class="line">(*) If pigs could fly, I would be king.</span><br></pre></td></tr></table></div></figure>

<ol start="3">
<li>公理是被<strong>假定为真</strong>的<em>命题</em></li>
</ol>
<ul>
<li>An axiom is a proposition that is assumed to be true.</li>
</ul>
<p>(1) Axioms should be:</p>
<ul>
<li>consistent</li>
<li>complete</li>
</ul>
<p>(2) Def:</p>
<ul>
<li>A set of axioms is consistent,if no proposition can be proved to be both true and false.</li>
<li>A set of axioms is said to be complete, if it can be used to prove every proposition is either true or false.</li>
</ul>

        <h3 id="MIT-Chapter-2"   >
          <a href="#MIT-Chapter-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#MIT-Chapter-2" class="headerlink" title="MIT Chapter 2"></a>MIT Chapter 2</h3>
      <ol>
<li>Proof of Contradiction</li>
</ol>
<ul>
<li>To prove p is true, we assume p is false, then use that hypothesis to derive a falsehood.</li>
</ul>
<p>Ex：</p>
<p>Hypothesis: 90 is bigger than 92</p>
<p>Proof: by picture</p>
<ol start="2">
<li>Induction</li>
</ol>
<ul>
<li>advantage<ul>
<li>powerful</li>
<li>commonly used</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>离散数学</tag>
        <tag>Discrete Mathematics</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构教程:Java语言描述(上)</title>
    <url>/2024/10/16/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%95%99%E7%A8%8B(Java%E8%AF%AD%E8%A8%80%E6%8F%8F%E8%BF%B0)(%E4%B8%8A)/</url>
    <content><![CDATA[<ul>
<li><span class="exturl"><a class="exturl__link"   href="http://www.tup.tsinghua.edu.cn/booksCenter/book_08649901.html" >数据结构教程: Java语言描述</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li>
</ul>

        <h2 id="第一章-绪论"   >
          <a href="#第一章-绪论" class="heading-link"><i class="fas fa-link"></i></a><a href="#第一章-绪论" class="headerlink" title="第一章 绪论"></a>第一章 绪论</h2>
      <p>略</p>

        <h2 id="第二章-线性表"   >
          <a href="#第二章-线性表" class="heading-link"><i class="fas fa-link"></i></a><a href="#第二章-线性表" class="headerlink" title="第二章 线性表"></a>第二章 线性表</h2>
      
        <h3 id="线性表的定义"   >
          <a href="#线性表的定义" class="heading-link"><i class="fas fa-link"></i></a><a href="#线性表的定义" class="headerlink" title="线性表的定义"></a>线性表的定义</h3>
      <p>略</p>

        <h3 id="线性表的顺序存储结构"   >
          <a href="#线性表的顺序存储结构" class="heading-link"><i class="fas fa-link"></i></a><a href="#线性表的顺序存储结构" class="headerlink" title="线性表的顺序存储结构"></a>线性表的顺序存储结构</h3>
      
        <h4 id="线性表的顺序存储结构——顺序表"   >
          <a href="#线性表的顺序存储结构——顺序表" class="heading-link"><i class="fas fa-link"></i></a><a href="#线性表的顺序存储结构——顺序表" class="headerlink" title="线性表的顺序存储结构——顺序表"></a>线性表的顺序存储结构——顺序表</h4>
      <ul>
<li>顺序表泛型类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SqListClass</span> &lt;E&gt;&#123;</span><br><span class="line">    <span class="comment">// 顺序表泛型类</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">initCapacity</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">public</span> E[] data;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> size;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> capacity;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SqListClass</span><span class="params">()</span>&#123;</span><br><span class="line">        data = (E[])<span class="keyword">new</span> <span class="title class_">Object</span>[initCapacity];</span><br><span class="line">        capacity = initCapacity;</span><br><span class="line">        size = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 线性表的基本运算算法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="线性表的基本运算算法在顺序表中的实现"   >
          <a href="#线性表的基本运算算法在顺序表中的实现" class="heading-link"><i class="fas fa-link"></i></a><a href="#线性表的基本运算算法在顺序表中的实现" class="headerlink" title="线性表的基本运算算法在顺序表中的实现"></a>线性表的基本运算算法在顺序表中的实现</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SqListClass</span> &lt;E&gt;&#123;</span><br><span class="line">    <span class="comment">// 顺序表泛型类</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">initCapacity</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">public</span> E[] data;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> size;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> capacity;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SqListClass</span><span class="params">()</span>&#123;</span><br><span class="line">        data = (E[])<span class="keyword">new</span> <span class="title class_">Object</span>[initCapacity];</span><br><span class="line">        capacity = initCapacity;</span><br><span class="line">        size = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 改变顺序表的容量为newCapacity</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateCapacity</span><span class="params">(<span class="type">int</span> newCapacity)</span>&#123;</span><br><span class="line">        E[] newData = (E[])<span class="keyword">new</span> <span class="title class_">Object</span>[newCapacity];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; size; i++)</span><br><span class="line">            newData[i] = data[i];</span><br><span class="line">        capacity = newCapacity;</span><br><span class="line">        data = newData;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 由a整体建立顺序表</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createList</span><span class="params">(E[] a)</span>&#123;</span><br><span class="line">        size = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; a.length; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(size == capacity)</span><br><span class="line">                updateCapacity(<span class="number">2</span> * size);</span><br><span class="line">            data[size] = a[i];</span><br><span class="line">            size++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在顺序表的末尾添加一个元素</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(E e)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(size == capacity)</span><br><span class="line">            updateCapacity(<span class="number">2</span> * size);</span><br><span class="line">        data[size] = e;</span><br><span class="line">        size++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 求顺序表的长度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">size</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置顺序表的长度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSize</span><span class="params">(<span class="type">int</span> nLen)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nLen &lt; <span class="number">0</span> || nLen &gt; size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;设置长度: nLen不在有效范围内&quot;</span>);</span><br><span class="line">        size = nLen;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回顺序表中序号为i的元素</span></span><br><span class="line">    <span class="keyword">public</span> E <span class="title function_">getElem</span><span class="params">(<span class="type">int</span> i)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">0</span> || i &gt; size - <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;查找: 位置i不在有效范围内&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> (E)data[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置序号为i的元素为e</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setElem</span><span class="params">(<span class="type">int</span> i, E e)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">0</span> || i &gt; size - <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;设置: 位置i不在有效范围内&quot;</span>);</span><br><span class="line">        data[i] = e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查找第一个值为e的元素的序号</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getNo</span><span class="params">(E e)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; size &amp;&amp; !data[i].equals(e))&#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i &gt;= size)</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 交换data[i]和data[j]</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span>&#123;</span><br><span class="line">        <span class="type">E</span> <span class="variable">tmp</span> <span class="operator">=</span> data[i];</span><br><span class="line">        data[i] = data[j];</span><br><span class="line">        data[j] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在顺序表中序号为i的位置上插入元素e</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> i, E e)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">0</span> || i &gt; size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;设置: 位置i不在有效范围内&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(size == capacity)</span><br><span class="line">            updateCapacity(<span class="number">2</span> * size);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> size; j &gt; i; j--)</span><br><span class="line">            data[j] = data[j - <span class="number">1</span>];</span><br><span class="line">        data[i] = e;</span><br><span class="line">        size++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在顺序表中删除序号为i的位置上的元素</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(<span class="type">int</span> i)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">0</span> || i &gt; size - <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;删除: 位置i不在有效范围内&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i; j &lt; size - <span class="number">1</span>; j++)</span><br><span class="line">            data[j] = data[j + <span class="number">1</span>];</span><br><span class="line">        size--;</span><br><span class="line">        <span class="keyword">if</span>(capacity &gt; initCapacity &amp;&amp; size == capacity / <span class="number">4</span>)</span><br><span class="line">            updateCapacity(capacity / <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将顺序表转换为字符串</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ans</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; size; i++)</span><br><span class="line">            ans += data[i].toString() + <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>测试类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SqListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        SqListClass&lt;Integer&gt; L = <span class="keyword">new</span> <span class="title class_">SqListClass</span>&lt;Integer&gt;();</span><br><span class="line">        L.createList(a);</span><br><span class="line">        System.out.println(<span class="string">&quot;顺序表L: &quot;</span> + L);   <span class="comment">// 输出: 顺序表L: 1 2 3 4 5</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="顺序表的应用算法示例"   >
          <a href="#顺序表的应用算法示例" class="heading-link"><i class="fas fa-link"></i></a><a href="#顺序表的应用算法示例" class="headerlink" title="顺序表的应用算法示例"></a>顺序表的应用算法示例</h4>
      <ul>
<li>(例题)对于含有n个整数元素的顺序表L，设计一个算法将其中的所有元素逆置</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SqListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        SqListClass&lt;Integer&gt; L = <span class="keyword">new</span> <span class="title class_">SqListClass</span>&lt;Integer&gt;();</span><br><span class="line">        L.createList(a);</span><br><span class="line">        System.out.println(<span class="string">&quot;顺序表L: &quot;</span> + L);   <span class="comment">// 输出: 顺序表L: 1 2 3 4 5</span></span><br><span class="line">        reverse(L);</span><br><span class="line">        System.out.println(<span class="string">&quot;逆置后的顺序表L: &quot;</span> + L);   <span class="comment">// 输出: 逆置后的顺序表L: 5 4 3 2 1 </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">reverse</span><span class="params">(SqListClass&lt;Integer&gt; L)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = L.size() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; j)&#123;</span><br><span class="line">            L.swap(i,j);</span><br><span class="line">            i++;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)对于整数顺序表L，所有元素值均不相同，设计一个算法将最大值元素与最小值元素交换，例如L=(1，2，3，4，5)，交换后L=(5,2,3,4,1)</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SqListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        SqListClass&lt;Integer&gt; L = <span class="keyword">new</span> <span class="title class_">SqListClass</span>&lt;Integer&gt;();</span><br><span class="line">        L.createList(a);</span><br><span class="line">        System.out.println(<span class="string">&quot;顺序表L: &quot;</span> + L);   <span class="comment">// 输出: 顺序表L: 1 2 3 4 5</span></span><br><span class="line">        swapMaxMin(L);</span><br><span class="line">        System.out.println(<span class="string">&quot;交换后的顺序表L: &quot;</span> + L);   <span class="comment">// 输出: 交换后的顺序表L: 5 2 3 4 1 </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">swapMaxMin</span><span class="params">(SqListClass&lt;Integer&gt; L)</span>&#123;</span><br><span class="line">        <span class="type">int</span> maxi, mini;</span><br><span class="line">        maxi = mini = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; L.size(); i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(L.getElem(i) &gt; L.getElem(maxi))</span><br><span class="line">                maxi = i;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(L.getElem(i) &lt; L.getElem(mini))</span><br><span class="line">                mini = i;</span><br><span class="line">        &#125;</span><br><span class="line">        L.swap(maxi,mini);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)假设有一个字符顺序表L，设计一个算法用于删除从序号i开始的k个元素，若成功则返回true，否则返回false。例如L=(‘a’,’b’,’c’,’d’,’e’)，删除i=1开始的k=2个元素后L=(‘a’,’d’,’e’)。</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SqListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Character[] a = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>&#125;;</span><br><span class="line">        SqListClass&lt;Character&gt; L = <span class="keyword">new</span> <span class="title class_">SqListClass</span>&lt;&gt;();</span><br><span class="line">        L.createList(a);</span><br><span class="line">        System.out.println(<span class="string">&quot;顺序表L: &quot;</span> + L);   <span class="comment">// 输出: 顺序表L: a b c d e</span></span><br><span class="line">        deleteK1(L,<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;顺序表L: &quot;</span> + L);   <span class="comment">// 输出: 顺序表L: a d e</span></span><br><span class="line">        deleteK2(L,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;顺序表L: &quot;</span> + L);   <span class="comment">// 输出: 顺序表L: a e </span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 解法1</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">deleteK1</span><span class="params">(SqListClass&lt;Character&gt; L, <span class="type">int</span> i, <span class="type">int</span> k)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">0</span> || k &lt; <span class="number">1</span> || i + k &lt; <span class="number">1</span> || i + k &gt; L.size())</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i; j &lt;= i + k - <span class="number">1</span>; j++)</span><br><span class="line">            L.delete(i);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  解法2</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">deleteK2</span><span class="params">(SqListClass&lt;Character&gt; L, <span class="type">int</span> i, <span class="type">int</span> k)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">0</span> || k &lt; <span class="number">1</span> || i + k &lt; <span class="number">1</span> || i + k &gt; L.size())</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + k; j &lt; L.size(); j++)</span><br><span class="line">            L.setElem(j - k, L.getElem(j));</span><br><span class="line">        L.setSize(L.size() - k);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)对于含有n个整数元素的顺序表L，设计一个算法用于删除其中所有值为x的元素，例如L=( 1,2,1,5,1)，若x=1，删除后L=(2,5)</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SqListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">1</span>&#125;;</span><br><span class="line">        SqListClass&lt;Integer&gt; L = <span class="keyword">new</span> <span class="title class_">SqListClass</span>&lt;&gt;();</span><br><span class="line">        L.createList(a);</span><br><span class="line">        System.out.println(<span class="string">&quot;顺序表L: &quot;</span> + L);   <span class="comment">// 输出: 顺序表L: 1 2 2 2 1</span></span><br><span class="line">        deleteX1(L, <span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;顺序表L: &quot;</span> + L);   <span class="comment">// 输出: 顺序表L: 2 5</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        L.createList(a);</span><br><span class="line">        System.out.println(<span class="string">&quot;顺序表L: &quot;</span> + L);   <span class="comment">// 输出: 顺序表L: 1 2 2 2 1</span></span><br><span class="line">        deleteX2(L, <span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;顺序表L: &quot;</span> + L);   <span class="comment">// 输出: 顺序表L: 2 5</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        L.createList(a);</span><br><span class="line">        System.out.println(<span class="string">&quot;顺序表L: &quot;</span> + L);   <span class="comment">// 输出: 顺序表L: 1 2 2 2 1</span></span><br><span class="line">        deleteX3(L, <span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;顺序表L: &quot;</span> + L);   <span class="comment">// 输出: 顺序表L: 2 5</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 解法1</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">deleteX1</span><span class="params">(SqListClass&lt;Integer&gt; L, Integer x)</span>&#123;</span><br><span class="line">        <span class="type">int</span> i, k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; L.size(); i++)</span><br><span class="line">            <span class="keyword">if</span>(L.getElem(i) != x)&#123;</span><br><span class="line">                L.setElem(k, L.getElem(i));</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">        L.setSize(k);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 解法2</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">deleteX2</span><span class="params">(SqListClass&lt;Integer&gt; L, Integer x)</span>&#123;</span><br><span class="line">        <span class="type">int</span> i, k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; L.size(); i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(L.getElem(i) != x)</span><br><span class="line">                L.setElem(i - k, L.getElem(i));</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                k++;</span><br><span class="line">        &#125;</span><br><span class="line">        L.setSize(L.size() - k);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 解法3</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">deleteX3</span><span class="params">(SqListClass&lt;Integer&gt; L, Integer x)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> -<span class="number">1</span>, j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(j &lt; L.size())&#123;</span><br><span class="line">            <span class="keyword">if</span>(L.getElem(j) != x)&#123;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">if</span>(i != j)</span><br><span class="line">                    L.swap(i,j);</span><br><span class="line">            &#125;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        L.setSize(i + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)对于含有n个整数元素的顺序表L，设计一个尽可能高效的算法删除所有相邻重复的元素，即多个相邻重复的元素仅仅保留一个，例如L=(1,2,2,2,1)，删除后L=(1,2,1)</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SqListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</span><br><span class="line">        SqListClass&lt;Integer&gt; L = <span class="keyword">new</span> <span class="title class_">SqListClass</span>&lt;&gt;();</span><br><span class="line">        L.createList(a);</span><br><span class="line">        System.out.println(<span class="string">&quot;顺序表L: &quot;</span> + L);   <span class="comment">// 输出: 顺序表L: 1 2 2 2 1</span></span><br><span class="line">        delSame(L);</span><br><span class="line">        System.out.println(<span class="string">&quot;顺序表L: &quot;</span> + L);   <span class="comment">// 输出: 顺序表L: 1 2 1 </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">delSame</span><span class="params">(SqListClass&lt;Integer&gt; L)</span>&#123;</span><br><span class="line">        <span class="type">int</span> i, k = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; L.size(); i++)</span><br><span class="line">            <span class="keyword">if</span>(L.getElem(i) != L.getElem(k - <span class="number">1</span>))&#123;</span><br><span class="line">                L.setElem(k,L.getElem(i));</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">        L.setSize(k);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)有两个按元素值递增有序的整数顺序表A和B，设计一个算法将顺序表A和B的全部元素合并到一个递增有序顺序表C中</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SqListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        SqListClass&lt;Integer&gt; L1 = <span class="keyword">new</span> <span class="title class_">SqListClass</span>&lt;&gt;();</span><br><span class="line">        L1.createList(a);</span><br><span class="line">        System.out.println(<span class="string">&quot;顺序表L1: &quot;</span> + L1);   <span class="comment">// 输出: 顺序表L1: 1 2 3 4 5</span></span><br><span class="line"></span><br><span class="line">        Integer[] b = &#123;<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">        SqListClass&lt;Integer&gt; L2 = <span class="keyword">new</span> <span class="title class_">SqListClass</span>&lt;&gt;();</span><br><span class="line">        L2.createList(b);</span><br><span class="line">        System.out.println(<span class="string">&quot;顺序表L2: &quot;</span> + L2);   <span class="comment">// 输出: 顺序表L2: 6 7 8 9 10</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;---二路归并算法如下---&quot;</span>);</span><br><span class="line">        System.out.println(merge2(L1, L2));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqListClass&lt;Integer&gt; <span class="title function_">merge2</span><span class="params">(SqListClass&lt;Integer&gt; A, SqListClass&lt;Integer&gt; B)</span>&#123;</span><br><span class="line">        SqListClass&lt;Integer&gt; C = <span class="keyword">new</span> <span class="title class_">SqListClass</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; A.size() &amp;&amp; j &lt; B.size())&#123;</span><br><span class="line">            <span class="keyword">if</span>(A.getElem(i) &lt; B.getElem(j))&#123;</span><br><span class="line">                C.add(A.getElem(i));</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                C.add(B.getElem(j));</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; A.size())&#123;</span><br><span class="line">            C.add(B.getElem(i));</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(j &lt; B.size())&#123;</span><br><span class="line">            C.add(B.getElem(j));</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> C;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="顺序表容器——ArrayList"   >
          <a href="#顺序表容器——ArrayList" class="heading-link"><i class="fas fa-link"></i></a><a href="#顺序表容器——ArrayList" class="headerlink" title="顺序表容器——ArrayList"></a>顺序表容器——ArrayList</h4>
      <ul>
<li>(例题)假设递增有序整数顺序表用ArrayList<Integer>对象存放，设计一个将两个递增有序整数顺序表A和B的全部元素合并到一个递增有序整数顺序表C中</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Array;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ArrayList&lt;Integer&gt; <span class="title function_">merge2</span><span class="params">(ArrayList&lt;Integer&gt; A, ArrayList&lt;Integer&gt; B)</span>&#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; C = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; A.size() &amp;&amp; j &lt; B.size())&#123;</span><br><span class="line">            <span class="keyword">if</span>(A.get(i) &lt; B.get(j))&#123;</span><br><span class="line">                C.add(A.get(i));</span><br><span class="line">                i++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                C.add(B.get(j));</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; A.size())&#123;</span><br><span class="line">            C.add(A.get(i));</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(j &lt; B.size())&#123;</span><br><span class="line">            C.add(B.get(j));</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> C;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] a = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>&#125;;</span><br><span class="line">        ArrayList&lt;Integer&gt; A = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;(Arrays.asList(a));</span><br><span class="line">        System.out.println(<span class="string">&quot;A: &quot;</span> + A);</span><br><span class="line">        Integer[] b = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">20</span>&#125;;</span><br><span class="line">        ArrayList&lt;Integer&gt; B = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;(Arrays.asList(b));</span><br><span class="line">        System.out.println(<span class="string">&quot;B: &quot;</span> + B);</span><br><span class="line">        System.out.println(<span class="string">&quot;二路归并&quot;</span>);</span><br><span class="line">        ArrayList&lt;Integer&gt; C;</span><br><span class="line">        C = merge2(A, B);</span><br><span class="line">        System.out.println(<span class="string">&quot;C: &quot;</span> + C);</span><br><span class="line">        <span class="comment">// 输出: </span></span><br><span class="line">        <span class="comment">// A: [1, 3, 5, 7]</span></span><br><span class="line">        <span class="comment">//B: [1, 2, 5, 7, 9, 10, 20]</span></span><br><span class="line">        <span class="comment">//二路归并</span></span><br><span class="line">        <span class="comment">//C: [1, 1, 2, 3, 5, 5, 7, 7, 9, 10, 20]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)有若干个学生记录，每个记录包含姓名和年龄，用类ArrayList的对象存放，分别采用上述3种排序方法实现按年龄递增排序，按姓名递增排序和按姓名递减排序</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Stud</span> <span class="keyword">implements</span> <span class="title class_">Comparable</span>&lt;Stud&gt;&#123;  <span class="comment">// 学生类</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Stud</span><span class="params">(String na,<span class="type">int</span> ag)</span>&#123;</span><br><span class="line">        name = na;</span><br><span class="line">        age = ag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;</span><br><span class="line">        String ans;</span><br><span class="line">        ans = <span class="string">&quot;[&quot;</span> + name + <span class="string">&quot;,&quot;</span> + age + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(Stud o)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.age.compareTo(o.age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure>

<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;    <span class="comment">// 测试类</span></span><br><span class="line">        List&lt;Stud&gt; L = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Stud&gt;();</span><br><span class="line">        L.add(<span class="keyword">new</span> <span class="title class_">Stud</span>(<span class="string">&quot;John&quot;</span>,<span class="number">18</span>));</span><br><span class="line">        L.add(<span class="keyword">new</span> <span class="title class_">Stud</span>(<span class="string">&quot;Mary&quot;</span>,<span class="number">17</span>));</span><br><span class="line">        L.add(<span class="keyword">new</span> <span class="title class_">Stud</span>(<span class="string">&quot;Smith&quot;</span>,<span class="number">20</span>));</span><br><span class="line">        L.add(<span class="keyword">new</span> <span class="title class_">Stud</span>(<span class="string">&quot;Tom&quot;</span>,<span class="number">18</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;初始序列: \n &quot;</span> + L);</span><br><span class="line">        Collections.sort(L);        <span class="comment">// 排序方法1</span></span><br><span class="line">        System.out.println(<span class="string">&quot;按年龄递增排序: \n &quot;</span> + L);</span><br><span class="line">        Collections.sort(L, <span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;Stud&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Stud o1, Stud o2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> o1.getName().compareTo(o2.getName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(<span class="string">&quot;按姓名递增排序: \n &quot;</span> + L);</span><br><span class="line">        L.sort(Comparator.comparing(Stud::getName).reversed());</span><br><span class="line">        System.out.println(<span class="string">&quot;按姓名递减排序: \n&quot;</span> + L);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 输出:</span></span><br><span class="line">    <span class="comment">// 初始序列:</span></span><br><span class="line">    <span class="comment">// [[John,18], [Mary,17], [Smith,20], [Tom,18]]</span></span><br><span class="line">    <span class="comment">//按年龄递增排序:</span></span><br><span class="line">    <span class="comment">// [[Mary,17], [John,18], [Tom,18], [Smith,20]]</span></span><br><span class="line">    <span class="comment">//按姓名递增排序:</span></span><br><span class="line">    <span class="comment">// [[John,18], [Mary,17], [Smith,20], [Tom,18]]</span></span><br><span class="line">    <span class="comment">//按姓名递减排序:</span></span><br><span class="line">    <span class="comment">//[[Tom,18], [Smith,20], [Mary,17], [John,18]]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="线性表的链式存储结构"   >
          <a href="#线性表的链式存储结构" class="heading-link"><i class="fas fa-link"></i></a><a href="#线性表的链式存储结构" class="headerlink" title="线性表的链式存储结构"></a>线性表的链式存储结构</h3>
      
        <h4 id="线性表的链式存储结构——链表"   >
          <a href="#线性表的链式存储结构——链表" class="heading-link"><i class="fas fa-link"></i></a><a href="#线性表的链式存储结构——链表" class="headerlink" title="线性表的链式存储结构——链表"></a>线性表的链式存储结构——链表</h4>
      
        <h4 id="单链表"   >
          <a href="#单链表" class="heading-link"><i class="fas fa-link"></i></a><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h4>
      <ul>
<li>单链表结点泛型类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkNode</span> &lt;E&gt;&#123;  <span class="comment">// 单链表结点泛型类</span></span><br><span class="line">    E data;</span><br><span class="line">    LinkNode&lt;E&gt; next;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LinkNode</span><span class="params">()</span>&#123;</span><br><span class="line">        next = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LinkNode</span><span class="params">(E d)</span>&#123;</span><br><span class="line">        data = d;</span><br><span class="line">        next = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>单链表泛型类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkListClass</span> &lt;E&gt;&#123; <span class="comment">// 单链表泛型类</span></span><br><span class="line">    LinkNode&lt;E&gt; head;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LinkListClass</span><span class="params">()</span>&#123;</span><br><span class="line">        head = <span class="keyword">new</span> <span class="title class_">LinkNode</span>&lt;E&gt;();</span><br><span class="line">        head.next = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 头插法: 由数组a整体建立单链表</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createListF</span><span class="params">(E[] a)</span>&#123;</span><br><span class="line">        LinkNode&lt;E&gt; s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; a.length; i++)&#123;</span><br><span class="line">            s = <span class="keyword">new</span> <span class="title class_">LinkNode</span>&lt;E&gt;(a[i]);</span><br><span class="line">            s.next = head.next;</span><br><span class="line">            head.next = s;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 尾插法: 由数组a整体建立单链表</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createListR</span><span class="params">(E[] a)</span>&#123;</span><br><span class="line">        LinkNode&lt;E&gt; s,t;</span><br><span class="line">        t = head;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; a.length; i++)&#123;</span><br><span class="line">            s = <span class="keyword">new</span> <span class="title class_">LinkNode</span>&lt;E&gt;(a[i]);</span><br><span class="line">            t.next = s;</span><br><span class="line">            t = s;</span><br><span class="line">        &#125;</span><br><span class="line">        t.next = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回序号为i的结点</span></span><br><span class="line">    <span class="keyword">private</span> LinkNode&lt;E&gt; <span class="title function_">getI</span><span class="params">(<span class="type">int</span> i)</span>&#123;</span><br><span class="line">        LinkNode&lt;E&gt; p = head;</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(j &lt; i)&#123;</span><br><span class="line">            j++;</span><br><span class="line">            p = p.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在单链表的末尾添加一个元素</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(E e)</span>&#123;</span><br><span class="line">        LinkNode&lt;E&gt; s = <span class="keyword">new</span> <span class="title class_">LinkNode</span>&lt;E&gt;(e);</span><br><span class="line">        LinkNode&lt;E&gt; p = head;</span><br><span class="line">        <span class="keyword">while</span>(p.next != <span class="literal">null</span>)&#123;</span><br><span class="line">            p = p.next;</span><br><span class="line">        &#125;</span><br><span class="line">        p.next = s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 求单链表的长度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">size</span><span class="params">()</span>&#123;</span><br><span class="line">        LinkNode&lt;E&gt; p = head;</span><br><span class="line">        <span class="type">int</span> <span class="variable">cnt</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(p.next != <span class="literal">null</span>)&#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            p = p.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cnt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置单链表的长度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSize</span><span class="params">(<span class="type">int</span> nLen)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> size();</span><br><span class="line">        <span class="keyword">if</span>(nLen &lt; <span class="number">0</span> || nLen &gt; len)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;设置: 长度nLen不在有效范围内&quot;</span>);</span><br><span class="line">        LinkNode&lt;E&gt; p = getI(nLen - <span class="number">1</span>);</span><br><span class="line">        p.next = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回单链表中序号为i的元素</span></span><br><span class="line">    <span class="keyword">public</span> E <span class="title function_">getElem</span><span class="params">(<span class="type">int</span> i)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> size();</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">0</span> || i &gt; len - <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;查找: 位置i不在有效范围内&quot;</span>);</span><br><span class="line">        LinkNode&lt;E&gt; p = getI(i);</span><br><span class="line">        <span class="keyword">return</span> (E)p.data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置序号为i的元素为e</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setElem</span><span class="params">(<span class="type">int</span> i,E e)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">0</span> || i &gt; size() - <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;设置: 位置i不在有效范围内&quot;</span>);</span><br><span class="line">        LinkNode&lt;E&gt; p = getI(i);</span><br><span class="line">        p.data = e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查找第一个为e的元素的序号</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getNo</span><span class="params">(E e)</span>&#123;</span><br><span class="line">        LinkNode&lt;E&gt; p = head.next;</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(p != <span class="literal">null</span> &amp;&amp; !p.data.equals(e))&#123;</span><br><span class="line">            j++;</span><br><span class="line">            p = p.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p == <span class="literal">null</span>) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> j;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 交换序号为i和序号为j的元素</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> j)</span>&#123;</span><br><span class="line">        LinkNode&lt;E&gt; p = getI(i);</span><br><span class="line">        LinkNode&lt;E&gt; q = getI(j);</span><br><span class="line">        <span class="type">E</span> <span class="variable">tmp</span> <span class="operator">=</span> p.data;</span><br><span class="line">        p.data = q.data;</span><br><span class="line">        q.data = tmp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在单链表中序号为i的位置上插入元素e</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> i,E e)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">0</span> || i &gt; size() - <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;插入: 位置i不在有效范围内&quot;</span>);</span><br><span class="line">        LinkNode&lt;E&gt; p = getI(i - <span class="number">1</span>);</span><br><span class="line">        LinkNode&lt;E&gt; s = <span class="keyword">new</span> <span class="title class_">LinkNode</span>&lt;E&gt;(e);</span><br><span class="line">        s.next = p.next;</span><br><span class="line">        p.next = s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在单链表中删除序号为i的位置上的元素</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(<span class="type">int</span> i)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">0</span> || i &gt; size() - <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;删除: 位置i不在有效范围内&quot;</span>);</span><br><span class="line">        LinkNode&lt;E&gt; p = getI(i - <span class="number">1</span>);</span><br><span class="line">        p.next = p.next.next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将单链表转换为字符串</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ans</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        LinkNode&lt;E&gt; p = head.next;</span><br><span class="line">        <span class="keyword">while</span>(p != <span class="literal">null</span>)&#123;</span><br><span class="line">            ans += p.data + <span class="string">&quot; &quot;</span>;</span><br><span class="line">            p = p.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="单链表的应用算法设计示例"   >
          <a href="#单链表的应用算法设计示例" class="heading-link"><i class="fas fa-link"></i></a><a href="#单链表的应用算法设计示例" class="headerlink" title="单链表的应用算法设计示例"></a>单链表的应用算法设计示例</h4>
      <ul>
<li>(例题)有一个长度大于2的整数单链表L，设计一个算法查找L的中间位置的元素，例如，L=(1,2,3)，返回元素为2；L=( 1,2,3,4)，返回元素为2</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        LinkListClass&lt;Integer&gt; L = <span class="keyword">new</span> <span class="title class_">LinkListClass</span>&lt;&gt;();</span><br><span class="line">        L.createListR(a);</span><br><span class="line">        System.out.println(<span class="string">&quot;单链表L: &quot;</span> + L);</span><br><span class="line">        System.out.println(<span class="string">&quot;(计数法)中间位置元素: &quot;</span> + middle1(L));   <span class="comment">// 输出: (计数法)中间位置元素: 2</span></span><br><span class="line">        System.out.println(<span class="string">&quot;(快慢指针法)中间位置元素: &quot;</span> + middle2(L));   <span class="comment">// 输出: (快慢指针法)中间位置元素: 2</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计数法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">middle1</span><span class="params">(LinkListClass&lt;Integer&gt; L)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> L.size();</span><br><span class="line">        LinkNode&lt;Integer&gt; p = L.head.next;</span><br><span class="line">        <span class="keyword">while</span>(j &lt;= (n - <span class="number">1</span>) / <span class="number">2</span>)&#123;</span><br><span class="line">            j++;</span><br><span class="line">            p = p.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p.data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 快慢指针法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">middle2</span><span class="params">(LinkListClass&lt;Integer&gt; L)</span>&#123;</span><br><span class="line">        LinkNode&lt;Integer&gt; slow = L.head.next;</span><br><span class="line">        LinkNode&lt;Integer&gt; fast = L.head.next;</span><br><span class="line">        <span class="keyword">while</span>(fast.next != <span class="literal">null</span> &amp;&amp; fast.next.next != <span class="literal">null</span>)&#123;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">            fast = fast.next.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slow.data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)有一个整数单链表L，其中可能存在多个值相同的结点，设计一个算法查找L中最大值结点的个数</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        LinkListClass&lt;Integer&gt; L = <span class="keyword">new</span> <span class="title class_">LinkListClass</span>&lt;&gt;();</span><br><span class="line">        L.createListR(a);</span><br><span class="line">        System.out.println(<span class="string">&quot;单链表L: &quot;</span> + L);   <span class="comment">// 输出: 单链表L: 1 2 2 3 3 3</span></span><br><span class="line">        System.out.println(<span class="string">&quot;最大值的个数: &quot;</span> + maxCount(L));   <span class="comment">// 输出: 最大值的个数: 3</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">maxCount</span><span class="params">(LinkListClass&lt;Integer&gt; L)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">cnt</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        Integer maxe;</span><br><span class="line">        LinkNode&lt;Integer&gt; p = L.head.next;</span><br><span class="line">        maxe = p.data;</span><br><span class="line">        <span class="keyword">while</span>(p.next != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(p.next.data &gt; maxe)&#123;</span><br><span class="line">                maxe = p.next.data;</span><br><span class="line">                cnt = <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(p.next.data == maxe)</span><br><span class="line">                cnt++;</span><br><span class="line">            p = p.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cnt;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)有一个整数单链表L，其中可能存在多个值相同的结点，设计一个算法删除L中所有最大值的结点</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        LinkListClass&lt;Integer&gt; L = <span class="keyword">new</span> <span class="title class_">LinkListClass</span>&lt;&gt;();</span><br><span class="line">        L.createListR(a);</span><br><span class="line">        System.out.println(<span class="string">&quot;单链表L: &quot;</span> + L);   <span class="comment">// 输出: 单链表L: 1 2 2 3 3 3</span></span><br><span class="line">        deleteMaxNodes(L);</span><br><span class="line">        System.out.println(<span class="string">&quot;单链表L: &quot;</span> + L);   <span class="comment">// 输出: 单链表L: 1 2 2 </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">deleteMaxNodes</span><span class="params">(LinkListClass&lt;Integer&gt; L)</span>&#123;</span><br><span class="line">        Integer maxe;</span><br><span class="line">        LinkNode&lt;Integer&gt; p = L.head.next,pre;</span><br><span class="line">        maxe = p.data;</span><br><span class="line">        <span class="keyword">while</span>(p.next != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(p.next.data &gt; maxe)</span><br><span class="line">                maxe = p.next.data;</span><br><span class="line">            p = p.next;</span><br><span class="line">        &#125;</span><br><span class="line">        pre = L.head;</span><br><span class="line">        p = pre.next;</span><br><span class="line">        <span class="keyword">while</span>(p != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(p.data == maxe)&#123;</span><br><span class="line">                pre.next = p.next;</span><br><span class="line">                p = pre.next;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                pre = pre.next;</span><br><span class="line">                p = pre.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)有一个整数单链表L，设计一个算法逆置L中的所有结点。例如L=(1,2,3,4,5)，逆置后L=(5,4,3,2,1)</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        LinkListClass&lt;Integer&gt; L = <span class="keyword">new</span> <span class="title class_">LinkListClass</span>&lt;&gt;();</span><br><span class="line">        L.createListR(a);</span><br><span class="line">        System.out.println(<span class="string">&quot;单链表L: &quot;</span> + L);   <span class="comment">// 输出: 单链表L: 1 2 3 4 5</span></span><br><span class="line">        reverse(L);</span><br><span class="line">        System.out.println(<span class="string">&quot;单链表L: &quot;</span> + L);   <span class="comment">// 输出: 单链表L: 5 4 3 2 1 </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">reverse</span><span class="params">(LinkListClass&lt;Integer&gt; L)</span>&#123;</span><br><span class="line">        LinkNode&lt;Integer&gt; p = L.head.next,q;</span><br><span class="line">        L.head.next = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">while</span>(p != <span class="literal">null</span>)&#123;</span><br><span class="line">            q = p.next;</span><br><span class="line">            p.next = L.head.next;</span><br><span class="line">            L.head.next = p;</span><br><span class="line">            p = q;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)有两个整数单链表A和B，设计一个算法将A、B的所有数据结点交替合并起来得到一个整数单链表C</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] a = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>&#125;;</span><br><span class="line">        LinkListClass&lt;Integer&gt;  A = <span class="keyword">new</span> <span class="title class_">LinkListClass</span>&lt;&gt;();</span><br><span class="line">        A.createListR(a);</span><br><span class="line">        System.out.println(<span class="string">&quot;单链表A: &quot;</span> + A);   <span class="comment">// 输出: 单链表A: 1 3 5 7 9</span></span><br><span class="line">        Integer[] b = &#123;<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">10</span>&#125;;</span><br><span class="line">        LinkListClass&lt;Integer&gt;  B = <span class="keyword">new</span> <span class="title class_">LinkListClass</span>&lt;&gt;();</span><br><span class="line">        B.createListR(b);</span><br><span class="line">        System.out.println(<span class="string">&quot;单链表B: &quot;</span> + B);   <span class="comment">// 输出: 单链表B: 2 4 6 8 10</span></span><br><span class="line">        System.out.println(<span class="string">&quot;单链表C: &quot;</span> + comb(A, B));   <span class="comment">// 输出: 单链表C: 1 2 3 4 5 6 7 8 9 10 </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LinkListClass&lt;Integer&gt; <span class="title function_">comb</span><span class="params">(LinkListClass&lt;Integer&gt; A,LinkListClass&lt;Integer&gt; B)</span>&#123;</span><br><span class="line">        LinkListClass&lt;Integer&gt; C = <span class="keyword">new</span> <span class="title class_">LinkListClass</span>&lt;&gt;();</span><br><span class="line">        LinkNode&lt;Integer&gt; p,q,t;</span><br><span class="line">        p = A.head.next;</span><br><span class="line">        q = B.head.next;</span><br><span class="line">        t = C.head;</span><br><span class="line">        <span class="keyword">while</span>(p != <span class="literal">null</span> &amp;&amp; q != <span class="literal">null</span>)&#123;</span><br><span class="line">            t.next = p;</span><br><span class="line">            t = p;</span><br><span class="line">            p = p.next;</span><br><span class="line">            t.next = q;</span><br><span class="line">            t = q;</span><br><span class="line">            q = q.next;</span><br><span class="line">        &#125;</span><br><span class="line">        t.next = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(p != <span class="literal">null</span>) t.next = p;</span><br><span class="line">        <span class="keyword">if</span>(q != <span class="literal">null</span>) t.next = q;</span><br><span class="line">        <span class="keyword">return</span> C;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)有一个含2n个整数的单链表L，设计一个算法将其拆分成两个带头结点的单链表A和B，A中所有元素递增，B中所有元素递减</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>&#125;;</span><br><span class="line">        LinkListClass&lt;Integer&gt;  L = <span class="keyword">new</span> <span class="title class_">LinkListClass</span>&lt;&gt;();</span><br><span class="line">        L.createListR(a);</span><br><span class="line">        System.out.println(<span class="string">&quot;单链表L: &quot;</span> + L);   <span class="comment">// 输出: 单链表L: 1 2 3 4 5 6 7</span></span><br><span class="line">        LinkListClass&lt;Integer&gt; A = <span class="keyword">new</span> <span class="title class_">LinkListClass</span>&lt;&gt;();</span><br><span class="line">        LinkListClass&lt;Integer&gt; B = <span class="keyword">new</span> <span class="title class_">LinkListClass</span>&lt;&gt;();</span><br><span class="line">        split(L,A,B);</span><br><span class="line">        System.out.println(<span class="string">&quot;单链表A: &quot;</span> + A);   <span class="comment">// 输出: 单链表A: 1 3 5 7</span></span><br><span class="line">        System.out.println(<span class="string">&quot;单链表B: &quot;</span> + B);   <span class="comment">// 输出: 单链表B: 6 4 2 </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">split</span><span class="params">(LinkListClass&lt;Integer&gt; L,LinkListClass&lt;Integer&gt; A,LinkListClass&lt;Integer&gt; B)</span>&#123;</span><br><span class="line">        LinkNode&lt;Integer&gt; p = L.head.next;</span><br><span class="line">        LinkNode&lt;Integer&gt; q = <span class="literal">null</span>,t;</span><br><span class="line">        t = A.head;</span><br><span class="line">        <span class="keyword">while</span>(p != <span class="literal">null</span>)&#123;</span><br><span class="line">            t.next = p;</span><br><span class="line">            t = p;</span><br><span class="line">            p = p.next;</span><br><span class="line">            <span class="keyword">if</span>(p != <span class="literal">null</span>)&#123;</span><br><span class="line">                q = p.next;</span><br><span class="line">                p.next = B.head.next;</span><br><span class="line">                B.head.next = p;</span><br><span class="line">                p = q;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        t.next = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)有两个递增有序整数单链表A和B，设计一个算法采用二路归并方法将A和B的所有结点合并到递增有序单链表C中</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] a = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>&#125;;</span><br><span class="line">        LinkListClass&lt;Integer&gt;  A = <span class="keyword">new</span> <span class="title class_">LinkListClass</span>&lt;&gt;();</span><br><span class="line">        A.createListR(a);</span><br><span class="line">        System.out.println(<span class="string">&quot;单链表A: &quot;</span> + A);   <span class="comment">// 输出: 单链表A: 1 3 5 7 9</span></span><br><span class="line">        Integer[] b = &#123;<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">10</span>&#125;;</span><br><span class="line">        LinkListClass&lt;Integer&gt;  B = <span class="keyword">new</span> <span class="title class_">LinkListClass</span>&lt;&gt;();</span><br><span class="line">        B.createListR(b);</span><br><span class="line">        System.out.println(<span class="string">&quot;单链表B: &quot;</span> + B);   <span class="comment">// 输出: 单链表B: 2 4 6 8 10</span></span><br><span class="line">        System.out.println(<span class="string">&quot;单链表C: &quot;</span> + merge2(A, B));   <span class="comment">// 输出: 单链表C: 1 2 3 4 5 6 7 8 9 10</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LinkListClass&lt;Integer&gt; <span class="title function_">merge2</span><span class="params">(LinkListClass&lt;Integer&gt; A,LinkListClass&lt;Integer&gt; B)</span>&#123;</span><br><span class="line">        LinkNode&lt;Integer&gt; p = A.head.next;</span><br><span class="line">        LinkNode&lt;Integer&gt; q = B.head.next;</span><br><span class="line">        LinkListClass&lt;Integer&gt; C = <span class="keyword">new</span> <span class="title class_">LinkListClass</span>&lt;&gt;();</span><br><span class="line">        LinkNode&lt;Integer&gt; t = C.head;</span><br><span class="line">        <span class="keyword">while</span>(p != <span class="literal">null</span> &amp;&amp; q != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(p.data &lt; q.data)&#123;</span><br><span class="line">                t.next = p;</span><br><span class="line">                t = p;</span><br><span class="line">                p = p.next;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                t.next = q;</span><br><span class="line">                t = q;</span><br><span class="line">                q = q.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        t.next = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(p != <span class="literal">null</span>) t.next = p;</span><br><span class="line">        <span class="keyword">if</span>(q != <span class="literal">null</span>) t.next = q;</span><br><span class="line">        <span class="keyword">return</span> C;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)有两个递增有序整数单链表A和B,假设每个单链表中没有值相同的结点，但两个单链表中存在相同值的结点，设计算法建立一个新的递增有序整数单链表C，其中包括A和B中值相同的结点，要求算法执行后不改变单链表A和B</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkListTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] a = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>&#125;;</span><br><span class="line">        LinkListClass&lt;Integer&gt;  A = <span class="keyword">new</span> <span class="title class_">LinkListClass</span>&lt;&gt;();</span><br><span class="line">        A.createListR(a);</span><br><span class="line">        System.out.println(<span class="string">&quot;单链表A: &quot;</span> + A);   <span class="comment">// 输出: 单链表A: 1 3 5 7 9</span></span><br><span class="line">        Integer[] b = &#123;<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>&#125;;</span><br><span class="line">        LinkListClass&lt;Integer&gt;  B = <span class="keyword">new</span> <span class="title class_">LinkListClass</span>&lt;&gt;();</span><br><span class="line">        B.createListR(b);</span><br><span class="line">        System.out.println(<span class="string">&quot;单链表B: &quot;</span> + B);   <span class="comment">// 输出: 单链表B: 5 7 9 </span></span><br><span class="line">        System.out.println(<span class="string">&quot;单链表C: &quot;</span> + commNodes(A, B));   <span class="comment">// 输出: 单链表C: 5 7 9 </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LinkListClass&lt;Integer&gt; <span class="title function_">commNodes</span><span class="params">(LinkListClass&lt;Integer&gt; A,LinkListClass&lt;Integer&gt; B)</span>&#123;</span><br><span class="line">        LinkNode&lt;Integer&gt; p = A.head.next;</span><br><span class="line">        LinkNode&lt;Integer&gt; q = B.head.next;</span><br><span class="line">        LinkListClass&lt;Integer&gt; C = <span class="keyword">new</span> <span class="title class_">LinkListClass</span>&lt;&gt;();</span><br><span class="line">        LinkNode&lt;Integer&gt; t = C.head,s;</span><br><span class="line">        <span class="keyword">while</span>(p != <span class="literal">null</span> &amp;&amp; q != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(p.data &lt; q.data)</span><br><span class="line">                p = p.next;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(q.data &lt; p.data)</span><br><span class="line">                q = q.next;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                s = <span class="keyword">new</span> <span class="title class_">LinkNode</span>&lt;Integer&gt;(p.data);</span><br><span class="line">                t.next = s;</span><br><span class="line">                t = s;</span><br><span class="line">                p = p.next;</span><br><span class="line">                q = q.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        t.next = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">return</span> C;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="双链表"   >
          <a href="#双链表" class="heading-link"><i class="fas fa-link"></i></a><a href="#双链表" class="headerlink" title="双链表"></a>双链表</h4>
      <ul>
<li>双链表结点泛型类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DLinkNode</span> &lt;E&gt;&#123; <span class="comment">// 双链表结点泛型类</span></span><br><span class="line">    E data;</span><br><span class="line">    DLinkNode&lt;E&gt; prior;</span><br><span class="line">    DLinkNode&lt;E&gt; next;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DLinkNode</span><span class="params">()</span>&#123;</span><br><span class="line">        prior = <span class="literal">null</span>;</span><br><span class="line">        next = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DLinkNode</span><span class="params">(E d)</span>&#123;</span><br><span class="line">        data = d;</span><br><span class="line">        prior = <span class="literal">null</span>;</span><br><span class="line">        next = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>双链表泛型类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DLinkListClass</span> &lt;E&gt;&#123;</span><br><span class="line">    <span class="comment">// 双链表泛型类</span></span><br><span class="line">    DLinkNode&lt;E&gt; dHead;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DLinkListClass</span><span class="params">()</span>&#123;</span><br><span class="line">        dHead = <span class="keyword">new</span> <span class="title class_">DLinkNode</span>&lt;E&gt;();</span><br><span class="line">        dHead.prior = <span class="literal">null</span>;</span><br><span class="line">        dHead.next = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 头插法: 用数组a整体建立双链表</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createListF</span><span class="params">(E[] a)</span>&#123;</span><br><span class="line">        DLinkNode&lt;E&gt; s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= a.length; i++)&#123;</span><br><span class="line">            s = <span class="keyword">new</span> <span class="title class_">DLinkNode</span>&lt;E&gt;(a[i]);</span><br><span class="line">            s.next = dHead.next;</span><br><span class="line">            <span class="keyword">if</span>(dHead.next != <span class="literal">null</span>)</span><br><span class="line">                dHead.next.prior = s;</span><br><span class="line">            dHead.next = s;</span><br><span class="line">            s.prior = dHead;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 尾插法: 由数组a整体建立双链表</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createListR</span><span class="params">(E[] a)</span>&#123;</span><br><span class="line">        DLinkNode&lt;E&gt; s,t;</span><br><span class="line">        t = dHead;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= a.length; i++)&#123;</span><br><span class="line">            s = <span class="keyword">new</span> <span class="title class_">DLinkNode</span>&lt;E&gt;(a[i]);</span><br><span class="line">            t.next = s;</span><br><span class="line">            s.prior = t;</span><br><span class="line">            t = s;</span><br><span class="line">        &#125;</span><br><span class="line">        t.next = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 求双链表的长度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">size</span><span class="params">()</span>&#123;</span><br><span class="line">        DLinkNode&lt;E&gt; p = dHead;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(p.next != <span class="literal">null</span>)&#123;</span><br><span class="line">            len++;</span><br><span class="line">            p = p.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> len;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 返回序号为i的结点</span></span><br><span class="line">    <span class="keyword">public</span> DLinkNode&lt;E&gt; <span class="title function_">getI</span><span class="params">(<span class="type">int</span> i)</span>&#123;</span><br><span class="line">        DLinkNode&lt;E&gt; p = dHead;</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(j &lt; i)&#123;</span><br><span class="line">            j++;</span><br><span class="line">            p = p.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 在线性表中序号为i的位置上插入元素e</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> i, E e)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">0</span> || i &gt; size())</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;插入: 位置i不在有效范围内&quot;</span>);</span><br><span class="line">        DLinkNode&lt;E&gt; s = <span class="keyword">new</span> <span class="title class_">DLinkNode</span>&lt;E&gt;(e);</span><br><span class="line">        DLinkNode&lt;E&gt; p = getI(i - <span class="number">1</span>);</span><br><span class="line">        s.next = p.next;</span><br><span class="line">        <span class="keyword">if</span>(p.next != <span class="literal">null</span>)</span><br><span class="line">            p.next.prior = s;</span><br><span class="line">        p.next = s;</span><br><span class="line">        s.prior = p;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 在线性表中删除序号i的位置上的元素</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(<span class="type">int</span> i)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">0</span> || i &gt; size() - <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;删除: 位置i不在有效范围内&quot;</span>);</span><br><span class="line">        DLinkNode&lt;E&gt; p = getI(i);</span><br><span class="line">        <span class="keyword">if</span>(p.next != <span class="literal">null</span>)</span><br><span class="line">            p.next.prior = p.prior;</span><br><span class="line">        p.prior.next = p.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="双链表的应用算法设计示例"   >
          <a href="#双链表的应用算法设计示例" class="heading-link"><i class="fas fa-link"></i></a><a href="#双链表的应用算法设计示例" class="headerlink" title="双链表的应用算法设计示例"></a>双链表的应用算法设计示例</h4>
      
        <h4 id="循环链表"   >
          <a href="#循环链表" class="heading-link"><i class="fas fa-link"></i></a><a href="#循环链表" class="headerlink" title="循环链表"></a>循环链表</h4>
      
        <h4 id="链表容器——LinkedList"   >
          <a href="#链表容器——LinkedList" class="heading-link"><i class="fas fa-link"></i></a><a href="#链表容器——LinkedList" class="headerlink" title="链表容器——LinkedList"></a>链表容器——LinkedList</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">trans</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;String&gt; myArrList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">        myArrList.add(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">        myArrList.add(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">        myArrList.add(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">        myArrList.add(<span class="string">&quot;D&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;ArrayList: &quot;</span> + myArrList);  <span class="comment">// 输出: ArrayList: [A, B, C, D]</span></span><br><span class="line">        System.out.println(<span class="string">&quot;ArrayList-&gt;LinkedList&quot;</span>); <span class="comment">// 输出: ArrayList-&gt;LinkedList</span></span><br><span class="line">        LinkedList&lt;String&gt; myLinkList = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;String&gt;(myArrList);</span><br><span class="line">        System.out.println(<span class="string">&quot;LinkedList: &quot;</span> + myLinkList);    <span class="comment">// 输出: LinkedList: [A, B, C, D]</span></span><br><span class="line">        System.out.println(<span class="string">&quot;清空LinkedList并添加1，2，3&quot;</span>);    <span class="comment">// 输出: 清空LinkedList并添加1，2，3</span></span><br><span class="line">        myLinkList.clear();</span><br><span class="line">        myLinkList.add(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        myLinkList.add(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">        myLinkList.add(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;LinkedList: &quot;</span> + myLinkList);    <span class="comment">// 输出: LinkedList: [1, 2, 3]</span></span><br><span class="line">        myArrList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;(myLinkList);</span><br><span class="line">        System.out.println(<span class="string">&quot;LinkedList-&gt;ArrayList&quot;</span>);    <span class="comment">// 输出: LinkedList-&gt;ArrayList</span></span><br><span class="line">        System.out.println(<span class="string">&quot;ArrayList: &quot;</span> + myArrList);    <span class="comment">// 输出: ArrayList: [1, 2, 3]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h2 id="第三章-栈和队列"   >
          <a href="#第三章-栈和队列" class="heading-link"><i class="fas fa-link"></i></a><a href="#第三章-栈和队列" class="headerlink" title="第三章 栈和队列"></a>第三章 栈和队列</h2>
      
        <h3 id="栈"   >
          <a href="#栈" class="heading-link"><i class="fas fa-link"></i></a><a href="#栈" class="headerlink" title="栈"></a>栈</h3>
      
        <h4 id="栈的定义"   >
          <a href="#栈的定义" class="heading-link"><i class="fas fa-link"></i></a><a href="#栈的定义" class="headerlink" title="栈的定义"></a>栈的定义</h4>
      <p>略</p>

        <h4 id="栈的顺序存储结构及其基本运算算法的实现"   >
          <a href="#栈的顺序存储结构及其基本运算算法的实现" class="heading-link"><i class="fas fa-link"></i></a><a href="#栈的顺序存储结构及其基本运算算法的实现" class="headerlink" title="栈的顺序存储结构及其基本运算算法的实现"></a>栈的顺序存储结构及其基本运算算法的实现</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SqStackClass</span> &lt;E&gt;&#123;  <span class="comment">// 顺序栈泛型类</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">initCapacity</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> capacity;</span><br><span class="line">    <span class="keyword">private</span> E[] data;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> top;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SqStackClass</span><span class="params">()</span> &#123; <span class="comment">// 构造方法，实现data和top的初始化</span></span><br><span class="line">        data = (E[])<span class="keyword">new</span> <span class="title class_">Object</span>[initCapacity];</span><br><span class="line">        capacity = initCapacity;</span><br><span class="line">        top = -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateCapacity</span><span class="params">(<span class="type">int</span> newCapacity)</span>&#123;   <span class="comment">// 改变顺序栈的容量为newCapacity</span></span><br><span class="line">        E[] newData = (E[])<span class="keyword">new</span> <span class="title class_">Object</span>[newCapacity];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= top; i++)&#123;</span><br><span class="line">            newData[i] = data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        capacity = newCapacity;</span><br><span class="line">        data = newData;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 顺序栈的基本运算算法</span></span><br><span class="line">     <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">empty</span><span class="params">()</span>&#123;    <span class="comment">// 判断栈是否为空</span></span><br><span class="line">        <span class="type">return</span> <span class="variable">top</span> <span class="operator">=</span>= -<span class="number">1</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">push</span><span class="params">(E e)</span>&#123;  <span class="comment">// 元素e进栈</span></span><br><span class="line">        <span class="keyword">if</span>(top == capacity - <span class="number">1</span>)</span><br><span class="line">            updateCapacity(<span class="number">2</span> * (top + <span class="number">1</span>));</span><br><span class="line">        top++;</span><br><span class="line">        data[top] = e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> E <span class="title function_">pop</span><span class="params">()</span>&#123; <span class="comment">// 出栈操作</span></span><br><span class="line">        <span class="keyword">if</span>(empty())</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;栈空&quot;</span>);</span><br><span class="line">        <span class="type">E</span> <span class="variable">e</span> <span class="operator">=</span> (E)data[top];</span><br><span class="line">        top--;</span><br><span class="line">        <span class="keyword">if</span>(capacity &gt; initCapacity &amp;&amp; top + <span class="number">1</span> == capacity / <span class="number">4</span>)</span><br><span class="line">            updateCapacity(capacity / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> E <span class="title function_">peek</span><span class="params">()</span>&#123;    <span class="comment">// 取栈顶元素</span></span><br><span class="line">        <span class="keyword">if</span>(empty())</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;栈空&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> (E)data[top];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<blockquote>
<p>栈的各种基本运算算法的时间复杂度均为O(1)</p>
</blockquote>

        <h4 id="顺序栈的应用算法设计示例"   >
          <a href="#顺序栈的应用算法设计示例" class="heading-link"><i class="fas fa-link"></i></a><a href="#顺序栈的应用算法设计示例" class="headerlink" title="顺序栈的应用算法设计示例"></a>顺序栈的应用算法设计示例</h4>
      <ul>
<li>设计一个算法，利用顺序栈检查用户输入的表达式中括号是否配对，并用相关数据进行测试</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Exam3_4</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isMatch</span><span class="params">(String str)</span>&#123;  <span class="comment">// 判断算法</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">char</span> e,x;</span><br><span class="line">        SqStackClass&lt;Character&gt; st = <span class="keyword">new</span> <span class="title class_">SqStackClass</span>&lt;Character&gt;();</span><br><span class="line">        <span class="keyword">while</span>(i &lt; str.length())&#123;</span><br><span class="line">            e = str.charAt(i);</span><br><span class="line">            <span class="keyword">if</span>(e == <span class="string">&#x27;(&#x27;</span> || e == <span class="string">&#x27;[&#x27;</span> || e == <span class="string">&#x27;&#123;&#x27;</span>)</span><br><span class="line">                st.push(e);</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(e == <span class="string">&#x27;)&#x27;</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(st.empty()) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">if</span>(st.peek() != <span class="string">&#x27;(&#x27;</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    st.pop();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(e == <span class="string">&#x27;]&#x27;</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(st.empty()) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">if</span>(st.peek() != <span class="string">&#x27;[&#x27;</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    st.pop();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(e == <span class="string">&#x27;&#125;&#x27;</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(st.empty()) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">if</span>(st.peek() != <span class="string">&#x27;&#123;&#x27;</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    st.pop();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(st.empty()) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;测试1&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;([)]&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(isMatch(str))&#123;</span><br><span class="line">            System.out.println(str + <span class="string">&quot;中括号是匹配的&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(str + <span class="string">&quot;中括号不匹配&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;测试2&quot;</span>);</span><br><span class="line">        str = <span class="string">&quot;([])&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(isMatch(str))&#123;</span><br><span class="line">            System.out.println(str + <span class="string">&quot;中括号是匹配的&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(str + <span class="string">&quot;中括号不匹配&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>设计一个算法，利用顺序栈判断用户输入的字符串表达式是否为回文，并用相关数据进行测试</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Exam3_5</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isPalindrome</span><span class="params">(String str)</span>&#123;</span><br><span class="line">        SqStackClass&lt;Character&gt; st = <span class="keyword">new</span> <span class="title class_">SqStackClass</span>();    <span class="comment">// 建立一个顺序栈</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> str.length();</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; n / <span class="number">2</span>)&#123;</span><br><span class="line">            st.push(str.charAt(i));</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(st.pop() != str.charAt(i))</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;测试1&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;abcba&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(isPalindrome(str))&#123;</span><br><span class="line">            System.out.println(str + <span class="string">&quot;是回文&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(str + <span class="string">&quot;不是回文&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;测试2&quot;</span>);</span><br><span class="line">        str = <span class="string">&quot;1221&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(isPalindrome(str))&#123;</span><br><span class="line">            System.out.println(str + <span class="string">&quot;是回文&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(str + <span class="string">&quot;不是回文&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>有1~n的n个元素，通过一个栈可以产生多种出栈序列，设计一个算法判断序列b是否为一个合法的出栈序列，给出操作过程，并用相关数据进行测试</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Exam3_6</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">String</span> <span class="variable">op</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> cnt;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isSerial</span><span class="params">(<span class="type">int</span>[] b)</span>&#123;</span><br><span class="line">        <span class="type">int</span> i,j,n = b.length;</span><br><span class="line">        Integer e;</span><br><span class="line">        <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">        SqStackClass&lt;Integer&gt; st = <span class="keyword">new</span> <span class="title class_">SqStackClass</span>&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            a[i] = i + <span class="number">1</span>;</span><br><span class="line">        i = <span class="number">0</span>;</span><br><span class="line">        j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; n &amp;&amp; j &lt; n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(st.empty() || (st.peek() != b[j]))&#123;</span><br><span class="line">                st.push(a[i]);</span><br><span class="line">                op += <span class="string">&quot; 元素&quot;</span> + a[i] + <span class="string">&quot;进栈\n&quot;</span>;</span><br><span class="line">                i++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                e = st.pop();</span><br><span class="line">                op += <span class="string">&quot; 元素&quot;</span> + e + <span class="string">&quot;出栈\n&quot;</span>;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(!st.empty() &amp;&amp; st.peek() == b[j])&#123;</span><br><span class="line">            e = st.pop();</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j == n) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">(<span class="type">int</span>[] b)</span>&#123;  <span class="comment">// 求解算法</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; b.length; i++)</span><br><span class="line">            System.out.print(<span class="string">&quot; &quot;</span> + b[i]);</span><br><span class="line">        <span class="keyword">if</span>(isSerial(b))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;是合法的出栈序列&quot;</span>);</span><br><span class="line">            System.out.println(op);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;不是合法的出栈序列&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;测试1&quot;</span>);</span><br><span class="line">        <span class="type">int</span>[] b = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        solve(b);</span><br><span class="line">        System.out.println(<span class="string">&quot;测试2&quot;</span>);</span><br><span class="line">        <span class="type">int</span>[] c = &#123;<span class="number">4</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>&#125;;</span><br><span class="line">        solve(c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="栈的链式存储结构及其基本运算算法的实现"   >
          <a href="#栈的链式存储结构及其基本运算算法的实现" class="heading-link"><i class="fas fa-link"></i></a><a href="#栈的链式存储结构及其基本运算算法的实现" class="headerlink" title="栈的链式存储结构及其基本运算算法的实现"></a>栈的链式存储结构及其基本运算算法的实现</h4>
      <ul>
<li>链栈结点泛型类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkNode</span> &lt;E&gt;&#123;  <span class="comment">// 链栈结点泛型类</span></span><br><span class="line">    E data;</span><br><span class="line">    LinkNode&lt;E&gt; next;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LinkNode</span><span class="params">()</span>&#123;</span><br><span class="line">        next = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LinkNode</span><span class="params">(E d)</span>&#123;</span><br><span class="line">        data = d;</span><br><span class="line">        next = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>链栈泛型类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkStackClass</span> &lt;E&gt;&#123;    <span class="comment">// 链栈泛型类</span></span><br><span class="line">    LinkNode&lt;E&gt; head;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LinkStackClass</span><span class="params">()</span>&#123;</span><br><span class="line">        head = <span class="keyword">new</span> <span class="title class_">LinkNode</span>&lt;E&gt;();</span><br><span class="line">        head.next = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 链栈的基本运算算法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">empty</span><span class="params">()</span>&#123; <span class="comment">// 判断栈是否为空</span></span><br><span class="line">        <span class="keyword">return</span> head.next == <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">push</span><span class="params">(E e)</span>&#123;  <span class="comment">// 元素e进栈</span></span><br><span class="line">        LinkNode&lt;E&gt; s = <span class="keyword">new</span> <span class="title class_">LinkNode</span>&lt;E&gt;(e);</span><br><span class="line">        s.next = head.next;</span><br><span class="line">        head.next = s;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> E <span class="title function_">pop</span><span class="params">()</span>&#123; <span class="comment">// 出栈操作</span></span><br><span class="line">        <span class="keyword">if</span>(empty())</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;栈空&quot;</span>);</span><br><span class="line">        <span class="type">E</span> <span class="variable">e</span> <span class="operator">=</span> (E)head.next.data;</span><br><span class="line">        head.next = head.next.next;</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> E <span class="title function_">peek</span><span class="params">()</span>&#123;    <span class="comment">// 取栈顶元素</span></span><br><span class="line">        <span class="keyword">if</span>(empty())</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;栈空&quot;</span>);</span><br><span class="line">        <span class="type">E</span> <span class="variable">e</span> <span class="operator">=</span> (E)head.next.data;</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="链栈的应用算法设计示例"   >
          <a href="#链栈的应用算法设计示例" class="heading-link"><i class="fas fa-link"></i></a><a href="#链栈的应用算法设计示例" class="headerlink" title="链栈的应用算法设计示例"></a>链栈的应用算法设计示例</h4>
      <ul>
<li>设计一个算法，逆置链栈st中的所有元素，如链栈st中元素从栈顶到栈底为(1,2,3,4),逆置后为(4,3,2,1)</li>
</ul>
<p>(解题思路)出栈st中   BVFDEWQ所有的元素，并保存到一个数组a中，再将数组a中的所有元素依次进栈</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 链栈逆置算法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LinkStackClass&lt;Integer&gt; <span class="title function_">reverse</span><span class="params">(LinkStackClass&lt;Integer&gt; st)</span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MaxSize</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">        <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[MaxSize];</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(!st.empty())</span><br><span class="line">        &#123;</span><br><span class="line">            a[i] = st.pop();</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">            st.push(a[j]);</span><br><span class="line">        <span class="keyword">return</span> st;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>用不带头结点的单链表作为链栈，设计四个基本运算算法</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkStackClass1</span> &lt;E&gt;&#123;   <span class="comment">//  链栈泛型类</span></span><br><span class="line">    LinkNode&lt;E&gt; head;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LinkStackClass1</span><span class="params">()</span>&#123;</span><br><span class="line">        head = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不带头结点的链栈的基本运算算法</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">empty</span><span class="params">()</span>&#123; <span class="comment">// 判断栈是否为空</span></span><br><span class="line">        <span class="type">return</span> <span class="variable">head</span> <span class="operator">=</span>= <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">push</span><span class="params">(E e)</span>&#123;  <span class="comment">// 元素e进栈</span></span><br><span class="line">        LinkNode&lt;E&gt; s = <span class="keyword">new</span> <span class="title class_">LinkNode</span>&lt;E&gt;(e);</span><br><span class="line">        s.next = head;</span><br><span class="line">        head = s;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> E <span class="title function_">pop</span><span class="params">()</span>&#123; <span class="comment">// 出栈操作</span></span><br><span class="line">        <span class="keyword">if</span>(empty())</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;栈空&quot;</span>);</span><br><span class="line">        <span class="type">E</span> <span class="variable">e</span> <span class="operator">=</span> (E)head.data;</span><br><span class="line">        head = head.next;</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> E <span class="title function_">peek</span><span class="params">()</span>&#123;    <span class="comment">// 取栈顶元素</span></span><br><span class="line">        <span class="keyword">if</span>(empty())</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;栈空&quot;</span>);</span><br><span class="line">        <span class="type">E</span> <span class="variable">e</span> <span class="operator">=</span> (E)head.data;</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="Java中的栈容器——Stack"   >
          <a href="#Java中的栈容器——Stack" class="heading-link"><i class="fas fa-link"></i></a><a href="#Java中的栈容器——Stack" class="headerlink" title="Java中的栈容器——Stack"></a>Java中的栈容器——Stack<E></h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StackApp</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Stack&lt;String&gt; st = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;String&gt;(); <span class="comment">// 建立String栈对象st</span></span><br><span class="line">        st.push(<span class="string">&quot;a&quot;</span>);   <span class="comment">// 进栈顺序: a,b,c,d,e</span></span><br><span class="line">        st.push(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">        st.push(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">        st.push(<span class="string">&quot;d&quot;</span>);</span><br><span class="line">        st.push(<span class="string">&quot;e&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;empty: &quot;</span> + st.empty()); <span class="comment">// 输出: false</span></span><br><span class="line">        System.out.println(<span class="string">&quot;peek: &quot;</span> + st.peek());   <span class="comment">//输出: e</span></span><br><span class="line">        System.out.println(<span class="string">&quot;search(Object o): &quot;</span> + st.search(<span class="string">&quot;a&quot;</span>));  <span class="comment">// 输出: 5</span></span><br><span class="line">        System.out.println(<span class="string">&quot;search(Object o): &quot;</span> + st.search(<span class="string">&quot;e&quot;</span>));  <span class="comment">// 输出: 1</span></span><br><span class="line">        System.out.println(<span class="string">&quot;search(Object o): &quot;</span> + st.search(<span class="string">&quot;no&quot;</span>));  <span class="comment">// 输出: -1</span></span><br><span class="line">        <span class="keyword">while</span>(!st.empty())  <span class="comment">// 出栈顺序: e,d,c,b,a</span></span><br><span class="line">            System.out.println(st.pop() + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;empty: &quot;</span> + st.empty()); <span class="comment">// 输出: true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="栈的综合应用"   >
          <a href="#栈的综合应用" class="heading-link"><i class="fas fa-link"></i></a><a href="#栈的综合应用" class="headerlink" title="栈的综合应用"></a>栈的综合应用</h4>
      
        <h2 id="第四章-串"   >
          <a href="#第四章-串" class="heading-link"><i class="fas fa-link"></i></a><a href="#第四章-串" class="headerlink" title="第四章 串"></a>第四章 串</h2>
      
        <h3 id="串的基本概念"   >
          <a href="#串的基本概念" class="heading-link"><i class="fas fa-link"></i></a><a href="#串的基本概念" class="headerlink" title="串的基本概念"></a>串的基本概念</h3>
      
        <h4 id="什么是串"   >
          <a href="#什么是串" class="heading-link"><i class="fas fa-link"></i></a><a href="#什么是串" class="headerlink" title="什么是串"></a>什么是串</h4>
      <p>略</p>

        <h4 id="串的抽象数据类型"   >
          <a href="#串的抽象数据类型" class="heading-link"><i class="fas fa-link"></i></a><a href="#串的抽象数据类型" class="headerlink" title="串的抽象数据类型"></a>串的抽象数据类型</h4>
      <p>略</p>

        <h3 id="串的存储结构"   >
          <a href="#串的存储结构" class="heading-link"><i class="fas fa-link"></i></a><a href="#串的存储结构" class="headerlink" title="串的存储结构"></a>串的存储结构</h3>
      
        <h4 id="串的顺序存储结构——顺序串"   >
          <a href="#串的顺序存储结构——顺序串" class="heading-link"><i class="fas fa-link"></i></a><a href="#串的顺序存储结构——顺序串" class="headerlink" title="串的顺序存储结构——顺序串"></a>串的顺序存储结构——顺序串</h4>
      <ul>
<li>顺序串类与串的基本运算算法</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SqStringClass</span> &lt;E&gt;&#123; <span class="comment">// 顺序串类</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MaxSize</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="type">char</span>[] data;</span><br><span class="line">    <span class="type">int</span> size;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SqStringClass</span><span class="params">()</span>&#123;</span><br><span class="line">        data = <span class="keyword">new</span> <span class="title class_">char</span>[MaxSize];</span><br><span class="line">        size = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 串的基本运算算法</span></span><br><span class="line">    <span class="keyword">public</span> SqStringClass <span class="title function_">subStr</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span>&#123;  <span class="comment">// 求子串</span></span><br><span class="line">        <span class="type">SqStringClass</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqStringClass</span>();</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">0</span> || i &gt;= size || j &lt; <span class="number">0</span> || i + j &gt; size)</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> i; k &lt; i + j; k++)</span><br><span class="line">            s.data[k - i] = data[k];</span><br><span class="line">        s.size = j;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)设计一个算法Strcmp(s,t),以字典顺序比较两个英文字母串s和t的大小，假设两个串均以顺序串存储</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">Strcmp</span><span class="params">(SqStringClass s,SqStringClass t)</span>&#123;</span><br><span class="line">        <span class="type">int</span> comlen;</span><br><span class="line">        <span class="keyword">if</span>(s.size() &lt; t.size())</span><br><span class="line">            comlen = s.size();</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            comlen = t.size();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; comlen; i++)</span><br><span class="line">            <span class="keyword">if</span>(s.data[i] &gt; t.data[i])</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s.data[i] &lt; t.data[i])</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(s.size() == t.size())</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s.size() &gt; t.size())</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure>


        <h4 id="串的链式存储结构——链串"   >
          <a href="#串的链式存储结构——链串" class="heading-link"><i class="fas fa-link"></i></a><a href="#串的链式存储结构——链串" class="headerlink" title="串的链式存储结构——链串"></a>串的链式存储结构——链串</h4>
      <ul>
<li>链串结点类</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkNode</span> &#123; <span class="comment">// 链串结点类型</span></span><br><span class="line">    <span class="type">char</span> data;</span><br><span class="line">    LinkNode next;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LinkNode</span><span class="params">()</span>&#123;</span><br><span class="line">        next = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LinkNode</span><span class="params">(<span class="type">char</span> ch)</span>&#123;</span><br><span class="line">        data = ch;</span><br><span class="line">        next = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>链串类与串的基本运算算法</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkStringClass</span> &#123;  <span class="comment">// 链串类</span></span><br><span class="line">    LinkNode head;</span><br><span class="line">    <span class="type">int</span> size;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LinkStringClass</span><span class="params">()</span>&#123;</span><br><span class="line">        head = <span class="keyword">new</span> <span class="title class_">LinkNode</span>();</span><br><span class="line">        size = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 串的基本运算算法</span></span><br><span class="line">    <span class="keyword">public</span> LinkStringClass <span class="title function_">insStr</span><span class="params">(<span class="type">int</span> i,LinkStringClass t)</span>&#123;    <span class="comment">// 串插入</span></span><br><span class="line">        <span class="type">LinkStringClass</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinkStringClass</span>();</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">0</span> || i &gt; size)</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        <span class="type">LinkNode</span> <span class="variable">p</span> <span class="operator">=</span> head.next,p1 = t.head.next,q,r;</span><br><span class="line">        r = s.head;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; i; k++)&#123;</span><br><span class="line">            q = <span class="keyword">new</span> <span class="title class_">LinkNode</span>(p.data);</span><br><span class="line">            r.next = q;</span><br><span class="line">            r = q;</span><br><span class="line">            p = p.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(p1 != <span class="literal">null</span>)&#123;</span><br><span class="line">            q = <span class="keyword">new</span> <span class="title class_">LinkNode</span>(p1.data);</span><br><span class="line">            r.next = q;</span><br><span class="line">            r = q;</span><br><span class="line">            p1 = p1.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(p != <span class="literal">null</span>)&#123;</span><br><span class="line">            q = <span class="keyword">new</span> <span class="title class_">LinkNode</span>(p.data);</span><br><span class="line">            r.next = q;</span><br><span class="line">            r = q;</span><br><span class="line">            p = p.next;</span><br><span class="line">        &#125;</span><br><span class="line">        s.size = size + t.size;</span><br><span class="line">        r.next = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)设计一个算法StrEqual(s,t)比较两个链串s、t是否相等</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">StrEqual</span><span class="params">(LinkStringClass s, LinkStringClass t)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(s.size != t.size)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">LinkNode</span> <span class="variable">p</span> <span class="operator">=</span> s.head.next;</span><br><span class="line">        <span class="type">LinkNode</span> <span class="variable">q</span> <span class="operator">=</span> t.head.next;</span><br><span class="line">        <span class="keyword">while</span>(p != <span class="literal">null</span> &amp;&amp; q != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(p.data != q.data)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            p = p.next;</span><br><span class="line">            q = q.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>(例题)以链串为串的存储结构，设计一个算法把一个链串s中最先出现的子串”ab”改为”xyz”，找到并成功替换返回true，否则返回false</li>
</ul>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">replace</span><span class="params">(LinkStringClass s)</span>&#123;</span><br><span class="line">        <span class="type">LinkNode</span> <span class="variable">p</span> <span class="operator">=</span> s.head.next,q;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">find</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">while</span>(p.next != <span class="literal">null</span> &amp;&amp; !find)&#123;</span><br><span class="line">            <span class="keyword">if</span>(p.data == <span class="string">&#x27;a&#x27;</span> &amp;&amp; p.next.data == <span class="string">&#x27;b&#x27;</span>)&#123;</span><br><span class="line">                p.data = <span class="string">&#x27;x&#x27;</span>;</span><br><span class="line">                p.next.data = <span class="string">&#x27;z&#x27;</span>;</span><br><span class="line">                q = <span class="keyword">new</span> <span class="title class_">LinkNode</span>(<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">                q.next = p.next;</span><br><span class="line">                p.next = q;</span><br><span class="line">                find = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> p = p.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> find;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="Java中的字符串"   >
          <a href="#Java中的字符串" class="heading-link"><i class="fas fa-link"></i></a><a href="#Java中的字符串" class="headerlink" title="Java中的字符串"></a>Java中的字符串</h3>
      
        <h4 id="String"   >
          <a href="#String" class="heading-link"><i class="fas fa-link"></i></a><a href="#String" class="headerlink" title="String"></a>String</h4>
      <p>略</p>

        <h4 id="StringBuffer"   >
          <a href="#StringBuffer" class="heading-link"><i class="fas fa-link"></i></a><a href="#StringBuffer" class="headerlink" title="StringBuffer"></a>StringBuffer</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">tmp</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> s1;</span><br><span class="line">        s1 += <span class="string">&quot;123&quot;</span>;</span><br><span class="line">        System.out.println(s1 == s2);   <span class="comment">// 输出: false</span></span><br><span class="line">        System.out.println(<span class="string">&quot;s1: &quot;</span> + s1);    <span class="comment">// 输出: s1: abc123</span></span><br><span class="line">        System.out.println(<span class="string">&quot;s2: &quot;</span> + s2);    <span class="comment">// 输出: s2: abc</span></span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">s4</span> <span class="operator">=</span> s3;</span><br><span class="line">        s3.append(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        System.out.println(s3 == s4);   <span class="comment">// 输出: true</span></span><br><span class="line">        System.out.println(<span class="string">&quot;s3: &quot;</span> + s3);    <span class="comment">// 输出: s3: abc123</span></span><br><span class="line">        System.out.println(<span class="string">&quot;s4: &quot;</span> + s4);    <span class="comment">// 输出: s4: abc123</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h3 id="串的模式匹配"   >
          <a href="#串的模式匹配" class="heading-link"><i class="fas fa-link"></i></a><a href="#串的模式匹配" class="headerlink" title="串的模式匹配"></a>串的模式匹配</h3>
      
        <h4 id="Brute-Force算法"   >
          <a href="#Brute-Force算法" class="heading-link"><i class="fas fa-link"></i></a><a href="#Brute-Force算法" class="headerlink" title="Brute-Force算法"></a>Brute-Force算法</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></div></figure>


        <h4 id="KMP算法"   >
          <a href="#KMP算法" class="heading-link"><i class="fas fa-link"></i></a><a href="#KMP算法" class="headerlink" title="KMP算法"></a>KMP算法</h4>
      
        <h2 id="第五章-递归"   >
          <a href="#第五章-递归" class="heading-link"><i class="fas fa-link"></i></a><a href="#第五章-递归" class="headerlink" title="第五章 递归"></a>第五章 递归</h2>
      ]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>概率论笔记</title>
    <url>/2024/10/16/%E6%A6%82%E7%8E%87%E8%AE%BA%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[
        <h2 id="第一节-随机事件与概率"   >
          <a href="#第一节-随机事件与概率" class="heading-link"><i class="fas fa-link"></i></a><a href="#第一节-随机事件与概率" class="headerlink" title="第一节 随机事件与概率"></a>第一节 随机事件与概率</h2>
      
        <h3 id="一、随机试验"   >
          <a href="#一、随机试验" class="heading-link"><i class="fas fa-link"></i></a><a href="#一、随机试验" class="headerlink" title="一、随机试验"></a>一、随机试验</h3>
      <ul>
<li>为了研究随机现象的统计规律性，就要对客观事物进行观察，观察的过程叫<strong>随机试验</strong> <ul>
<li>（1）在相同的条件下试验可以重复进行；</li>
<li>（2）每次试验的结果不止一种，但是试验之前必须明确试验的所有可能结果；</li>
<li>（3）每次试验将会出现什么样的结果是事先无法预知的．</li>
</ul>
</li>
</ul>

        <h3 id="二、样本空间"   >
          <a href="#二、样本空间" class="heading-link"><i class="fas fa-link"></i></a><a href="#二、样本空间" class="headerlink" title="二、样本空间"></a>二、样本空间</h3>
      <ul>
<li>随机试验的一切可能结果组成的集合称为<strong>样本空间</strong>，记为Ω={ω}<ul>
<li>其中ω表示试验的每一个可能结果，又称为<strong>样本点</strong> </li>
</ul>
</li>
</ul>

        <h4 id="三、随机事件"   >
          <a href="#三、随机事件" class="heading-link"><i class="fas fa-link"></i></a><a href="#三、随机事件" class="headerlink" title="三、随机事件"></a>三、随机事件</h4>
      <ul>
<li>这些在一次试验中可能出现，也可能不出现的一类结果称为<strong>随机事件</strong>，简称为<strong>事件</strong></li>
<li>随机事件通常用大写字母A，B，C，…表示．</li>
</ul>
<p>-注意：</p>
<ol>
<li>任一随机事件A是样本空间Ω的一个子集．</li>
<li>当试验的结果ω属于该子集时，就说事件A发生了．</li>
<li>仅含一个样本点的随机事件称为<strong>基本事件</strong>．</li>
<li>样本空间Ω也是自己的一个子集，所以它也称为一个事件．由于Ω包含所有可能的试验结果，所以Ω在每一次试验中一定发生，又称为<strong>必然事件</strong>．</li>
<li>空集∅也是样本空间Ω的一个子集，所以它也称为一个事件．由于∅中不包含任何元素，所以∅在每一次试验中一定不发生，又称为<strong>不可能事件</strong>．</li>
</ol>

        <h3 id="四、随机事件间的关系与运算"   >
          <a href="#四、随机事件间的关系与运算" class="heading-link"><i class="fas fa-link"></i></a><a href="#四、随机事件间的关系与运算" class="headerlink" title="四、随机事件间的关系与运算"></a>四、随机事件间的关系与运算</h3>
      <ol>
<li>关系</li>
</ol>
<ul>
<li>包含关系：<ul>
<li>事件A发生必然导致事件B发生．</li>
</ul>
</li>
<li>相等关系：<ul>
<li>事件A发生必然导致事件B发生，且B发生必然导致A发生，即A与B是同一个事件．</li>
</ul>
</li>
<li>互斥关系：<ul>
<li>事件A与事件B不可能同时发生．</li>
</ul>
</li>
</ul>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">对立事件一定是互斥事件，成立。</span><br><span class="line">反之，不成立。</span><br></pre></td></tr></table></div></figure>



<ol start="2">
<li>运算</li>
</ol>
<ul>
<li>并（A∪B）[也称和事件]：<ul>
<li>事件A与B中至少有一个发生．</li>
</ul>
</li>
<li>交（A∩B/AB）[也称积事件]：<ul>
<li>事件A与B同时发生．</li>
</ul>
</li>
<li>差（A-B）：<ul>
<li>事件A发生且B不发生．</li>
</ul>
</li>
<li>余（）[也称对立事件或逆事件]：<ul>
<li>事件A不发生．</li>
</ul>
</li>
</ul>
<ol start="3">
<li>事件的运算性质</li>
</ol>
<ul>
<li>交换律</li>
<li>结合律</li>
<li>分配律</li>
<li>对偶律</li>
</ul>

        <h2 id="第二节-集合论"   >
          <a href="#第二节-集合论" class="heading-link"><i class="fas fa-link"></i></a><a href="#第二节-集合论" class="headerlink" title="第二节 集合论"></a>第二节 集合论</h2>
      
        <h3 id="一、概率函数"   >
          <a href="#一、概率函数" class="heading-link"><i class="fas fa-link"></i></a><a href="#一、概率函数" class="headerlink" title="一、概率函数"></a>一、概率函数</h3>
      <ul>
<li>P(A)=1/5</li>
</ul>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">P，概率函数</span><br><span class="line">A，事件</span><br><span class="line"></span><br><span class="line">概率函数的自变数是：事件</span><br><span class="line">其中，事件是一种集合</span><br></pre></td></tr></table></div></figure>




        <h3 id="二、集合论名词"   >
          <a href="#二、集合论名词" class="heading-link"><i class="fas fa-link"></i></a><a href="#二、集合论名词" class="headerlink" title="二、集合论名词"></a>二、集合论名词</h3>
      <ul>
<li>元素 Element</li>
<li>集合 Set<ul>
<li>S={1, 2, 3}</li>
</ul>
</li>
<li>子集合 Subset</li>
<li>全集（宇集） Universal Set</li>
<li>空集 Empty Set</li>
<li>交集 Intersection</li>
<li>并集 Union</li>
<li>补集 Complement</li>
<li>差集 Difference</li>
<li>不相交 Disjiont</li>
<li>互斥 Mutually Exclusive</li>
</ul>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">1、不相交：两个集合没有重叠部分</span><br><span class="line">2、互斥：（1）建立在不相交的定义之上；</span><br><span class="line">		（2）一组集合中任选两个集合都不相交，则这组集合互斥</span><br></pre></td></tr></table></div></figure>




        <h3 id="三、德摩根定理-De-Morgan’s-Law"   >
          <a href="#三、德摩根定理-De-Morgan’s-Law" class="heading-link"><i class="fas fa-link"></i></a><a href="#三、德摩根定理-De-Morgan’s-Law" class="headerlink" title="三、德摩根定理 De Morgan’s Law"></a>三、德摩根定理 De Morgan’s Law</h3>
      
        <h3 id="概率论名词"   >
          <a href="#概率论名词" class="heading-link"><i class="fas fa-link"></i></a><a href="#概率论名词" class="headerlink" title="概率论名词"></a>概率论名词</h3>
      <ul>
<li>实验 Experiment</li>
</ul>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">一个概率实验包含：</span><br><span class="line">（1）步骤 Procedures；</span><br><span class="line">（2）模型 Model；</span><br><span class="line">（3）观察 Observations；</span><br></pre></td></tr></table></div></figure>

<ul>
<li>结果 Outcome</li>
<li><strong>样本空间 Sample Space</strong> : 概率实验中所有可能结果的集合</li>
<li><strong>事件 Event</strong> ：对于实验结果的某种叙述<ul>
<li>概率就是讲实验<strong>结果</strong>符合某种<strong>事件</strong>的机会有多大</li>
</ul>
</li>
</ul>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">样本空间=&#123;事件1，事件2，... ，事件n&#125;</span><br><span class="line"></span><br><span class="line">其中，事件=&#123;结果1，结果2，... ，结果n&#125;</span><br></pre></td></tr></table></div></figure>

<ul>
<li>事件空间 Event Space<ul>
<li>定义：包含所有事件的集合</li>
</ul>
</li>
</ul>

        <h3 id="概率公理-Axiom-of-Probability"   >
          <a href="#概率公理-Axiom-of-Probability" class="heading-link"><i class="fas fa-link"></i></a><a href="#概率公理-Axiom-of-Probability" class="headerlink" title="概率公理 Axiom of  Probability"></a>概率公理 Axiom of  Probability</h3>
      
        <h4 id="概率性质1"   >
          <a href="#概率性质1" class="heading-link"><i class="fas fa-link"></i></a><a href="#概率性质1" class="headerlink" title="概率性质1"></a>概率性质1</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">（1）对任何事件A而言，P(A)≥0；[非负]</span><br><span class="line">（2）P（S）=1；[规范]</span><br><span class="line">（3）事件A1,A2,...An互斥，则：</span><br><span class="line">	P（A1∪A2∪...∪An）=P(A1)+P(A2)+...+P(An)；[可列可加]</span><br></pre></td></tr></table></div></figure>


        <h4 id="概率性质2"   >
          <a href="#概率性质2" class="heading-link"><i class="fas fa-link"></i></a><a href="#概率性质2" class="headerlink" title="概率性质2"></a>概率性质2</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">(1) P（∅）=0； （*）</span><br><span class="line">(2) P(A)=P(A-B)+P(AB)；</span><br><span class="line">(3)P(A∪B)=P(A)+P(B)-P(A∩B);</span><br><span class="line">(4)若C1,C2,...,Cn=S，则对任何事件A：P(A)=P(A∩C1)+P(A∩C2)+...+P(A∩Cn);</span><br></pre></td></tr></table></div></figure>

<p><span class="exturl"><a class="exturl__link"   href="https://www.bilibili.com/video/BV1Zy4y1J7vM?p=10" >(4)“切面包”定理：P10</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
<p>（*）证明：</p>
<p>因为S∩∅=∅，所以S与∅互斥</p>
<p>又S=S∪∅，</p>
<p>则P(S)=<strong>P(S∪∅)=P(S)+P(∅)</strong> [ref. 性质3]</p>
<p>所以，P(∅)=0</p>

        <h3 id="条件概率-Conditional-Probability"   >
          <a href="#条件概率-Conditional-Probability" class="heading-link"><i class="fas fa-link"></i></a><a href="#条件概率-Conditional-Probability" class="headerlink" title="条件概率 Conditional Probability"></a>条件概率 Conditional Probability</h3>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">P(X | Y)：</span><br><span class="line">X，对象事件</span><br><span class="line">Y，条件（已发生的事件）</span><br></pre></td></tr></table></div></figure>

<ul>
<li><p>延伸：</p>
<p>​        P(X | Y) = P(X∩Y) / P(Y)</p>
</li>
<li><p>对任何事件X及任何条件事件Y，有：</p>
<ul>
<li>P(X | Y) ≥ 0；</li>
<li>P(Y | Y) = 1；</li>
<li>A，B互斥，P(A∪B | Y) = P(A | Y) + P(B | Y) ;</li>
</ul>
</li>
</ul>

        <h3 id="Total-Probability定理"   >
          <a href="#Total-Probability定理" class="heading-link"><i class="fas fa-link"></i></a><a href="#Total-Probability定理" class="headerlink" title="Total Probability定理"></a>Total Probability定理</h3>
      <ul>
<li><p>若C1，C2，…，Cn互斥，且C1∪C2∪…∪Cn=S,</p>
<p>则对任意事件A，有：</p>
<p>P(A) = P(A | C1)P(C1)+ P(A | C2)P(C2)+…+ P(A | Cn)P(Cn)</p>
</li>
</ul>

        <h3 id="贝叶斯定理-Bayes’-Rule"   >
          <a href="#贝叶斯定理-Bayes’-Rule" class="heading-link"><i class="fas fa-link"></i></a><a href="#贝叶斯定理-Bayes’-Rule" class="headerlink" title="贝叶斯定理 Bayes’ Rule"></a>贝叶斯定理 Bayes’ Rule</h3>
      
        <h3 id="概率的独立性"   >
          <a href="#概率的独立性" class="heading-link"><i class="fas fa-link"></i></a><a href="#概率的独立性" class="headerlink" title="概率的独立性"></a>概率的独立性</h3>
      <ul>
<li>独立事件</li>
</ul>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">(1)若两事件A、B的概率满足：</span><br><span class="line">P（A∩B）=P(A)P(B)，</span><br><span class="line">则A、B两事件称为概率上的独立事件;</span><br><span class="line"></span><br><span class="line">(2)P(A | B) = P(A);</span><br></pre></td></tr></table></div></figure>

<ul>
<li>多事件独立</li>
</ul>

        <h3 id="Fundamental-Principle-of-Counting"   >
          <a href="#Fundamental-Principle-of-Counting" class="heading-link"><i class="fas fa-link"></i></a><a href="#Fundamental-Principle-of-Counting" class="headerlink" title="Fundamental Principle of Counting"></a>Fundamental Principle of Counting</h3>
      <ul>
<li><p>判断方式：(1)所有物品是否可以区分；</p>
<p>​                (2)抽中的物品是否可以放回；</p>
<p>​                (3)抽选顺序是否有差异；</p>
</li>
<li><p>排列 Permutation</p>
</li>
<li><p>组合 Combination</p>
</li>
</ul>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">Q：若有n个数，从中取k个，共有多少结果？</span><br><span class="line">A： (n!)/((n-k)!k!).</span><br><span class="line"></span><br><span class="line">ref:二项式定理的二项式系数 Binomial coefficient</span><br></pre></td></tr></table></div></figure>

<ul>
<li>多项组合 Multinomial</li>
</ul>

        <h3 id="随机变量-Random-Variable（R-V-）"   >
          <a href="#随机变量-Random-Variable（R-V-）" class="heading-link"><i class="fas fa-link"></i></a><a href="#随机变量-Random-Variable（R-V-）" class="headerlink" title="随机变量 Random Variable（R.V.）"></a>随机变量 Random Variable（R.V.）</h3>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">(1) 定义：把实验结果数字化的表示方式；</span><br><span class="line">(2) 通常用大写英文字母表示；</span><br><span class="line">(3) 本质：随机变数是一种函数，X：S ➡ R；</span><br></pre></td></tr></table></div></figure>

<p>根据取值范围的不同，可分为：</p>
<ul>
<li>离散随机变量 Discrete R.V.<ul>
<li>随机变量的取值为有限个或可数个</li>
<li>可数集：正整数集{1，3，5，…}</li>
<li>不可数集：区间[0，1]</li>
<li>贝努利实验：只有两个可能结果的实验</li>
</ul>
</li>
<li>连续随机变量 Continuous R.V.</li>
</ul>

        <h3 id="累积分布函数-Cumulative-Distribution-Function-CDF"   >
          <a href="#累积分布函数-Cumulative-Distribution-Function-CDF" class="heading-link"><i class="fas fa-link"></i></a><a href="#累积分布函数-Cumulative-Distribution-Function-CDF" class="headerlink" title="累积分布函数 Cumulative Distribution Function (CDF)"></a>累积分布函数 Cumulative Distribution Function (CDF)</h3>
      <ul>
<li>计算X落在某个范围内的概率</li>
</ul>

        <h2 id="第二节-常用的离散型随机变量"   >
          <a href="#第二节-常用的离散型随机变量" class="heading-link"><i class="fas fa-link"></i></a><a href="#第二节-常用的离散型随机变量" class="headerlink" title="第二节 常用的离散型随机变量"></a>第二节 常用的离散型随机变量</h2>
      
        <h3 id="分布函数"   >
          <a href="#分布函数" class="heading-link"><i class="fas fa-link"></i></a><a href="#分布函数" class="headerlink" title="分布函数"></a>分布函数</h3>
      ]]></content>
      <tags>
        <tag>概率论</tag>
      </tags>
  </entry>
</search>
